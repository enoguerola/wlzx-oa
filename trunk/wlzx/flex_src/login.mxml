<?xml version="1.0" encoding="utf-8"?>

<!--当 Application 完成构建后立即触发 init() 方法，以实现对 Server 端 Java 的调用-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"   width="100%" pageTitle="登陆页面"   creationComplete="init();" height="100%"  xmlns:flexlib="http://code.google.com/p/flexlib/"  xmlns:viewers="flexlib.scheduling.scheduleClasses.viewers.*" xmlns:sliderClasses="flexlib.controls.sliderClasses.*" xmlns:baseClasses="flexlib.baseClasses.*">
	<fx:Style source="login.css"/>
	<fx:Declarations>
		<mx:StringValidator id="name_stringValidator" source="{j_username}" property="text"  requiredFieldError="登陆账号不能为空"/>
		<mx:StringValidator id="pw_stringValidator" source="{j_password}" property="text"  requiredFieldError="登陆密码不能为空"/>

		<mx:HTTPService id="myHttp" url="j_spring_security_check" showBusyCursor="true"  concurrency="last" method="POST" fault="service_faultHandler(event);" >  
			<mx:request>  
				<j_username>{j_username.text}</j_username>  
				<j_password>{j_password.text}</j_password> 
				<_spring_security_remember_me>{_spring_security_remember_me.selected}</_spring_security_remember_me>  
			</mx:request>  
		</mx:HTTPService>  
	</fx:Declarations>
	     <fx:Script>    
			       <![CDATA[   
					   import flash.display.Stage;
					   import flash.display.StageDisplayState;
					   
					   import mx.controls.Alert;
					   import mx.events.ValidationResultEvent;
					   import mx.managers.CursorManager;
					   import mx.managers.CursorManagerPriority;
					   import mx.rpc.events.FaultEvent;
					   import mx.rpc.events.ResultEvent;
					   import mx.validators.Validator;
					   private var validatorArr:Array;
					 
			         private function onExecuteSuccess(event:ResultEvent):void  
			         { 
//						Alert.show(e.toString());
						 var result:String=event.result as String;
						// Alert.show(result);
						 if(result=="success")
							 ExternalInterface.call("function() {" +
								 "window.location.href='home.html?time="+new Date()+"';" +
	//							 "window.open('home.html','FullWnd','fullscreen,scrollbars=no');" +
	//							 "this.parent.opener=null;" +
	//							 "this.parent.close();" +
								 "}"		 	
							 ); 
						 else{
							 resultMsg.text=result;
							 resultArea.visible=true;
						 }
	//					Alert.show(e.result.Result); 
			         } 
					 private function service_faultHandler(event:FaultEvent):void
					 {
		               // Alert.show("请求异常");
						 resultMsg.text="用户名密码错误";
						 resultArea.visible=true;
		             }
					  private function init():void{
						  initKeyboard();
						  myHttp.addEventListener(ResultEvent.RESULT, onExecuteSuccess);
						  validatorArr = new Array();
						  validatorArr.push(name_stringValidator);
						  validatorArr.push(pw_stringValidator);
						  callLater(function():void{
							  focusManager.setFocus(j_username);
//							  focusManager.setFocus(j_username);
						  });
						  
						  
					  }
					   private function validateForm():void {
						   var validatorErrorArray:Array = Validator.validateAll(validatorArr);;
						   var isValidForm:Boolean = validatorErrorArray.length == 0;
						   if (isValidForm) {
							   myHttp.url="j_spring_security_check?time="+new Date();
							   myHttp.send();
//							   myHttp.url="j_spring_security_check?time="+new Date();
//							   myHttp.send();//临时解决初次请求不响应问题？？
						   } else {
							   var err:ValidationResultEvent;
							   var errorMessageArray:Array = [];
							   for each (err in validatorErrorArray) {
								   var errField:String = FormItem(err.currentTarget.source.parent).label
								   errorMessageArray.push(errField + ": " + err.message);
							   }
//							   Alert.show(errorMessageArray.join("\n\n"), "请按照以下提示信息填写", Alert.OK);
							   
							   if( j_password.text==null||j_password.text==""){
								   j_password.dispatchEvent(new MouseEvent( MouseEvent.MOUSE_OVER , true,true));
								   j_password.setFocus();
							   }
							   if( j_username.text==null||j_username.text==""){
								  j_username.dispatchEvent(new MouseEvent( MouseEvent.MOUSE_OVER , true,true));
								  j_username.setFocus();
							   }
							   
						   }
					   }
					   private function reset():void {
						   resultMsg.text="";
						   resultArea.visible=false;
						   j_username.text="";
						   j_password.text="";
						  j_username.setFocus();
					   }
					   /* 初始化监听键盘事件 */
					   public function initKeyboard():void
					   {
						   loginButton.addEventListener(KeyboardEvent.KEY_DOWN,sendMessageUseEnterKey);  
					   } 
					   
					   /*监听回车键 */
					   private function sendMessageUseEnterKey(evt:KeyboardEvent):void
					   {
						   if(evt.keyCode==13)
						   {
							   validateForm();
						   }
					   }
					  
			         ]]>    
		 </fx:Script> 
	
	<s:layout>
		<s:VerticalLayout  horizontalAlign="center" verticalAlign="middle"/>
	</s:layout>
	<s:BorderContainer backgroundImage="@Embed(source='../WebContent/resources/oa/login_bg.jpg')" width="1019" height="559">
		<mx:Form width="400" height="300" left="630" top="170"   backgroundAlpha="0" >
			
			<mx:VBox   verticalGap="25" width="100%" height="90%" verticalAlign="middle"   >
				<mx:FormItem width="100%"  visible="false" height="30" required="true" id="resultArea" horizontalAlign="left" paddingLeft="10" >
					<s:Label text=""   verticalAlign="bottom" textAlign="center" id="resultMsg"   color="red" fontSize="12"/>
				</mx:FormItem>
				<s:HGroup width="100%" textAlign="center" verticalAlign="middle" gap="10" top="-20">
					<mx:FormItem  label="帐号："  paddingRight="10">
						<s:TextInput id="j_username" paddingLeft="10" name="j_username"  width="200" textAlign="left"/>
					</mx:FormItem>
					
				</s:HGroup>
				<s:HGroup width="100%"  top="20" textAlign="center" verticalAlign="middle" gap="10">		
					<mx:FormItem  label="密码："  paddingRight="10">
						<s:TextInput id="j_password"  paddingLeft="10" name="j_password" width="200" displayAsPassword="true" textAlign="left"/>
					</mx:FormItem>
				</s:HGroup>
				<s:HGroup width="100%" >
					<s:HGroup width="50"></s:HGroup>
					<mx:LinkButton  icon="@Embed(source='../WebContent/resources/oa/login_button_green.jpg')" click="validateForm();" id="loginButton"  width="80" paddingLeft="0" paddingRight="0" paddingTop="0" paddingBottom="0">
						
					</mx:LinkButton>
					
<!--					
					<mx:Image  source="@Embed(source='../WebContent/resources/oa/login_button_green.jpg')" click="validateForm(event);"></mx:Image>
-->					
					<s:HGroup width="20"></s:HGroup>
					
					<mx:LinkButton  icon="@Embed(source='../WebContent/resources/oa/login_button_yellow.jpg')" click="reset();" width="80"  paddingLeft="0" paddingRight="0" paddingTop="0" paddingBottom="0">
					
					</mx:LinkButton>
<!--					<mx:Image  source="@Embed(source='../WebContent/resources/oa/login_button_yellow.jpg')" click="reset();"></mx:Image>
-->				
				</s:HGroup>
				<s:HGroup width="100%" height="20">	
					<s:HGroup width="60"></s:HGroup>
					<s:CheckBox label="记住我" id="_spring_security_remember_me"  name="_spring_security_remember_me" />
					
					<mx:Image source="@Embed(source='../WebContent/resources/oa/login_wh.jpg')">
						
					</mx:Image>
				</s:HGroup>
			</mx:VBox>
		
			
		</mx:Form>
	</s:BorderContainer>

	
	
</s:Application>
