<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" 
		   xmlns:hc="com.hillelcoren.components.*"
		   xmlns:render="system.component.render.*"
		   layout="vertical" width="100%" creationComplete="init();" height="100%" 
		   xmlns:validator="system.component.validator.*" 
		   xmlns:valueObjects="oa.entity.*" 
		   xmlns:component="system.component.*" currentState="list" xmlns:mx1="library://ns.adobe.com/flex/mx" 
		   xmlns:mutiUpload="system.component.mutiUpload.*">
		<mx:RemoteObject id="noticeServiceRO" destination="noticeServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="updateNotice"  concurrency="last"  result="updateNoticeResult_resultHandler(event);" />
			<mx:method name="loadNoticeInfoById"  concurrency="last"  result="loadNoticeInfoById_resultHandler(event);" />
			<mx:method name="deleteNoticeById"  concurrency="last"  result="deleteNoticeByIdResult_resultHandler(event);" />
			<mx:method name="getNoticesByConditions"  concurrency="last"  result="getNoticesByConditions_resultHandler(event);" />
		</mx:RemoteObject>
		
		<valueObjects:NoticeModel id="form"/>
		
		<mx:RemoteObject id="systemServiceRO" destination="systemServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getDepartmentBySymbol"  concurrency="last"  result="getDepartmentBySymbolResult(event);" />
		</mx:RemoteObject>
	
	<mx:StringValidator id="title_stringValidator" source="{title}" property="text"  requiredFieldError="不能为空"/>
	<mx:StringValidator id="content_stringValidator" source="{rte}" property="text"  requiredFieldError="不能为空"/>
	<validator:ComboxValidator id="type_stringValidator" source="{noticeType}"/>

	<mx:states>
		<mx:State name="list">           
			<mx:RemoveChild target="{addPanel}"/>
		</mx:State>
		<mx:State name="add" enterState="add_activateHandler(event)">           
			<mx:RemoveChild target="{listPanel}"/>
		</mx:State>
	</mx:states>
	<mx:transitions>
		<mx:Transition id="myTransition1" fromState="list" toState="*" >
			<mx:Parallel id="t1" target="{addPanel}" >
				<mx:WipeLeft duration="1500"></mx:WipeLeft>
			</mx:Parallel>
		</mx:Transition>
		<mx:Transition id="myTransition2" fromState="*" toState="list" >
			<mx:Parallel id="t2" target="{listPanel}" >
				<mx:WipeRight duration="800">
				</mx:WipeRight>
			</mx:Parallel>
		</mx:Transition>
	</mx:transitions>
	
	<mx:Script> 
		<![CDATA[
			import basic.utils.DateUtil;
			import system.utils.ComboxUtils;
			
			import mx.collections.ArrayCollection;
			import mx.containers.FormItem;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.core.FlexGlobals;
			import mx.events.*;
			import mx.events.ListEvent;
			import mx.events.ValidationResultEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.*;
			import mx.validators.Validator;
			
			import system.component.WlzxLockWin;
			import system.component.validator.ComboxValidator;
			import system.entity.DepartmentModel;
			import system.utils.*;
			import basic.utils.DateUtil;
			
			private var validatorArr:Array;
			
			public var scopes:ArrayCollection = new ArrayCollection( 
				[	{label:"全部", data:null},  
					{label:"学校", data:"1"},  
					{label:"部门", data:"2"}]); 
			
			public var noticeScopeList:ArrayCollection = new ArrayCollection( 
				[	{label:"请选择", data:null},
					{label:"校级公告", data:"0"},  
					{label:"部门公告", data:"1"}]);
			
			public var noticeTypeList:ArrayCollection = new ArrayCollection( 
				[
					{label:"请选择", data:null},
					{label:"重要通知", data:"重要通知"}]);
			
			[Bindable] 
			public var departmentList:ArrayCollection = new ArrayCollection();
			
			private function init():void{
				this.currentState='list';
				var urlRequest:URLRequest = new URLRequest("spring/attachmentUpload.action");
				upload.urlRequest = urlRequest;
				search_account.dataProvider=this.parentApplication.allTeacherAcccounts;
				systemServiceRO.getDepartmentBySymbol("root");
			}
			protected function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
				
			}
			protected function updateNoticeResult_resultHandler(event:ResultEvent):void
			{
				Alert.show("更新成功");
				this.currentState='list';
				search();
			}
			protected function loadNoticeInfoById_resultHandler(event:ResultEvent):void
			{
				Alert.show("load");
				form = event.result as NoticeModel;
				title.text = form.title;
				noticeType.selectedIndex = ComboxUtils.findIndex(noticeTypeList, form.type);
				noticeScope.selectedIndex = ComboxUtils.findIndex(noticeScopeList, form.scope);
				postdepartment.selectedIndex = ComboxUtils.findIndex(departmentList, form.postDepartmentId);
				
				if(form.emergence == 1)
					emergence.selected = true;
				rte.text = form.content;
			}
			
			protected function deleteNoticeByIdResult_resultHandler(event:ResultEvent):void
			{
				if(event.result as Boolean==true){
					Alert.show("删除成功");
				}else{
					Alert.show("无法删除");
				}
				search();
			}			
		
			
			protected function getNoticesByConditions_resultHandler(event:ResultEvent):void
			{
				var allList:ArrayCollection = event.result as ArrayCollection;
				noticeTable.initdata(allList);
			}
			private function search():void{
				var teacher:String=search_account_id.text;
				var type:String=search_type.selectedItem.data;
				var scope:String=search_scope.selectedItem.data;
				var emergence:int = 0;
				if(_emergence.selected)
					emergence = 1;
				var department:String = search_department.selectedItem.data;
				Alert.show(department);
				var submitBeginDate:String=search_date_begin.text;
				var submitEndDate:String=search_date_end.text;
				noticeServiceRO.getNoticesByConditions(teacher,type,scope,emergence + "", department, "","1",
					submitBeginDate,submitEndDate,noticeTable.curpage, noticeTable.pagecount);
			}
			private function addInit():void{
				
			}
			public function enterAdd(type:int):void{
				addUpdateFlag.text="add";
				this.currentState='add';
			}
			
			public function editInit(id:String):void{
				noticeServiceRO.loadNoticeInfoById(id);
			}
			
			public function enterEdit(id:String):void{
				addUpdateFlag.text="update"+"_"+id;
				this.currentState='add';
			}
			
			public function deleteNotice(id:String):void{
				Alert.show("你确定要删除该公告吗?","确认",Alert.YES | Alert.NO,null,function(event:CloseEvent):void{
					if(event.detail == Alert.YES)
					{
						noticeServiceRO.deleteNoticeById(id);
					}
				});
			}
			
			public function detailNotice(id:String):void{
				var parent:Object=(Object)(((Object)(this.owner)).owner);
				parent.addTab("noticeDetial","查看公告",parent.nav,"oa/notice/noticeDetail.swf",null,id);
			}
			
			protected function add_activateHandler(event:Event):void
			{
				if(addUpdateFlag.text=="add")
					addInit();
				else {
					var id:String=addUpdateFlag.text.split("_")[1];
					editInit(id);
				}
			}
			
			protected function add_clickHandler(event:MouseEvent):void
			{
				if(validateInput())
				{
					form.content = rte.text;
					if(emergence.selected)
						form.emergence = 1;
					else
						form.emergence = 0;
					form.postDepartmentId = postdepartment.selectedItem.data;
					form.scope = parseInt(noticeScope.selectedItem.data);
					
					form.title = title.text;
					form.type = noticeType.selectedItem.data;
					noticeServiceRO.updateNotice(form, upload.idList);
				}
			}
			
			private function validateInput():Boolean
			{	
				validatorArr = new Array();
				validatorArr.push(title_stringValidator);
				validatorArr.push(content_stringValidator);
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					return true;
				} else {
					return false;
				}
			}

			private function searchAccountHandleAutoCompleteChange():void
			{
				var color:Object = search_account.selectedItem;
				
				if (color != null && color.hasOwnProperty( "id" ))
				{
					search_account_id.text=color.id;
				} else{
					search_account_id.text="";
				}               
			}
			
			private function getDepartmentBySymbolResult(event:ResultEvent):void {
				var _department:DepartmentModel = event.result as DepartmentModel;
				buildSubDepartments(_department,departmentList,0);
				postdepartment.selectedIndex = 0;
				search_department.selectedIndex = 0;
				search();
			}
			
			private function buildSubDepartments(department:DepartmentModel,resultList:ArrayCollection,depth:int):void{
				var headText:String="";
				for(var j:int = 0;j<depth;j++)
					headText=headText.concat("--");
				headText=headText.concat(department.name);
				resultList.addItem( {data:department.id, label:headText})
				var list:ArrayCollection = ArrayCollection(department.subordinates);			
				if(list.length>0){
					for (var i:int = 0; i < list.length; i++){
						var _department:DepartmentModel = list.getItemAt(i) as DepartmentModel;	
						buildSubDepartments(_department,resultList,depth+1);
					}
				}		
				
			}
			
			private function showHide():void
			{
				if(att_area.height==0)
					att_area.height=420;
				else 
					att_area.height=0;
			}
		]]> 		
	</mx:Script> 
	<mx:Component id="searchAccountDropDownItemRenderer">
		<render:AdvancedItemRenderer selectedItems="{ outerDocument.search_account.selectedItems }" />
	</mx:Component>
	
	<mx:Panel width="100%" height="100%"   title="公告管理"  borderVisible="false" id="panel" dropShadowVisible="false" >
		<mx:VBox width="100%" height="100%" id="listPanel">
			<mx:VBox width="100%" height="100%"  verticalGap="10" verticalAlign="middle" horizontalAlign="center" >
				<mx:VBox width="100%" height="120"   horizontalGap="10" verticalAlign="middle" horizontalAlign="left" borderVisible="true" paddingTop="10" paddingBottom="10"   paddingLeft="10" paddingRight="10">
					<mx:FormHeading label="条件查询">
					</mx:FormHeading>
					<mx:HBox>
						<mx:HBox verticalAlign="middle">
							<mx:Label  text="发布人"  width="100"  textAlign="right"/>
							<hc:AutoComplete id="search_account"  labelField="name"  width="300"  matchType="anyPart" prompt="选择"  change="{ searchAccountHandleAutoCompleteChange() }" dropDownItemRenderer="{ searchAccountDropDownItemRenderer }" selectedItemStyleName="none">
							</hc:AutoComplete>
							<mx:Label id="search_account_id" visible="false">
							</mx:Label>
						</mx:HBox>	
						<mx:HBox>
							<mx:Label  text="公告类型"  width="100"  textAlign="right"/>
							<mx:ComboBox id="search_type"  dataProvider="{noticeTypeList}" selectedIndex="0"  editable="false" width="80"/>
						</mx:HBox>
						<mx:HBox verticalAlign="middle">
							<mx:Label  text="公告范围"  width="100"  textAlign="right"/>
							<mx:ComboBox id="search_scope"  dataProvider="{scopes}" selectedIndex="0"  editable="false"  width="80"/>
						</mx:HBox>
						<mx:HBox verticalAlign="middle">
							<mx:Label  text="优先级 "  width="100"  textAlign="right"/>
							<mx:CheckBox label="紧急" id="_emergence"/>
						</mx:HBox>
					</mx:HBox>
					<mx:HBox>
						<mx:HBox>
							<mx:Label  text="发布部门"  width="100"  textAlign="right"/>
							<mx:ComboBox id="search_department"  selectedIndex="0" dataProvider="{departmentList}" editable="false" width="120"/>
						</mx:HBox>
						<mx:HBox verticalAlign="middle">
							<mx:Label  text="发布日期"  width="100"  textAlign="right"/>
							<mx:DateField id="search_date_begin"   formatString="YYYY-MM-DD"  editable="false" width="120"/>
							<mx:Label  text="--"  width="20" textAlign="center"/>
							<mx:DateField id="search_date_end"  formatString="YYYY-MM-DD" editable="false" width="120"/>
						</mx:HBox>	
						<mx:Button  label="搜索"  width="70"   click="search()"/>
					</mx:HBox>
		
				</mx:VBox>
				<mx:HBox width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingBottom="10">
					<mx:Panel width="100%" height="100%"  styleName="customPanel" title="查询结果"  cornerRadius="5" borderVisible="false" dropShadowVisible="false">
						
						<component:WlzxPageDataGrid width="100%" height="100%"   borderVisible="false"  autoLayout="true"  borderAlpha="0.2" verticalAlign="middle"   id="noticeTable" pagecount="10"  >				
							<component:mygridcolumns>
								<mx:DataGridColumn textAlign="center" headerText="类型"  width="60">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
												<mx:Label text="{data.type}">
												</mx:Label>
											</mx:HBox>																		
										</mx:Component>						
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="公告标题" width="100">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
												<mx1:Text text="{data.title}" width="100">
												</mx1:Text>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="发布时间" width="100" dataField="postTime" labelFunction="DateUtil.datagridFormatDate">
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="发布部门"  width="100" dataField="postDepartmentId">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
												<mx1:Text text="{this.parentApplication.getDepartmentNameById(data.postDepartmentId)}" width="100">
												</mx1:Text>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="发布人" width="100" >
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
												<mx1:Text text="{this.parentApplication.getTeacherNameByAccountId(data.posterId)}" width="100">
												</mx1:Text>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								
								<mx:DataGridColumn textAlign="center" headerText="操作" width="100">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalGap="0">
												<mx:LinkButton  label="[编辑]"   click="{this.outerDocument.enterEdit(data.id);}" enabled="{checkAuth(data)}">											
												</mx:LinkButton>
												<mx:LinkButton  label="[删除]"   click="{this.outerDocument.deleteNotice(data.id);}" enabled="{checkAuth(data)}">											
												</mx:LinkButton>
												<mx:Script>
													<![CDATA[
														//提示信息
														import cn.org.rapid_framework.flex_security.SecurityControler;
														
														import mx.controls.Alert;
														import mx.core.UIComponent;
														private function checkAuth(data:Object):Boolean{
															return true;
														}
													]]>
												</mx:Script>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="详细" width="60">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalGap="0">
												<mx:LinkButton  label="[详细]"  click="{this.outerDocument.detailNotice(data.id);}">											
												</mx:LinkButton>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
							</component:mygridcolumns>
						</component:WlzxPageDataGrid>
					</mx:Panel>
				</mx:HBox>
			</mx:VBox>
		</mx:VBox>
		
		<mx:VBox width="100%" height="100%" id="addPanel">
			<mx:HBox verticalAlign="middle" horizontalAlign="right" width="100%" fontSize="12" id="returnArea">
				<mx:HBox width="100%" height="30" paddingLeft="20"  horizontalGap="0" backgroundColor="#C5E497"  verticalAlign="middle">
					<mx:Label text="|"/>
					<mx:LinkButton  label="返回" icon="@Embed(source='../WebContent/resources/common/tools/button_back_icon.png')" click="this.currentState='list';" />
					<mx:Label text="|"/>
				</mx:HBox>
				
			</mx:HBox>
			<mx:VBox width="100%" height="50%"   horizontalGap="10" verticalAlign="middle" horizontalAlign="left" borderVisible="true" paddingTop="10" paddingBottom="10"   paddingLeft="10" paddingRight="10">
				<mx:VBox  width="100%" height="100%">
					<mx:Form width="100%" height="100%">
						<mx:FormItem label="标题" width="100%">
							<mx:TextInput width="100%" id="title"/>
						</mx:FormItem>
						<mx:FormItem label="公告类型" width="100%">
							<mx:HBox width="100%">
								<mx:ComboBox id="noticeType" dataProvider="{noticeTypeList}" selectedIndex="1" labelField="label"/>
								<mx:FormItem label="公告范围">
									<mx:ComboBox id="noticeScope" dataProvider="{noticeScopeList}" selectedIndex="1" labelField="label"/>
								</mx:FormItem>
								<mx:FormItem label="发布部门">
									<mx:ComboBox id="postdepartment" dataProvider="{departmentList}" labelField="label"/>
								</mx:FormItem>
								<mx:FormItem>
									<mx:CheckBox label="紧急" id="emergence"/>
								</mx:FormItem>
							</mx:HBox>
						</mx:FormItem>
						
						<mx:FormItem label="内容" width="100%" height="100%">
							<mx:RichTextEditor id="rte" title="Halo RichTextEditor"   headerHeight="0" width="100%" height="100%" dropShadowVisible="false" text="" >
							</mx:RichTextEditor>
						</mx:FormItem>
						<mx:HBox width="100%" height="20">
							<mx:LinkButton  label="附件区" icon="@Embed(source='../WebContent/resources/common/tools/button_attachment_icon.png')" click="showHide()"/>
						</mx:HBox>
						<mx:FormItem  width="100%"  height="0" id="att_area" paddingLeft="10" paddingRight="10">
							<mx:VBox width="100%">
								<mutiUpload:upload width="100%" id="upload">
								</mutiUpload:upload>
							</mx:VBox>
						</mx:FormItem>
					</mx:Form>
				</mx:VBox>
				<mx:HBox horizontalAlign="right" width="100%">
					<mx:Label id="addUpdateFlag" visible="false" text="add"/>
					<mx:Button label="发布" id="postButton" click="add_clickHandler(event)"/>
				</mx:HBox>
			</mx:VBox>
		</mx:VBox>
	</mx:Panel>
</mx:Module>
