<?xml version="1.0" encoding="utf-8"?>
<mx:VBox   xmlns:mx="http://www.adobe.com/2006/mxml" 
		  xmlns:editor="com.flexcalendar.components.calendar.editor.*"
		  xmlns:hc="com.hillelcoren.components.*"
		  xmlns:render="system.component.render.*"
		  xmlns:mutiUpload="system.component.mutiUpload.*"
		  width="100%" height="100%"  xmlns:valueObjects="oa.entity.*"   creationComplete="init();" >
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<valueObjects:ConferenceModel id="form"/>
		<!--<mx:RemoteObject id="systemServiceRO" destination="systemServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getDepartmentBySymbol"  concurrency="last"  result="getDepartmentBySymbolResult(event);" />
		</mx:RemoteObject>-->
		<mx:RemoteObject id="placeServiceRO" destination="placeServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getPlacesByCondition"  concurrency="last"  result="getPlacesByCondition_resultHandler(event);" />
		</mx:RemoteObject>
		<mx:RemoteObject id="conferenceServiceRO" destination="conferenceServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="addConference"  concurrency="last"  result="addConferenceResult_resultHandler(event);" />
			<mx:method name="updateConference"  concurrency="last"  result="updateConferenceResult_resultHandler(event);" />
			<mx:method name="saveSummary"  concurrency="last"  result="saveSummary_resultHandler(event);" />
					
			<mx:method name="validateTimeAndPositionConflict"  concurrency="last"  result="validateTimeAndPositionConflict_resultHandler(event);" />
			<mx:method name="adjustConferenceById"  concurrency="last"  result="adjustConferenceResult_resultHandler(event);" />
			<mx:method name="get"  concurrency="last"  result="get_resultHandler(event);" />
		</mx:RemoteObject>
	<mx:RemoteObject id="attachmentServiceRO" destination="attachmentServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
		<mx:method name="remove"  concurrency="last"  result="removeAttachment_resultHandler(event);" />
	</mx:RemoteObject>
		<mx:Component id="searchAccountDropDownItemRenderer">
			<render:AdvancedItemRenderer selectedItems="{ outerDocument.linkman_account.selectedItems }" />
		</mx:Component>
	
	<mx:StringValidator id="title_stringValidator" source="{cname}" property="text"  requiredFieldError="会议名称不能为空"/>
	<mx:StringValidator id="date_stringValidator" source="{date}" property="text"  requiredFieldError="会议时间不能为空"/>
	<mx:StringValidator id="place_stringValidator" source="{places}" property="text"  requiredFieldError="会议地点不能为空"/>
	<mx:StringValidator id="department_stringValidator" source="{departments}" property="text"  requiredFieldError="会议使用部门不能为空"/>
	<mx:StringValidator id="usersIds_stringValidator" source="{users}" property="text"  requiredFieldError="会议人员不能为空"/>
	<mx:StringValidator id="linkman_stringValidator" source="{linkman_account}" property="text"  requiredFieldError="会议联系人不能为空"/>
	<mx:StringValidator id="contactPhone_stringValidator" source="{contactPhone}" property="text"  requiredFieldError="会议联系人电话不能为空"/>
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.StateChangeEvent;
			import mx.events.ValidationResultEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.*;
			import mx.validators.Validator;
			
			import oa.common.popWin.StaffSelectPopWin;
			import oa.entity.AttachmentModel;
			
			import system.entity.*;
			import system.event.UploadEvent;
			import system.utils.*;
			private var validatorArr:Array;
			[Binary]
			public var departmentList:ArrayCollection = new ArrayCollection();
			[Binary]
			public var placeList:ArrayCollection = new ArrayCollection();
			[Binary]
			public var usersSelected:Array= new Array();
			private function init():void {
				departmentList=parentApplication.currentUserFirstLevelDepartment;
				departmentList.addItem( {data:"-1", headerText:"×校外"});
				departmentList = this.parentApplication.currentUserDepartment;
				departments.dataProvider= departmentList;
				departments.selectedIndex=0;
				/* systemServiceRO.getDepartmentBySymbol("root"); */
				placeServiceRO.getPlacesByCondition(null,null,null,null,null,null,null);
//				Alert.show("aaaaaaaaa");
				linkman_account.dataProvider=this.parentApplication.allTeacherAcccounts;
				var urlRequest:URLRequest = new URLRequest(parentApplication.homeUrl+"spring/attachmentUpload.action");
				upload.urlRequest = urlRequest;
				summaryUpload.urlRequest = urlRequest;
//				var urlRequest:URLRequest = new URLRequest("spring/attachmentUpload.action");
//				upload.urlRequest = urlRequest;

			}
			private function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
			protected function addConferenceResult_resultHandler(event:ResultEvent):void
			{
				//if(event.result==true)
					Alert.show("添加成功");
					dispatchEvent(new  StateChangeEvent("stateChangeEvent"));
				//else Alert.show("添加失败");
//				var parent:Object=(Object)(this.owner);
//				parent.currentState='list';
//				parent.search();
			}
			protected function updateConferenceResult_resultHandler(event:ResultEvent):void
			{
//				if(event.result==true){
					Alert.show("更新成功");
					dispatchEvent(new  StateChangeEvent("stateChangeEvent"));

//				}
//				else Alert.show("更新失败");
//				var parent:Object=(Object)(this.owner);
//				parent.currentState='list';
//				parent.search();
			}
			protected function removeAttachment_resultHandler(event:ResultEvent):void
			{
				//Alert.show("aaa");
			
			}
			
			protected function validateTimeAndPositionConflict_resultHandler(event:ResultEvent):void
			{
				//unLockWin();
				var list:ArrayCollection = event.result as ArrayCollection;
				if(list!=null&&list.length>0){//冲突
					var errorMessageArray:Array = [];
						for(var i:int;i<list.length;i++){
							var errFields:String=list.getItemAt(i) as String;
							errorMessageArray.push((errFields.split(",")[0]+"--"+errFields.split(",")[1]+": " + errFields.split(",")[2]+"["+ (errFields.split(",")[4]=='1'?'预约中':'已安排')+"]"));
						}
						
					Alert.show(errorMessageArray.join("\n\n"), "该场地该时间段存在以下冲突，请查阅会议安排表后调整", Alert.OK);
				}else{//不冲突
					conferenceServiceRO.adjustConferenceById(form.id,form.meetingDate,form.beginTime,form.endTime,form.placeId);
				}
				
			}
			protected function adjustConferenceResult_resultHandler(event:ResultEvent):void
			{
//				if(event.result==true){
					Alert.show("落实成功");
					dispatchEvent(new  StateChangeEvent("stateChangeEvent"));

//				}
//				else Alert.show("落实失败");
//				var parent:Object=(Object)(this.owner);
//				parent.currentState='list';
//				parent.search();
			}
			protected function saveSummary_resultHandler(event:ResultEvent):void
			{
				//				if(event.result==true){
				Alert.show("总结保存成功");
				dispatchEvent(new  StateChangeEvent("stateChangeEvent"));
				
				//				}
				//				else Alert.show("落实失败");
				//				var parent:Object=(Object)(this.owner);
				//				parent.currentState='list';
				//				parent.search();
			}
			
			protected function get_resultHandler(event:ResultEvent):void
			{
				form = event.result as ConferenceModel;
				date.text=CommonUtils.formatDate(form.meetingDate,"YYYY-MM-DD");
				begin_hour.value=parseInt(form.beginTime.split(":")[0]);
				begin_minute.value=parseInt(form.beginTime.split(":")[1]);
				end_hour.value=parseInt(form.endTime.split(":")[0]);
				end_minute.value=parseInt(form.endTime.split(":")[1]);
				cname.text=form.name;
				places.selectedIndex=ComboxUtils.findIndex(placeList,form.placeId);
				attendNum.text=form.attendNum;
				departments.selectedIndex=ComboxUtils.findIndex(departmentList,form.departmentId);
				linkman_account_id.text=form.contactUserId;
				linkman_account.selectedItem=parentApplication.getItemByAccountId(form.contactUserId);
				contactPhone.text=form.contactPhoneNumber;
				services.text=form.serviceNeeded;					
				description.text=form.description;
				usersSelected=new Array(); 
				var array:Array=form.teacherAttendIds.split(";");
				if(array!=null&&array.length>0)
				for(var i:int=0;i<array.length;i++){
					//Alert.show(alreadyChoose[i].id);
					if(array[i]!=null&&array[i]!="")
					usersSelected.push({data:parentApplication.getTeacherNameByAccountId(array[i]),id:array[i]});
				}
				organizedUsersSelected();
				var uploadList:Array=new Array();
				var summaryUploadList:Array=new Array();
				for each(var model:AttachmentModel in form.attachments){
					uploadList.push({label:model.name,data:parseInt(model.size)/1000+"KB",width:145,id:model.id});
				//	uploadListfileRef.fileList
				}
				for each(var model:AttachmentModel in form.summaryAttachments){
					summaryUploadList.push({label:model.name,data:parseInt(model.size)/1000+"KB",width:145,id:model.id});
				}
//				upload.addEventListener(UploadEvent.DELETED,function(e:UploadEvent):void{
//					//Alert.show(e.id+"--");
//					attachmentServiceRO.remove(e.id);
//
//				});
			
				upload.uploadAlready_list.dataProvider=uploadList;
				summaryUpload.uploadAlready_list.dataProvider=summaryUploadList;
			
			}
//			private function getDepartmentBySymbolResult(event:ResultEvent):void {
//				var department:Object=event.result;
//				buildSubDepartments(department,departmentList,0);	
//				departments.dataProvider=departmentList;
//			}
//			private function buildSubDepartments(department:Object,resultList:ArrayCollection,depth:int):void{
//				var headText:String="";
//				for(var j:int = 0;j<depth;j++)
//					headText=headText.concat("-");
//				headText=headText.concat(department.name);
//				resultList.addItem( {data:department.id, headerText:headText})
//				var list:ArrayCollection = ArrayCollection(department.subordinates);			
//				if(list.length>0){
//					for (var i:int = 0; i < list.length; i++){
//						var _department:Object = list.getItemAt(i);	
//						buildSubDepartments(_department,resultList,depth+1);
//					}
//				}		
//				
//			}
			protected function getPlacesByCondition_resultHandler(event:ResultEvent):void{
				var list:ArrayCollection=event.result as ArrayCollection;
				if(list.length>0){
					for (var i:int = 0; i < list.length; i++){
						var _place:Object = list.getItemAt(i);	
						placeList.addItem( {data:_place.id, headerText:_place.name+"["+_place.position+"]"})
					}
				}	
				places.dataProvider=placeList;
			}
		
			private var staffSelectPopWin:StaffSelectPopWin=null;
			private function openStaffSelectPopWin(event:Event):void{
				if(staffSelectPopWin!=null)PopUpManager.removePopUp(staffSelectPopWin);
				staffSelectPopWin=StaffSelectPopWin(PopUpManager.createPopUp(this,StaffSelectPopWin,true)); 
				PopUpManager.centerPopUp(staffSelectPopWin);
				staffSelectPopWin.percentHeight=100;
				staffSelectPopWin.percentWidth=100;
				staffSelectPopWin.x=FlexGlobals.topLevelApplication.stage.stageWidth/2-staffSelectPopWin.width/2;
				staffSelectPopWin.y=FlexGlobals.topLevelApplication.stage.stageHeight/2-staffSelectPopWin.height/2;
				staffSelectPopWin.owner=this;
				
				
			}
			private function searchAccountHandleAutoCompleteChange():void
			{
				var color:Object = linkman_account.selectedItem;
				
				if (color != null && color.hasOwnProperty( "id" ))
				{
					linkman_account_id.text=color.id;
				} else{
					linkman_account_id.text="";
				}               
			}
			private function showHide():void{
				if(att_area.height==0)
					att_area.height=340;
				else att_area.height=0;
			}
			protected function add_clickHandler(event:MouseEvent):void
			{
				if(validateInput()){
					var beginTime:String=((begin_hour.value)>=10?(begin_hour.value):"0"+(begin_hour.value))+":"+((begin_minute.value)>=10?(begin_minute.value):"0"+(begin_minute.value));
					var endTime:String=((end_hour.value)>=10?(end_hour.value):"0"+(end_hour.value))+":"+((end_minute.value)>=10?(end_minute.value):"0"+(end_minute.value));
					
					if(addUpdateFlag.text=="add"){
						form = new ConferenceModel();
						form.applyUserId=this.parentApplication.currentUser.id;
					
						form.meetingDate=DateFormatter.parseDateString(date.text);
						form.name=cname.text;
						
						form.beginTime=beginTime;
						form.endTime=endTime;
						form.placeId=places.selectedItem.data;
						form.attendNum=attendNum.text;
						form.departmentId=departments.selectedItem.data;
						form.contactUserId=linkman_account_id.text;
						form.contactPhoneNumber=contactPhone.text;
						form.serviceNeeded=services.text;					
						form.description=description.text;
						form.teacherAttendIds=usersIds.text;

						conferenceServiceRO.addConference(form, upload.idList);
					}else if(addUpdateFlag.text == "update"+"_"+form.id){
						form.applyUserId=this.parentApplication.currentUser.id;
						
						form.meetingDate=DateFormatter.parseDateString(date.text);
						form.name=cname.text;
								
						form.beginTime=beginTime;
						form.endTime=endTime;
						form.placeId=places.selectedItem.data;
						form.attendNum=attendNum.text;
						form.departmentId=departments.selectedItem.data;
						form.contactUserId=linkman_account_id.text;
						form.contactPhoneNumber=contactPhone.text;
						form.serviceNeeded=services.text;					
						form.description=description.text;
						form.teacherAttendIds=usersIds.text;
						conferenceServiceRO.updateConference(form, upload.addIds,upload.removeIds);
					}else if(addUpdateFlag.text == "adjust"+"_"+form.id){
						form.meetingDate=DateFormatter.parseDateString(date.text);
						form.beginTime=beginTime;
						form.endTime=endTime;
						form.placeId=places.selectedItem.data;						
						conferenceServiceRO.validateTimeAndPositionConflict(form.id,form.meetingDate,form.beginTime,form.endTime,form.placeId);
						//lockWin();
					}else if(addUpdateFlag.text == "summary"+"_"+form.id){
//						form.meetingDate=DateFormatter.parseDateString(date.text);
//						form.beginTime=beginTime;
//						form.endTime=endTime;
//						form.placeId=places.selectedItem.data;						
						conferenceServiceRO.saveSummary(form.id,summaryUpload.addIds,summaryUpload.removeIds);
						//lockWin();
					}
				}
			}
			public function addInit():void{
				saveButton.label="新增";
				begin_hour.value=begin_hour.minimum;
				begin_minute.value=begin_minute.minimum;
				end_hour.value=end_hour.minimum;
				end_minute.value=end_minute.minimum;
				date.text="";
				cname.text="";
				places.selectedIndex=0;
				attendNum.text="";
				departments.selectedIndex=0
				linkman_account.selectedItem=null;
				//Alert.show("aa");
//				linkman_account_id.text="";
//				linkman_account.text="";
				contactPhone.text="";
				services.text="";
				description.text="";
				usersSelected=new Array(); 
				organizedUsersSelected();
				hideSummaryArea();
				enabledConferenceChange();
				upload.empty();
				summaryUpload.empty();
			}
			public function editInit(id:String):void{
				saveButton.label="更新";
				conferenceServiceRO.get(id);
			}
			
			private function validateInput():Boolean
			{	
				validatorArr = new Array();
				validatorArr.push(title_stringValidator);
				validatorArr.push(date_stringValidator);
				validatorArr.push(place_stringValidator);
				validatorArr.push(department_stringValidator);
				validatorArr.push(usersIds_stringValidator);
				validatorArr.push(linkman_stringValidator);
				validatorArr.push(contactPhone_stringValidator);
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					var beginTime:String=((begin_hour.value)>=10?(begin_hour.value):"0"+(begin_hour.value))+":"+((begin_minute.value)>=10?(begin_minute.value):"0"+(begin_minute.value));
					var endTime:String=((end_hour.value)>=10?(end_hour.value):"0"+(end_hour.value))+":"+((end_minute.value)>=10?(end_minute.value):"0"+(end_minute.value));
//					Alert.show("bb"+beginTime);
//					Alert.show("e"+endTime);
					if(endTime>beginTime)
					return true;
					else {
						Alert.show("会议结束时间必须大于开始时间");
						return false;
					}
				} else {
					return false;
				}
			}
			public function organizedUsersSelected():void{
			//	if(usersSelected!=null&&usersSelected.length>0){
					var str:String="";
					for (var i:int = 0; i < usersSelected.length; i++){
						str=str.concat(usersSelected[i].data+";");
					}
					users.text=str;
					canculateUsersSelected();
			//	}
			}
			private function canculateUsersSelected():void{
				var str:String="";
				for(var i:int=0;i<usersSelected.length;i++){
					str=str.concat(usersSelected[i].id+";");
				}
				usersIds.text=str;
			}
			public function hideSummaryArea():void{
				summaryArea.height=0;
			}
			public function showSummaryArea():void{
				summaryArea.height=360;
			}
			public function disabledTimePositionChange():void{
				places.enabled=false;
				date.enabled=false;
				begin_hour.enabled=false;
				begin_minute.enabled=false;
				end_hour.enabled=false;
				end_minute.enabled=false;
			}
			
			public function enabledTimePositionChange():void{
				places.enabled=true;
				date.enabled=true;
				begin_hour.enabled=true;
				begin_minute.enabled=true;
				end_hour.enabled=true;
				end_minute.enabled=true;
			}
			public function disabledConferenceChange():void{
				cname.enabled=false;
				places.enabled=false;
				date.enabled=false;
				begin_hour.enabled=false;
				begin_minute.enabled=false;
				end_hour.enabled=false;
				end_minute.enabled=false;
				attendNum.enabled=false;
				departments.enabled=false;
				openControl.enabled=false;
				services.enabled=false;
				description.enabled=false;
				linkman_account.enabled=false;
				services.enabled=false;
				contactPhone.enabled=false;
				attrArea.enabled=false;
			}
			public function enabledConferenceChange():void{
				cname.enabled=true;
				places.enabled=true;
				date.enabled=true;
				begin_hour.enabled=true;
				begin_minute.enabled=true;
				end_hour.enabled=true;
				end_minute.enabled=true;
				attendNum.enabled=true;
				departments.enabled=true;
				openControl.enabled=true;
				services.enabled=true;
				description.enabled=true;
				linkman_account.enabled=true;
				services.enabled=true;
				contactPhone.enabled=true;
				attrArea.enabled=true;
			}
		]]>
	</mx:Script>
	
	<mx:VBox  width="100%" >
		<mx:Form width="100%"  verticalGap="20">
			<mx:FormItem label="会议名称" width="100%" required="true">
				<mx:TextInput width="100%" id="cname"/>
			</mx:FormItem>
			<mx:FormItem label="会议时间" width="100%" required="true">
				<mx:HBox width="100%">
				<mx:DateField dayNames='["日", "一", "二", "三", "四", "五", "六"]'  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]' yearNavigationEnabled="true" id="date"   formatString="YYYY-MM-DD"  editable="false" width="120"/>
				<mx:NumericStepper minimum="7" maximum="23" id="begin_hour">
					
				</mx:NumericStepper>
				<mx:NumericStepper minimum="0" maximum="59" id="begin_minute">
					
				</mx:NumericStepper>
				<mx:Label text="--"/>
				<mx:NumericStepper minimum="7" maximum="23" id="end_hour">
					
				</mx:NumericStepper>
				<mx:NumericStepper minimum="0" maximum="59" id="end_minute">
					
				</mx:NumericStepper>
				<mx:FormItem label="会议地点" width="100%" required="true">
					<mx:ComboBox   width="200" id="places" labelField="headerText"  selectedIndex="0"  />
				</mx:FormItem>
				</mx:HBox>
			</mx:FormItem>

			<mx:FormItem label="会议人数" width="100%" >
				<mx:HBox width="100%">
					<mx:TextInput width="60" id="attendNum"/>
					<mx:Label  text="人"/>
					<mx:FormItem label="使用部门" width="100%" required="true">
						<mx:ComboBox   width="200" id="departments" labelField="label" dataProvider="{departmentList}" selectedIndex="0"  />
					</mx:FormItem>
				</mx:HBox>
				
			</mx:FormItem>
			<mx:FormItem label="与会人员" width="100%"  required="true">
				<mx:HBox width="100%">
					<mx:TextInput id="users" width="400"  editable="false" />
					<mx:LinkButton label="打开" click="openStaffSelectPopWin(event)" width="50" id="openControl"/>
					<mx:TextInput id="usersIds" visible="false" width="400"/>
				</mx:HBox>
			</mx:FormItem>
			<mx:FormItem label="会议服务" width="100%">
				<mx:TextInput width="100%" id="services"/>
			</mx:FormItem>
			<mx:FormItem label="会议描述" width="100%">
				<mx:TextArea width="100%" id="description"/>
			</mx:FormItem>
			<mx:FormItem label="联系人" width="100%"  required="true">
				<mx:HBox width="100%">
					<hc:AutoComplete id="linkman_account"  labelField="name"  width="150"  matchType="anyPart" prompt="选择教师"  change="{ searchAccountHandleAutoCompleteChange() }" dropDownItemRenderer="{ searchAccountDropDownItemRenderer }" selectedItemStyleName="none">
						
					</hc:AutoComplete>
					<mx:Label id="linkman_account_id" visible="false">
						
					</mx:Label>
					<mx:FormItem label="联系电话" width="100%" required="true">
						<mx:TextInput id="contactPhone"/>
					</mx:FormItem>
				</mx:HBox>
					
			</mx:FormItem>
		
			
		</mx:Form>
	</mx:VBox>
	<mx:VBox id="attrArea"  width="100%">
		<mx:HBox width="100%" height="20">
			<mx:LinkButton  label="会议附件区" icon="@Embed(source='../WebContent/resources/common/tools/button_attachment_icon.png')" click="showHide()"/>
		</mx:HBox>
		<mx:VBox  width="100%"  height="0" id="att_area" paddingLeft="10" paddingRight="10">
				<mutiUpload:upload width="100%" id="upload" >
				</mutiUpload:upload>
		</mx:VBox>
	</mx:VBox>
	<mx:VBox id="summaryArea"  width="100%">
		<mx:HBox width="100%" height="20">
			<mx:LinkButton  label="会议总结" icon="@Embed(source='../WebContent/resources/common/tools/button_attachment_icon.png')"/>
		</mx:HBox>
		<mx:VBox  width="100%"  height="360" id="summaryAttr_area" paddingLeft="10" paddingRight="10">
			<mutiUpload:upload width="100%" id="summaryUpload">
			</mutiUpload:upload>
		</mx:VBox>
	</mx:VBox>
	
	<mx:HBox horizontalAlign="right" width="100%" height="30" paddingRight="18">
		<mx:Label id="addUpdateFlag" visible="false" text="add"/>
		<!--	<mx:Button label="保存草稿" id="draftSaveButton" click="save_clickHandler(event)"/>-->
		<mx:Button label="保存" id="saveButton" click="add_clickHandler(event)"/>
	</mx:HBox>
</mx:VBox>
