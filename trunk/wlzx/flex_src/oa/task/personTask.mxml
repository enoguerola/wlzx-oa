<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   xmlns:hc="com.hillelcoren.components.*"
		   xmlns:mx1="library://ns.adobe.com/flex/mx"
		   xmlns:render="system.component.render.*" layout="vertical" width="100%" height="100%"   creationComplete="init();" xmlns:component="system.component.*" >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		
		<mx:RemoteObject id="allWaittingDealServiceRO" destination="allWaittingDealServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getAllDealTasksByCondition"  concurrency="last"  result="getAllDealTasksByCondition_result(event);" />

		</mx:RemoteObject>
		<mx:RemoteObject id="scheduleServiceRO" destination="scheduleServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getSchedulesByConditions"  concurrency="last"  result="getSchedulesByConditions_result(event);" />
		
		</mx:RemoteObject>
		
	</fx:Declarations>
	
	<fx:Script> 
		<![CDATA[  
			import mx.collections.ArrayCollection;
			import mx.controls.*;
			import mx.events.*;
			import mx.managers.PopUpManager;
			import mx.rpc.events.*;
			
			import system.entity.DepartmentModel;
			import system.entity.UserModel;
			import system.index;
			import system.utils.CommonUtils;
			import basic.utils.DateUtil;
			import system.component.WlzxLockWin;
			public var taskStateList:ArrayCollection = new ArrayCollection( 
				[	{label:"全部", data:null},  
					{label:"进行中", data:"0"},  
					{label:"已完成", data:"1"}]); 
			private function init():void {
				var parms:String=((Object)(this.owner)).id;
				//Alert.show(parms);
				if(parms!=null&&parms!=''&&parms!='null'){
					var accountId:String=parms.split(";")[0];
					var beginDate:String=parms.split(";")[1];
					var endDate:String=parms.split(";")[2];
					search_account_id.text=accountId;
					search_account_name.text=this.parentApplication.getTeacherNameByAccountId(search_account_id.text)+"个人工作";
					search_date_begin.text=beginDate;
					search_date_end.text=endDate;
				}else{
					
					search_account_id.text=this.parentApplication.currentUser.id;
					//Alert.show(search_account_id.text);
					search_account_name.text=this.parentApplication.getTeacherNameByAccountId(search_account_id.text)+"个人工作";
					var date:Date=new Date();
					search_date_begin.text=CommonUtils.formatDate(CommonUtils.currentMonthBeginDate(),"YYYY-MM-DD");
					search_date_end.text=CommonUtils.formatDate(CommonUtils.currentMonthEndDate(),"YYYY-MM-DD");
				}
				
				callLater(search);
			}
			
		
			
			
			
			private function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
				unLockWin();
			}
			import mx.collections.Sort;
			import mx.collections.SortField;
			protected function getAllDealTasksByCondition_result(event:ResultEvent):void
			{
				
				var list:ArrayCollection=event.result as ArrayCollection;
				var sort:Sort=new Sort();  
				//按照sequence升序排序  
				sort.fields=[new SortField("postTime")];  
				list.sort=sort;
				sort.reverse();
				list.refresh();//更新  
				taskTable.initdata(list);
				unLockWin();
				
			}
			protected function getSchedulesByConditions_result(event:ResultEvent):void
			{
				
				var list:ArrayCollection=event.result as ArrayCollection;
				scheduleTable.initdata(list);
				unLockWin();
				
			}
			
			protected function search():void
			{
				lockWin();
				var accountId:String=search_account_id.text;
				var beginTime:String=search_date_begin.text;
				var endTime:String=search_date_end.text;
				var status:String=null;
				allWaittingDealServiceRO.getAllDealTasksByCondition(accountId,beginTime,endTime);

				scheduleServiceRO.getSchedulesByConditions(accountId,null,status,null,null,null,null,null,beginTime,endTime);
			}
			public function formatDate(date:Date):String{
				return CommonUtils.formatDate(date);
				
			}
		
			private var window:WlzxLockWin=null;
			private function lockWin():void{
				
				window=WlzxLockWin(PopUpManager.createPopUp(this,WlzxLockWin,true)); 
				PopUpManager.centerPopUp(window);
				window.percentHeight=100;
				window.percentWidth=100;			
				
			}
			private function unLockWin():void{
				if(window!=null)
					PopUpManager.removePopUp(window);
			}
			public  function timeTip(times:String):String
			{
				
				var result:String="";
				var times_attr:Array=times.split(";");
				for(var i:int=0;i<times_attr.length;i++){
					
					var time:String=times_attr[i];
					if(time!=null&&time!=""){
						var time_attr:Array=time.split(" ");
						result=result.concat(time_attr[0]+" ");
						var sections:String=time_attr[1];
						if(sections.split("-")[0]=="1"){
							result=result.concat("早上 ");
						}
						if(sections.split("-")[1]=="1"){
							result=result.concat("下午 ");
						}
						if(sections.split("-")[2]=="1"){
							result=result.concat("晚上 ");
						}
						result=result.concat("   ");
						
					}
				}
				return result;			
				
			}
			public 	 function getWorkers(data:Object, column:DataGridColumn):String{
				if(data!=null){
					var result1:String="";
					var ids:String=data.workersIds;
					
					if(ids!=null&&ids!=""){
						var attr:Array=ids.split(";");
						for(var i:int=0;i<attr.length;i++){
							[Binary]var temp:String=attr[i] as String;
							
							if(temp==null||temp=="")continue;
							var name:String=this.parentApplication.getTeacherNameByAccountId(temp);
//							if(data.title=="a"){
//								Alert.show(name);
//								Alert.show(temp);
//							}
							result1=result1.concat(name+"  ");
							
						}
						return result1;
					}else return null;
					//Alert.show(result);
					
				}else return null;
			}
			public 	 function getAssigner(data:Object, column:DataGridColumn):String{
				var result2:String="";
				var id:String=data.assignerId;
				if(id=="-1")return "系统";
				//Alert.show(ids);
				if(id!=null&&id!=""){
					result2+=this.parentApplication.getTeacherNameByAccountId(id);
				}
				//Alert.show(result);
				return result2;
			}
		]]> 		
	</fx:Script> 
	<mx:VBox borderVisible="true" width="100%" height="100%" borderStyle="solid">
		<mx:VBox width="100%"     verticalGap="10" verticalAlign="middle" horizontalAlign="left" borderVisible="true" paddingTop="10" paddingBottom="10"   paddingLeft="10" paddingRight="10">
			<mx:VBox width="100%" horizontalAlign="center" verticalGap="0" >
				<mx:HBox width="100%" horizontalAlign="center">
					<mx:Label  text=""    width="100%"  letterSpacing="5" textAlign="center" fontSize="14"  fontWeight="bold" height="30"  id="search_account_name"/>
					<mx:Label id="search_account_id" visible="false" width="0"/>
				</mx:HBox>
			
				<!--************  搜索面板 ************-->
				<mx:VBox height="60" width="100%" >
					<component:Fieldset title="搜索条件" width="95%" height="95%" >
						<mx:HBox width="100%" horizontalAlign="left" verticalAlign="bottom" horizontalGap="10">
							<mx:Label  text="时间区间"  width="100"  textAlign="right"/>
							<mx:DateField dayNames='["日", "一", "二", "三", "四", "五", "六"]'  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]' yearNavigationEnabled="true" id="search_date_begin"   formatString="YYYY-MM-DD"  editable="false" width="105"/>
							<mx:Label  text="--"  width="30" textAlign="center"/>
							<mx:DateField dayNames='["日", "一", "二", "三", "四", "五", "六"]'  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]' yearNavigationEnabled="true" id="search_date_end"  formatString="YYYY-MM-DD" editable="false" width="105"/>
							<mx:Button  label="搜索"  width="60"   click="search()"/>
						</mx:HBox>
					</component:Fieldset>
				</mx:VBox>
			</mx:VBox>
			
			<!--************  任务面板 ************-->
			<component:Fieldset title="任务列表" width="95%" height="50%" >
				
			
<!--			<mx:Panel width="100%"   styleName="customPanel" title="任务"  cornerRadius="5" borderVisible="false" dropShadowVisible="false" verticalScrollPolicy="auto">-->
				
				<component:WlzxPageDataGrid width="100%" height="100%" borderVisible="true"    autoLayout="true"  borderAlpha="0.2" verticalAlign="middle"   id="taskTable" pagecount="5"  >				
					<component:mygridcolumns>						
					<mx:DataGridColumn textAlign="center" headerText="任务类型" width="80">
						<mx:itemRenderer>
							<fx:Component>
								<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off" >
									<mx1:Text text="{data.type}" width="100">
									</mx1:Text>
								</mx:HBox>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
						<mx:DataGridColumn textAlign="center" headerText="任务主题" width="300">
							<mx:itemRenderer>
								<fx:Component>
									<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off" >
										<mx1:Text text="{data.title}" width="100%">
										</mx1:Text>
									</mx:HBox>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						
						<mx:DataGridColumn textAlign="center" headerText="发布时间" width="100" dataField="postTime">
						</mx:DataGridColumn>
						<mx:DataGridColumn textAlign="center" headerText="责任人" width="100" dataField="workersIds" labelFunction="getWorkers">
							
						</mx:DataGridColumn>
						<mx:DataGridColumn textAlign="center" headerText="指派人" width="60" dataField="assignerId" labelFunction="getAssigner">
							
						</mx:DataGridColumn>
						
						<mx:DataGridColumn textAlign="center" headerText="状态" width="60"  dataField="status">
							
						</mx:DataGridColumn>
						
						
				</component:mygridcolumns>
				</component:WlzxPageDataGrid>
				
			<!--</mx:Panel>-->
				
		</component:Fieldset>
		
			<!--*************** 日程面板 ****************-->
		<component:Fieldset title="日程列表" width="95%" height="50%" >
			<!--<mx:Panel width="100%"   styleName="customPanel" title="日程"  cornerRadius="5" dropShadowVisible="false" verticalScrollPolicy="auto">-->
				<component:WlzxPageDataGrid width="100%" height="100%"   borderVisible="true"  autoLayout="true"  borderAlpha="0.2" verticalAlign="middle"   id="scheduleTable" pagecount="5"  >				
					<component:mygridcolumns>						
						<mx:DataGridColumn textAlign="center" headerText="标记" dataField="loginaccount" width="100">
							<mx:itemRenderer>
								<fx:Component>
									<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
										<mx:Image source="@Embed(source='../WebContent/resources/common/ui/circle.png')"  visible="{checkCircle(data)}"/>
										<mx:Image source="@Embed(source='../WebContent/resources/common/ui/emergence1.png')"  visible="{checkEmergence1(data.emergence)}" toolTip="重要紧急"/>
										<mx:Image source="@Embed(source='../WebContent/resources/common/ui/emergence2.png')"  visible="{checkEmergence2(data.emergence)}" toolTip="紧急非重要"/>
										<mx:Image source="@Embed(source='../WebContent/resources/common/ui/emergence3.png')"  visible="{checkEmergence3(data.emergence)}" toolTip="重要非紧急"/>
										
										<fx:Script>
											<![CDATA[
											
											//提示信息
											import cn.org.rapid_framework.flex_security.SecurityControler;
											
											import mx.controls.Alert;
											import mx.core.UIComponent;
											private function checkCircle(data:Object):Boolean{
											
											if(data!=null){	
											if(data.repeatStatus==1){
											return true;
											}else
											return false;
											
											}else{
											return false;
											}
											}
											private function checkEmergence1(emergence:int):Boolean{
											
											if(emergence==0){
											return true;
											}else return false;
											
											}
											private function checkEmergence2(emergence:int):Boolean{
											
											if(emergence==2){
											return true;
											}else return false;
											
											}
											private function checkEmergence3(emergence:int):Boolean{
											
											if(emergence==1){
											return true;
											}else return false;
											
											}
											]]>
										</fx:Script>
										
									</mx:HBox>																			
								</fx:Component>						
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn textAlign="center" headerText="日程类型"  width="60">
							<mx:itemRenderer>
								<fx:Component>
									<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
										<mx:Label text="{getType(data.type)}"/>
										<fx:Script>
											<![CDATA[
											
											//提示信息
											import cn.org.rapid_framework.flex_security.SecurityControler;
											
											import mx.controls.Alert;
											import mx.core.UIComponent;
											private function getType(type:int):String{
											
											if(type==0){
											return "私人日程";
											}else
											return "工作日程";
											
											
											}
											]]>
										</fx:Script>
									</mx:VBox>																			
								</fx:Component>	
								
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn textAlign="center" headerText="共享日程" width="100">
							<mx:itemRenderer>
								<fx:Component>
									<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
										<mx:Label text="{getShares(data)}"/>
										<fx:Script>
											<![CDATA[
											
											//提示信息
											import cn.org.rapid_framework.flex_security.SecurityControler;
											
											import mx.controls.Alert;
											import mx.core.UIComponent;
											private function getShares(data:Object):String{
											
											if(data!=null){
											var result:String="";
											
											if(data.schoolShare=="1")
											result+="学校共享"+"  ";
											if(data.departmentShare=="1")
											result+="部门共享"+"  ";
											if(result=="")return "不共享";
											return result;
											}else{
											return null;
											}
											}
											]]>
										</fx:Script>
									</mx:VBox>																			
								</fx:Component>
								
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn textAlign="center" headerText="开始时间" width="100">
							<mx:itemRenderer>
								<fx:Component>
									<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
										<mx:Label text="{data.beginTime}"/>
										
									</mx:VBox>																			
								</fx:Component>						
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn textAlign="center" headerText="截止时间"  width="100">
							<mx:itemRenderer>
								<fx:Component>
									<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
										<mx:Label text="{data.endTime}"/>
									</mx:VBox>																			
								</fx:Component>						
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn textAlign="center" headerText="主题" width="200">
							<mx:itemRenderer>
								<fx:Component>
									<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
										
										<mx:Label text="{data.title}" width="80%"/>
										
									</mx:HBox>																			
								</fx:Component>						
							</mx:itemRenderer>
						</mx:DataGridColumn>
						
						<mx:DataGridColumn textAlign="center" headerText="优先级" width="60">
							<mx:itemRenderer>
								<fx:Component>
									<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
										<mx:Label text="{getEmergence(data.emergence)}"/>
										<fx:Script>
											<![CDATA[
											
											//提示信息
											import cn.org.rapid_framework.flex_security.SecurityControler;
											
											import mx.controls.Alert;
											import mx.core.UIComponent;
											private function getEmergence(emergence:int):String{
											
											if(emergence==0){
											return "重要紧急";
											}else if(emergence==1){
											return "重要非紧急";
											}else if(emergence==2){
											return "紧急非重要";
											}else return null;
											
											}
											]]>
										</fx:Script>
									</mx:VBox>																			
								</fx:Component>	
								
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn textAlign="center" headerText="状态" width="60">
							<mx:itemRenderer>
								<fx:Component>
									<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalGap="0" horizontalScrollPolicy="off">
										<mx:Label text="{getStatus(data)}" width="60">
										</mx:Label>
										<fx:Script>
											<![CDATA[
												//提示信息
												
												import mx.controls.Alert;
												import mx.core.UIComponent;
												private function getStatus(data:Object):String{
													var result:String="";
													if(data.finishStatus==0)result="进行中";
													else if(data.finishStatus==1)result="已完成";
													//Alert.show(result);
													return result;
												}
											]]>
										</fx:Script>
									</mx:HBox>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
					</component:mygridcolumns>
				</component:WlzxPageDataGrid>
				
			<!--</mx:Panel>-->
		</component:Fieldset>	
			
		</mx:VBox>
		</mx:VBox>
		
</mx:Module>
