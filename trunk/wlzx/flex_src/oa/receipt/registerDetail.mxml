<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="absolute" width="100%" height="100%" creationComplete="init()"
		   xmlns:content="oa.receipt.component.*"
		   xmlns:valueObjects="oa.entity.receipt.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.containers.FormItem;
			import mx.controls.Alert;
			import mx.events.ValidationResultEvent;
			import mx.formatters.DateFormatter;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			
			import oa.entity.receipt.FileAttachmentModel;
			
			private var validatorArr:Array = new Array();
			
			private var isMove:Boolean = false;
			private var isChanged:Boolean = false;

			private function init():void
			{
				this.currentState = "text_body";
				var parms:String=((Object)(this.owner)).id;
				if(parms != null && parms!="" && parms!= "null"){
					//编辑
					receiptServiceRO.get(parms);
				}else{
					//新增
					receipt = new ReceiptModel();
				}
			}
			
			//保存
			/*private function save(event:MouseEvent):void
			{
				receipt.title = receipt_text.title.text;
				receipt.doNumber = receipt_file._zi.text + "+" + receipt_file._hao.text;
				receipt.inDate = DateFormatter.parseDateString(receipt_file.in_date.text);
				receipt.inNumber = receipt_file.in_number.text;
				receipt.subject = receipt_file.zhutici.text;
				receipt.summary = receipt_text.summary.text;
				receipt.title = receipt_text.title.text;
				receipt.office = receipt_file.in_department.text;
				if(event.target == button_save)
				{
					Alert.show('receipt save begin');
					receipt.status = 0;
					if(validateSave())
					{
						receiptServiceRO.save(receipt);
					}
				}else
				{
					receipt.status = 1;
					Alert.show("register");
					if(validateRegister())
					{
						receiptServiceRO.save(receipt);
					}
				}
				
			}*/
			
			public function save(type:int):void
			{
				receipt.title = receipt_text.title.text;
				receipt.summary = receipt_text.summary.text;

				if(isMove)
				{
					receipt.doNumber = receipt_file._zi.text + "+" + receipt_file._hao.text;
					receipt.inNumber = receipt_file.in_number.text;
					receipt.subject = receipt_file.zhutici.text;
					receipt.inDate = DateFormatter.parseDateString(receipt_file.in_date.text);
					receipt.office = receipt_file.in_department.text;
				}
				if(type == 2 || type == 1 || isChanged)
				{
					if(type == 0 || type == 1)
					{
						Alert.show('receipt save begin');
						receipt.status = 0;
						if(this.currentState == "register_file")
						{
							if(validateRegister())
							{
								receiptServiceRO.save(receipt);
							}
						}else
						{
							if(validateSave())
							{
								receiptServiceRO.save(receipt);
							}
						}
					}else
					{
						receipt.status = 1;
						Alert.show("register");
						if(validateRegister())
						{
							receiptServiceRO.save(receipt);
						}
					}
				}
			}
			
			private function validateSave():Boolean
			{
				validatorArr.push(receipt_text.title_string_validate);
				validatorArr.push(receipt_text.summary_string_validate);
				return doValidate();
			}
			
			private function validateRegister():Boolean
			{
				validatorArr.push(receipt_text.title_string_validate);
				validatorArr.push(receipt_text.summary_string_validate);
				validatorArr.push(receipt_file.zi_string_validate);
				validatorArr.push(receipt_file.hao_string_validate);
				validatorArr.push(receipt_file.department_string_validate);
				validatorArr.push(receipt_file.date_string_validate);
				validatorArr.push(receipt_file.number_string_validate);
				validatorArr.push(receipt_file.zhutici_string_validate);
				return doValidate();
			}
			
			private function doValidate():Boolean
			{
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					return true;
				} else {
					var err:ValidationResultEvent;
					var errorMessageArray:Array = [];
					for each (err in validatorErrorArray) {
						var errField:String = FormItem(err.currentTarget.source.parent).label
						errorMessageArray.push(errField + ": " + err.message);
					}
					Alert.show(errorMessageArray.join("\n\n"), "请按照以下错误提示信息重新填写", Alert.OK);
					return false;
				}
			}
			
			public function next():void
			{
				if(this.currentState == "text_body")
				{
					if(validateSave())
					{
						this.currentState = "registe_file";
					}
				}
				else if(this.currentState == "registe_file")
				{
					if(validateRegister())
					{
						this.currentState = "upload";
					}
				}
					
			}
			
			private function pre():void
			{
				if(this.currentState == "registe_file")
					this.currentState = "text_body";
				else if(this.currentState == "upload")
					this.currentState = "registe_file";
			}
			
			protected function receiptServiceSave_result(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				receipt = event.result as ReceiptModel;
				Alert.show("保存成功!");
			}
			
			protected function receiptServiceGet_result(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				// for first page 
				receipt = event.result as ReceiptModel;
				receipt_text.title.text = receipt.title;
				receipt_text.summary.text = receipt.summary;
				receipt_text.title.text = receipt.title;
				//attachments here
				var list:ArrayCollection = receipt.attachments as ArrayCollection;
				receipt_text.list = list;
				if(receipt.status == 1)
				{
					button_save.enabled = false;
					button_register.enabled = false;
				}
			}

			protected function faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				Alert.show(event.fault.faultString, 'Error');
			}
			
			public function remove(id:String):void
			{
				fileAttachmentServiceRO.remove(id);
			}
			
			public function add(id:String):void
			{
				fileAttachmentServiceRO.get(id);
			}
			
			protected function fileAttachmentServiceRemove_result(event:ResultEvent):void
			{
				var id:String = event.result as String;
				var list:ArrayCollection = receipt_text.datagrid.dataProvider as ArrayCollection;
				var index:int = -1;
				var fileAttachment:FileAttachmentModel;
				if(list != null && list.length > 0)
				{
					for(var i=0; i<list.length; i++)
					{
						fileAttachment = list.getItemAt(i) as FileAttachmentModel;
						if(fileAttachment.id == id)
						{
							index = i;
							break;
						}
					}
				}
				if(index != -1)
					list.removeItemAt(index);
			}
			
			protected function fileAttachmentServiceGet_result(event:ResultEvent):void
			{
				var attachment:FileAttachmentModel = event.result as FileAttachmentModel;
				var list:ArrayCollection = receipt_text.datagrid.dataProvider as ArrayCollection;
				list.addItem(attachment);
			}
			
			private function saveReceiptBeforeUpload():void
			{
				this.button_pre.enabled = true;
				this.button_next.enabled = true;
				save(0);
			}
			
			private function back():void
			{
				var parent:Object=(Object)(((Object)(this.owner)).owner);
				parent.addTab("receipt_register_menu","收文登记",parent.nav,"oa/receipt/registerList.swf",null,"");
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<valueObjects:ReceiptModel id="receipt"/>
		<s:RemoteObject concurrency="last" destination="receiptServiceDest" id="receiptServiceRO" fault="faultHandler(event)" showBusyCursor="true">
			<s:method concurrency="last" name="get" result="receiptServiceGet_result(event)"/>
			<s:method concurrency="last" name="save" result="receiptServiceSave_result(event)"/>
		</s:RemoteObject>
		<s:RemoteObject concurrency="last" destination="fileAttachmentServiceDest" id="fileAttachmentServiceRO" fault="faultHandler(event)" showBusyCursor="true">
			<s:method concurrency="last" name="remove" result="fileAttachmentServiceRemove_result(event)"/>
			<s:method concurrency="last" name="get" result="fileAttachmentServiceGet_result(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<mx:states>
		<mx:State name="text_body" enterState="{this.button_pre.enabled=false;}"/>
		<mx:State name="registe_file" enterState="saveReceiptBeforeUpload();isMove=true;"/>
		<mx:State name="upload" enterState="{this.button_next.enabled=false;save(0);}"/>
	</mx:states>
	<mx:transitions>
		<mx:Transition id="text_right" fromState="text_body" toState="*" >
			<mx:Parallel id="t1" target="{register_box}" >
				<mx:WipeLeft duration="1500"></mx:WipeLeft>
			</mx:Parallel>
		</mx:Transition>
		<mx:Transition id="register_left" fromState="registe_file" toState="upload" >
			<mx:Parallel id="t2" target="{upload_box}" >
				<mx:WipeRight duration="800">
				</mx:WipeRight>
			</mx:Parallel>
		</mx:Transition>
		<mx:Transition id="register_right" fromState="registe_file" toState="text_body" >
			<mx:Parallel id="t3" target="{text_box}" >
				<mx:WipeLeft duration="800"></mx:WipeLeft>
			</mx:Parallel>
		</mx:Transition>
		<mx:Transition id="upload" fromState="upload" toState="*" >
			<mx:Parallel id="t4" target="{register_box}" >
				<mx:WipeRight duration="800">
				</mx:WipeRight>
			</mx:Parallel>
		</mx:Transition>
	</mx:transitions>
	<s:VGroup width="100%" height="100%">
		<s:HGroup height="6%">
			<s:Button label="保存" click="save(1)" id="button_save"/>
			<s:Button label="登记" click="save(2)" id="button_register"/>
			<s:Button label="返回" click="back()"/>
			<s:Button label="下一步" click="next()" id="button_next"/>
			<s:Button label="上一步" click="pre()" id="button_pre"/>
		</s:HGroup>
		<mx:VBox label="来文正文" width="100%" height="94%" includeIn="text_body" id="text_box">
			<content:receiptText width="100%" id="receipt_text"/>
		</mx:VBox>
		<mx:VBox label="来文登记单" direction="vertical" width="100%" height="94%" includeIn="registe_file" id="register_box">
			<content:receiptFileInput width="100%" id="receipt_file"/>
		</mx:VBox>
		<mx:VBox label="附件上传" width="100%" height="94%" includeIn="upload" id="upload_box">
			<content:Upload width="100%" id="receipt_upload"/>
		</mx:VBox>
	</s:VGroup>
</mx:Module>
