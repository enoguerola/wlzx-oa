<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" width="100%" height="100%"   creationComplete="init();" xmlns:component="system.component.*" >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:RemoteObject id="systemServiceRO" destination="systemServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getUsersByCondition"  concurrency="last"  result="getUsersByCondition_resultHandler(event);" />
			<mx:method name="getAllUsers"  concurrency="last"  result="getAllUsers_resultHandler(event);" />
			<mx:method name="activeUser"  concurrency="last"  result="activeUser_resultHandler(event);" />
			<mx:method name="freezeUser"  concurrency="last"  result="freezeUser_resultHandler(event);" />
			<mx:method name="resetUserPW"  concurrency="last"  result="resetUserPW_resultHandler(event);" />
		</mx:RemoteObject>
	</fx:Declarations>
	<fx:Style> 
		.ChineseFont{ 
			fontFamily:'Verdana','宋体'; 
			fontSize:12; 
		}
		
	</fx:Style>
	<fx:Script> 
		<![CDATA[  
			import mx.collections.ArrayCollection;
			import mx.controls.*;
			import mx.events.*;
			import mx.managers.PopUpManager;
			import mx.rpc.events.*;
			
			import system.entity.DepartmentModel;
			import system.entity.UserModel;
			import system.index;
			import system.utils.CommonUtils;
			[Bindable] 
			public var status:ArrayCollection = new ArrayCollection( 
				[ {label:"全部", data:null},  
					{label:"激活", data:true},  
					{label:"冻结", data:false} ]); 
			public var selectedAccount:String=null;
			public var accounts:ArrayCollection = new ArrayCollection();
			private function init():void {	
				accounts.addItem("");
				systemServiceRO.getAllUsers();
				search();
			}
			protected function getAllUsers_resultHandler(event:ResultEvent):void{
				var users:ArrayCollection=event.result as ArrayCollection;
				for(var i:int=0;i<users.length;i++){
					accounts.addItem(users.getItemAt(i).name);
				}
				search_account.dataProvider=accounts;
			}
			private function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
			private function activeUser_resultHandler(event:ResultEvent):void {
				search();
			}
			private function freezeUser_resultHandler(event:ResultEvent):void {
				search();
			}
			private function resetUserPW_resultHandler(event:ResultEvent):void {
				Alert.show("密码重置成功");
			}
			protected function getUsersByCondition_resultHandler(event:ResultEvent):void{
				var allList:ArrayCollection=event.result as ArrayCollection;
				accountTable.initdata(allList);
			}
			public function formatDate(date:Date):String{
				return CommonUtils.formatDate(date);
				
			}
			
			
			protected function search():void
			{
				// TODO Auto-generated method stub
				var account:String=search_account.text;
				var state:Object=search_state.selectedItem.data;
				//				Alert.show(state+"");
				systemServiceRO.getUsersByCondition(account,state);
			}
			protected function activeAccount():void
			{
				selectedAccount=accountTable.selectedRowId;
				if(selectedAccount!=null){
					systemServiceRO.activeUser(selectedAccount);
				}else {
					Alert.show("请先选择需要激活的帐号记录");
				}
			}
			protected function freezeAccount():void
			{
				selectedAccount=accountTable.selectedRowId;
				if(selectedAccount!=null){
					systemServiceRO.freezeUser(selectedAccount);
				}else {
					Alert.show("请先选择需要冻结的帐号记录");
				}
			}
			protected function resetAccountPW():void
			{
				selectedAccount=accountTable.selectedRowId;
				if(selectedAccount!=null){
					systemServiceRO.resetUserPW(selectedAccount);
				}else {
					Alert.show("请先选择需要重置密码的帐号记录");
				}
			}
			protected function checkDetail():void
			{
				selectedAccount=accountTable.selectedRowId;
				if(selectedAccount!=null){
					Alert.show(selectedAccount);
				}else {
					Alert.show("请先选择需要查看详细信息的帐号记录");
				}
			}
			
		]]> 		
	</fx:Script> 
	<s:Panel width="100%" height="100%"  skinClass="system.skins.WlzxPanelSkin" title="场所管理"  borderVisible="false" dropShadowVisible="false">
		<s:VGroup width="100%" height="100%">
			<s:HGroup verticalAlign="middle" horizontalAlign="right" width="100%" fontSize="12">
				<mx:HBox width="100%" height="30" paddingLeft="20"  horizontalGap="0" backgroundColor="#C5E497"  verticalAlign="middle">
					<mx:Label text="|"/>
					<mx:LinkButton  label="新增" icon="@Embed(source='../WebContent/resources/common/tools/button_add_icon.png')"  click="activeAccount()"/>
					<mx:Label text="|"/>
					<mx:LinkButton  label="编辑" icon="@Embed(source='../WebContent/resources/common/tools/button_edit_icon.png')" click="freezeAccount()" />
					<mx:Label text="|"/>
					<mx:LinkButton  label="删除" icon="@Embed(source='../WebContent/resources/common/tools/button_delete_icon.png')" click="resetAccountPW()"/>
					<mx:Label text="|"/>
					<mx:LinkButton  label="查看使用记录" icon="@Embed(source='../WebContent/resources/common/tools/button_detail_icon.png')" click="checkDetail()" />
					<mx:Label text="|"/>
				</mx:HBox>
			</s:HGroup>
			<s:VGroup width="100%" height="100%" gap="10" verticalAlign="middle" horizontalAlign="center" >
				<mx:HBox width="100%" height="60"   horizontalGap="10" verticalAlign="middle" horizontalAlign="left" borderVisible="true" paddingTop="10" paddingBottom="10"   paddingLeft="10" paddingRight="10">
					<mx:FormHeading label="条件查询">
						
					</mx:FormHeading>
					
					<s:HGroup verticalAlign="middle">
						<s:Label  text="名称" />
						<component:AutoComplete id="search_account"  IsfocusInDropDown="true"  IsAutoComplete="true" styleName="ChineseFont">
							
						</component:AutoComplete>
					</s:HGroup>	
					<s:HGroup verticalAlign="middle">
						<s:Label  text="类型" />
						<s:ComboBox id="search_state"  dataProvider="{status}" selectedIndex="0"/>
					</s:HGroup>
					<mx:Button  label="搜索"  width="80" icon="@Embed(source='../WebContent/resources/common/tools/button_search_icon.png')"  click="search()"/>
					
					
				</mx:HBox>
				<mx:HBox width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingBottom="10">
					<s:Panel width="100%" height="100%"  skinClass="system.skins.WlzxPanelSkin" title="场所列表"  cornerRadius="5" borderVisible="false" dropShadowVisible="false">
						
						<component:WlzxPageDataGrid width="100%" height="100%" borderVisible="false"   borderAlpha="0.2" verticalAlign="middle"   id="accountTable" pagecount="10"  >				
							<component:mygridcolumns>
								
								<mx:DataGridColumn textAlign="center" headerText="编号" dataField="name" width="100">
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="名称" dataField="name" width="100">
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="类型" dataField="name" width="100">
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="位置" dataField="name" width="100">
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="功能" dataField="name" width="100">
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="面积" dataField="name" width="100">
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="容纳人数" dataField="name" width="100">
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="操作" dataField="name" width="100">
								</mx:DataGridColumn>
								
							</component:mygridcolumns>
						</component:WlzxPageDataGrid>
					</s:Panel>
				</mx:HBox>
				
			</s:VGroup>
		</s:VGroup>
		
		
	</s:Panel>
</mx:Module>
