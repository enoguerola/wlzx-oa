<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" creationComplete="init();" width="100%"  height="100%"  xmlns:flexlib="http://code.google.com/p/flexlib/" >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<!--定义 RemoteObject 组件-->
		<mx:RemoteObject id="systemServiceRO" destination="systemServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getDepartmentBySymbol"  concurrency="last"  result="getDepartmentBySymbolResult(event);" />
			<mx:method name="getDepartmentById"  concurrency="last"  result="getDepartmentByIdResult(event);" />
			<mx:method name="departmentRemove"  concurrency="last"   result="departmentRemove_resultHandler(event);" />
		</mx:RemoteObject>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import basic.setting.popWin.DepartmentPopWin;
			
			import flexlib.controls.SuperTabBar;
			import flexlib.controls.tabBarClasses.SuperTab;
			import flexlib.events.TabReorderEvent;
			
			import mx.collections.ArrayCollection;
			import mx.containers.*;
			import mx.controls.*;
			import mx.core.FlexGlobals;
			import mx.events.*;
			import mx.events.ModuleEvent;
			import mx.managers.PopUpManager;
			import mx.modules.*;
			import mx.rpc.events.*;
			
			import spark.components.*;
			
			import system.entity.*;
			import system.utils.*;
			public var selectedNode:XML;
			public var pop:DepartmentPopWin=null;
			private function init():void {
				systemServiceRO.getDepartmentBySymbol("root");

			}

			private function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
			protected function departmentRemove_resultHandler(event:ResultEvent):void{
				if(event.result==true){
					delete selectedNode.parent().node[selectedNode.childIndex()];
					//重新加载部门全局信息
					this.parentApplication.systemServiceRO.getDepartmentBySymbol("root");
//					disabled();
				}else{
					Alert.show("删除部门失败");
				}
			}
			private function getDepartmentBySymbolResult(event:ResultEvent):void {
				var department:DepartmentModel=event.result as DepartmentModel;
				var resultXML:String=buildSubDepartments(department);
				var departmentData:XML=new XML(resultXML);
				departments.dataProvider=departmentData;
				departments.selectedItem=departmentData[0];
				departments.validateNow();departments.expandChildrenOf(departmentData[0],false);
				loadDepartmentDetail(department);
				selectedNode=departments.selectedItem as XML;
			}
			private function getDepartmentByIdResult(event:ResultEvent):void {
				
//				var department:DepartmentModel=event.result  as DepartmentModel;
//				Alert.show(department.id);
				loadDepartmentDetail(event.result as DepartmentModel);
			}
			private function buildSubDepartments(department:Object):String{
				var resultXML:String="";
				var list:ArrayCollection = ArrayCollection(department.subordinates);
				if(list.length>0){
					resultXML=resultXML.concat("<node label='"+department.name+"' showInList='true' id='"+department.id+"'>");
					for (var i:int = 0; i < list.length; i++){
						var _department:Object = list.getItemAt(i);	
						resultXML=resultXML.concat(buildSubDepartments(_department));
					}
					resultXML=resultXML.concat("</node>");
				}		
				else resultXML=resultXML.concat("<node label='"+department.name+"' id='"+department.id+"'/>");				
				
				return resultXML;
			}
			private function addDepartment():void{
				var selectId:String=treeSelectedItemId();
				if(selectId!=null){
					if(pop!=null)PopUpManager.removePopUp(pop);
					pop=DepartmentPopWin(PopUpManager.createPopUp(this,DepartmentPopWin,true)); 
					pop.owner=this;
					PopUpManager.centerPopUp(pop);
					pop.percentHeight=100;
					pop.percentWidth=100;
					pop.x=FlexGlobals.topLevelApplication.stage.stageWidth/2-pop.width/2;
					pop.y=FlexGlobals.topLevelApplication.stage.stageHeight/2-pop.height/2;
					pop.id=selectId;//参数传递使用
					pop.toolTip="Add";
				}	
			}
			private function editDepartment():void{
				var selectId:String=treeSelectedItemId();
				if(selectId!=null){
					if(pop!=null)PopUpManager.removePopUp(pop);
					pop=DepartmentPopWin(PopUpManager.createPopUp(this,DepartmentPopWin,true)); 
					pop.owner=this;
					PopUpManager.centerPopUp(pop);
					pop.percentHeight=100;
					pop.percentWidth=100;
					pop.x=FlexGlobals.topLevelApplication.stage.stageWidth/2-pop.width/2;
					pop.y=FlexGlobals.topLevelApplication.stage.stageHeight/2-pop.height/2;
					pop.id=selectId;//参数传递使用
					pop.toolTip="Update";
				}	
			}
			private function deleteDepartment():void{
				var selectId:String=treeSelectedItemId();
				if(selectId!=null){
					departments.validateNow();
					var departmentsData:XML=new XML(departments.dataProvider+"");
					if(selectId==departmentsData[0].@id){
						Alert.show("校园根节点不可删除","警告提示",Alert.YES);
						return;
					}
					// TODO Auto-generated method stub
					Alert.show("你确定要删除该部门、部门下岗位及相应子部门信息吗?","确认删除",Alert.YES|Alert.NO,null,function(event:CloseEvent):void{
						if(event.detail == Alert.YES)
						systemServiceRO.departmentRemove(selectId);
					},null,Alert.NO);
					
				}	
			}
		
			private function treeSelectedItemId():String{
				var selectedNode:XML=departments.selectedItem as XML;
				if(selectedNode!=null)
					return selectedNode.@id;
				else{
					Alert.show("当前未选中任何节点部门","操作不当");
					return null;
				} 
			}
			private function tree_itemClick(evt:Event):void {
				selectedNode=departments.selectedItem as XML;
				var id:String=selectedNode.@id;
				systemServiceRO.getDepartmentById(id);
					
			}
			public function loadDepartmentDetail(department:DepartmentModel):void{
				dname.text=department.name;
				creationDate.text=CommonUtils.formatDate(department.creationDate,"YYYY-MM-DD");
				symbol.text=department.symbol;
//				sequence.text=department.sequence+"";
				level.text=department.level+"";
				phone.text=department.phone;
				detail.text=department.detail;
				var rolesString:String="";
				var leaderUsers:ArrayCollection=ArrayCollection(department.leaderUsers);
				var leadersString:String="";
				for (var i:int = 0; i < leaderUsers.length; i++){
					var user:UserModel = leaderUsers.getItemAt(i) as UserModel;	
					leadersString=leadersString.concat(parentApplication.getTeacherNameByAccountId(user.id)+" | ");
				}
				leader.text=leadersString;
				
				var masterUsers:ArrayCollection=ArrayCollection(department.masterUsers);
				var mastersString:String="";
				for (var i:int = 0; i < masterUsers.length; i++){
					var user:UserModel = masterUsers.getItemAt(i) as UserModel;	
					mastersString=mastersString.concat(parentApplication.getTeacherNameByAccountId(user.id)+" | ");
				}
				masters.text=mastersString;
				
//				if(department.getSupervisorRole()!=null){
//					var _role:RoleModel = department.getSupervisorRole() as RoleModel;	
//					rolesString=rolesString.concat(_role.name+"");
//					rolesStructure.text=buildRolesStructre(_role,1);
//					roles.text=rolesString;
////					leader.text=_role.getLeaderRole().name;
//				}
//				var leadersString:String="";
//				var list:ArrayCollection = ArrayCollection(department.leaderRoles);
//				for (var i:int = 0; i < list.length; i++){
//					var role:RoleModel = list.getItemAt(i) as RoleModel;	
//					leadersString=leadersString.concat(role.name+"\n\n");
//				}
//				leader.text=leadersString;
			}
//			public function buildRolesStructre(role:Object,depth:int):String{
//				var result:String="";
//				for(var j:int = 0;j<depth;j++)
//					result=result.concat("--");
//				result=result.concat(role.name+"\n\n");
//				var list:ArrayCollection = ArrayCollection(role.subordinates);			
//				if(list.length>0){
//					for (var i:int = 0; i < list.length; i++){
//						var _role:Object = list.getItemAt(i);	
//						result=result.concat(buildRolesStructre(_role,depth+1));
//					}
//				}
//				return result;
//			
//			}
			
		]]>
	</fx:Script>
	
	<mx:VBox borderVisible="true" width="100%" height="100%" borderStyle="solid">
		<mx:VBox width="100%" height="100%" verticalGap="0">
			<mx:HBox width="100%" height="35" paddingLeft="20"  horizontalGap="10" styleName="CustomHBoxStyle"   verticalAlign="middle" >
				<mx:Label text="|"/>
				<mx:LinkButton  label="新建" icon="@Embed(source='../WebContent/resources/common/tools/button_add_icon.png')"  click="addDepartment();"/>
				<mx:Label text="|"/>
				<mx:LinkButton  label="编辑" icon="@Embed(source='../WebContent/resources/common/tools/button_edit_icon.png')"  click="editDepartment();"/>
				<mx:Label text="|"/>
				<mx:LinkButton  label="删除" icon="@Embed(source='../WebContent/resources/common/tools/button_delete_icon.png')"  click="deleteDepartment();"/>
				<mx:Label text="|"/>			
			</mx:HBox>
			<mx:HBox  width="100%" height="100%" verticalAlign="middle" paddingTop="10" paddingBottom="10"  paddingLeft="10" paddingRight="10">
				<mx:Tree id="departments"  borderVisible="false" labelField="@label"   width="60%" height="100%"    change="tree_itemClick(event);" >
				</mx:Tree>
				<mx:VRule height="95%"/>
					
				<mx:VBox  width="40%" height="100%" borderVisible="true" verticalAlign="middle" horizontalAlign="center" verticalGap="0">
					<s:Label text="部门详细信息" fontSize="15" width="100%" textAlign="center"/>
					
					<mx:Form width="100%" id="dform" textAlign="left">
						
						<mx:FormItem label="部门名称" required="true">
							<s:HGroup>
								<mx:Label id="dname"/>	
								<mx:FormItem label="标识"  required="true">
									<mx:Label id="symbol"/>		
								</mx:FormItem>
							</s:HGroup>
							
						</mx:FormItem>
						<mx:FormItem label="部门级别">
							<mx:Label id="level"/>		
						</mx:FormItem>
						<mx:FormItem label="创建日期 "  required="true">
							<s:HGroup>
								<mx:Label id="creationDate"/>
								<!--<mx:FormItem label="主管" required="true">
									<mx:Label id="masters"/>		
								</mx:FormItem>-->
							</s:HGroup>
						</mx:FormItem>

						
						<mx:FormItem label="部门电话"  >
							<mx:Label id="phone"/>		
						</mx:FormItem>
						<mx:FormItem label="部门描述">
							<mx:Label id="detail"/>		
						</mx:FormItem>
						
						
					</mx:Form>
						
					<s:VGroup width="100%" height="100%"  gap="5" verticalAlign="top" horizontalAlign="center"  paddingLeft="10">
						<s:Label text="部门直属领导" fontSize="14" width="100%" textAlign="center" height="30"/>
						<s:Label id="masters"  width="100%"/>	
						
						<s:Label text="部门主管" fontSize="14" width="100%" textAlign="center" height="30"/>
						<s:Label id="leader"  width="100%"/>	
						<!--<s:Label text="部门内部行政结构图"  fontSize="14" width="100%" textAlign="center" height="30"/>
						
						<s:Label id="rolesStructure"  width="100%"/>	-->	
					</s:VGroup>
									
				</mx:VBox>
			</mx:HBox>
			
		</mx:VBox>
		</mx:VBox>
</mx:Module>
