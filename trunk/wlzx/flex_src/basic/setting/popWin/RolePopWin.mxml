<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"  xmlns:valueObjects="system.entity.*" xmlns:flexlib="http://code.google.com/p/flexlib/"   creationComplete="init();" width="800" height="500">
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:StringValidator id="name_stringValidator" source="{rname}" property="text"  requiredFieldError="岗位名称不能为空"/>
		<mx:StringValidator id="createDate_dateValidator"  source="{creationDate}" property="text" requiredFieldError="岗位创建日期不能为空"/>
		<mx:StringValidator id="symbol_stringValidator" source="{symbol}" property="text"  requiredFieldError="岗位唯一标识不能为空"/>
		<mx:NumberValidator id="sequence_numberValidator" source="{sequence}" required="false" property="text" integerError="请输入整数值，同级岗位默认排序升序" domain="int"/>
		<mx:NumberValidator id="level_numberValidator" source="{level}" required="true" property="text"  minValue="1" requiredFieldError="岗位级别不能为空" integerError="请输入正整数值" domain="int"/>

		<valueObjects:RoleModel id="role"/>
		<mx:RemoteObject id="systemServiceRO" destination="systemServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="roleAdd"  concurrency="last"  result="roleAddResult_resultHandler(event);" />
			<mx:method name="getRoleById"  concurrency="last"  result="getRoleById_resultHandler(event);" />
			<mx:method name="roleUpdate"  concurrency="last"  result="roleUpdate_resultHandler(event);" />
		</mx:RemoteObject>
	</fx:Declarations>
	
	<fx:Script> 
		
		<![CDATA[  
			import basic.setting.*;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.ValidationResultEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.*;
			import mx.validators.Validator;
			
			import oa.common.popWin.StaffSelectPopWin;
			
			import system.entity.UserModel;
			import system.utils.*;
			private var validatorArr:Array;
			[Binary]
			public var usersSelected:Array= new Array();
			private function init():void
			{
				validatorArr = new Array();
				validatorArr.push(name_stringValidator);
				validatorArr.push(symbol_stringValidator);
				validatorArr.push(createDate_dateValidator);
				validatorArr.push(sequence_numberValidator);
				validatorArr.push(level_numberValidator);
				
				callLater(initRoleWin);
			} 
			private function initRoleWin():void{
				if(this.toolTip=='Update'){		
					this.roleWin.title="岗位编辑";
					var roleId:String=this.id;//弹出窗口时设定的中转参数
					systemServiceRO.getRoleById(roleId);
				}else if(this.toolTip=='Add'){
					role=new RoleModel();
					this.roleWin.title="岗位新增";					
					
				}
			}
			public function organizedUsersSelected():void{
				var str:String="";
				for (var i:int = 0; i < usersSelected.length; i++){
					str=str.concat(usersSelected[i].data+";");
				}
				users.text=str;
			}
			private function canculateUsersSelected():void{
				var str:String="";
				for(var i:int=0;i<usersSelected.length;i++){
					str=str.concat(usersSelected[i].id+";");
				}
				usersIds.text=str;
			}
			protected function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
			protected function roleAddResult_resultHandler(event:ResultEvent):void
			{
				var role:Object=event.result;
				if(role!=null){
					var roleData:XML=new XML("<node label='"+role.name+"'  id='"+role.id+"'></node>");
					var parent:roleSetting = this.owner as roleSetting;
					parent.selectedNode.appendChild(roleData);
					PopUpManager.removePopUp(this);
				}else{
					Alert.show("添加失败");
				}
			}
			protected function getRoleById_resultHandler(event:ResultEvent):void
			{
				role=event.result as RoleModel;
				rname.text=role.name;
				creationDate.text=CommonUtils.formatDate(role.creationDate,"YYYY-MM-DD");
				detail.text=role.detail;
				symbol.text=role.symbol;
				sequence.text=role.sequence.toString();
				level.text=role.level.toString();
				var userList:ArrayCollection=role.users as ArrayCollection;
				for (var i:int = 0; i < userList.length; i++){
					var user:UserModel=userList.getItemAt(i) as UserModel;
					usersSelected.push({data:user.name,id:user.id});
				}
				organizedUsersSelected();
				canculateUsersSelected();
			}
			protected function roleUpdate_resultHandler(event:ResultEvent):void
			{
				var role:Object=event.result;
				if(role!=null){
					var parent:roleSetting = this.owner as roleSetting;
					parent.selectedNode.@label=role.name;
					parent.selectedNode.@id=role.id;
					parent.loadRoleDetail(role);
					PopUpManager.removePopUp(this);
				}else{
					Alert.show("更新失败");
				}
			}
			private function validateForm(evt:MouseEvent):void {
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);;
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					canculateUsersSelected();
					role.name=rname.text;
					role.creationDate=DateFormatter.parseDateString(creationDate.text);
					role.detail=detail.text;
					role.symbol=symbol.text;
					role.sequence=parseInt(sequence.text);
					role.level=parseInt(level.text);
					if(this.toolTip=='Update'){
						systemServiceRO.roleUpdate(role,usersIds.text);
					}else if(this.toolTip=='Add'){
						var parentId:String=this.id;//弹出窗口时设定的中转参数
						systemServiceRO.roleAdd(role,parentId,usersIds.text);
						
					}
				} else {
					var err:ValidationResultEvent;
					var errorMessageArray:Array = [];
					for each (err in validatorErrorArray) {
						var errField:String = FormItem(err.currentTarget.source.parent).label
						errorMessageArray.push(errField + ": " + err.message);
					}
					Alert.show(errorMessageArray.join("\n\n"), "请按照以下错误提示信息重新填写", Alert.OK);
				}
			}
		
			private function resetForm(evt:MouseEvent):void
			{
				if(this.toolTip=='Update'){		
					rname.text=role.name;
					creationDate.text=CommonUtils.formatDate(role.creationDate,"YYYY-MM-DD");
					detail.text=role.detail;
					symbol.text=role.symbol;
					sequence.text=role.sequence.toString();
					level.text=role.level.toString();
				}else if(this.toolTip=='Add'){
					rname.text="";
					creationDate.text="";
					detail.text="";
					symbol.text="";
					sequence.text="";
					level.text="";
					
				}
			} 
			private var staffSelectPopWin:StaffSelectPopWin=null;
			private function openStaffSelectPopWin(event:Event):void{
				if(staffSelectPopWin!=null)PopUpManager.removePopUp(staffSelectPopWin);
				staffSelectPopWin=StaffSelectPopWin(PopUpManager.createPopUp(this,StaffSelectPopWin,true)); 
				PopUpManager.centerPopUp(staffSelectPopWin);
				staffSelectPopWin.percentHeight=100;
				staffSelectPopWin.percentWidth=100;
				staffSelectPopWin.x=FlexGlobals.topLevelApplication.stage.stageWidth/2-staffSelectPopWin.width/2;
				staffSelectPopWin.y=FlexGlobals.topLevelApplication.stage.stageHeight/2-staffSelectPopWin.height/2;
				staffSelectPopWin.owner=this;

				
			}
			
		]]> 
		
	</fx:Script> 
	<s:TitleWindow  id="roleWin" width="100%" height="100%"  close="PopUpManager.removePopUp(this);" skinClass="system.skins.WlzxTitleWindowSkin">
		<mx:Form width="100%" height="100%" id="dform">
			<mx:FormHeading label="岗位信息" fontSize="15" width="100%" textAlign="center"/>
			
			<mx:FormItem label="岗位名称" required="true">
				<mx:TextInput id="rname" width="200"/>
			</mx:FormItem>
			<mx:FormItem label="岗位级别" required="true">
				<mx:TextInput id="level" width="200"/>
			</mx:FormItem>
			<mx:FormItem label="创建日期 " required="true">
				<mx:DateField dayNames='["日", "一", "二", "三", "四", "五", "六"]'  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]' yearNavigationEnabled="true"  id="creationDate" width="200" formatString="YYYY-MM-DD" />
			</mx:FormItem>
			
			<mx:FormItem label="唯一标识" required="true">
				<mx:TextInput id="symbol" width="200"/>
			</mx:FormItem>	
			<mx:FormItem label="同级排序顺序">
				<mx:TextInput id="sequence" width="200"/>
			</mx:FormItem>
			<mx:FormItem label="岗位用户 ">
				<mx:HBox width="100%">
					<mx:TextInput id="users" width="200"  editable="false"/>
					<mx:LinkButton label="打开" click="openStaffSelectPopWin(event)" width="50"/>
					<mx:TextInput id="usersIds" visible="false"/>
				</mx:HBox>
			</mx:FormItem>
			<mx:FormItem label="岗位描述">
				<s:TextArea id="detail" width="400"/>
			</mx:FormItem>
			<mx:FormItem width="100%">
				<mx:HBox verticalAlign="middle" horizontalAlign="right" width="100%">
					<mx:Button label="保存" click="validateForm(event)" />
					<mx:Button label="重置" click="resetForm(event);" />
				</mx:HBox>
			</mx:FormItem> 
		</mx:Form>
		
	</s:TitleWindow>
	
</s:VGroup>
