<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:valueObjects="basic.entity.*" xmlns:mutiComboBox="system.component.mutiComboBox.*" xmlns:component="system.component.*" layout="vertical" width="100%" height="100%" creationComplete="init();">
	<mx:states>
		<mx:State name="department_list">           
		</mx:State>
		<mx:State name="department_add">           
		</mx:State>
		<mx:State name="list">           
		</mx:State>
		<mx:State name="add">           
		</mx:State>
		<mx:State name="relation_list">           
		</mx:State>
		<mx:State name="relation_add">           
		</mx:State>
	</mx:states>
	<fx:Metadata>
		[Event(name="uploadevent", type="system.event.UploadEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import basic.entity.*;
			import basic.utils.DateUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.formatters.DateFormatter;
			import mx.rpc.events.*;
			import mx.validators.Validator;
			import mx.modules.*;
			
			import system.utils.CommonUtils;
			import system.event.UploadEvent;
			
			private var validatorArr:Array;
			private var createDate:Date;
			private var modifiedDate:Date;
			private var style:int;
			private var teacherId:String;
			private var userID:String;
			private var showFirst:Boolean;
			
			public var sexArr:ArrayCollection = new ArrayCollection(
				[    
					{value:"0", name:"男"}, 
					{value:"1", name:"女"}
				]                
			);
			public var marriageArr:ArrayCollection = new ArrayCollection(
				[    
					{value:"0", name:"未婚"}, 
					{value:"1", name:"已婚"}
				]                
			);
			
			public var politicArr:ArrayCollection = new ArrayCollection(
				[    
					{value:"0", name:"党员"}, 
					{value:"1", name:"团员"},
					{value:"2", name:"其他"}
				]                
			);
			
			public var educationArr:ArrayCollection = new ArrayCollection(
				[    
					{value:"0", name:"本科"}, 
					{value:"1", name:"高中"},
					{value:"2", name:"大专"}
				]                
			);
			
			public var departmentArr:ArrayCollection = new ArrayCollection(
				[    
					{value:"0", name:"教务处"}, 
					{value:"1", name:"其他"}
				]                
			);
			
			public var statusArr:ArrayCollection = new ArrayCollection(
				[    
					{value:"0", name:"正式"}, 
					{value:"1", name:"适用"},
					{value:"2", name:"离职"},
					{value:"3", name:"离休"}
				]                
			);

			
			private function init():void
			{
				showFirst = true;
				
				validatorArr = new Array();
				validatorArr.push(name_stringValidator);
				validatorArr.push(birthday_dateValidator);
				validatorArr.push(nation_stringValidator);
				//validatorArr.push(idCode_stringValidator);
				validatorArr.push(nativePlace_stringValidator);
				//validatorArr.push(department_stringValidator);
				validatorArr.push(position_stringValidator);
				//validatorArr.push(cellphone_phoneNumberValidator);
				//validatorArr.push(homephone_phoneNumberValidator);
				
				/**
				 * When component is created, this function is called.
				 * It instantiates a FileReference object and sets its
				 * listeners.
				 *  
				 * @param event Event object contains details of the event triggering this handler.
				 */ 
				file = new FileReference();
				
				// Set the event listeners on the FileReference ojbect.
				file.addEventListener(Event.SELECT, selectHandler);
				file.addEventListener(Event.OPEN, openHandler);
				file.addEventListener(ProgressEvent.PROGRESS, progressHandler);
				file.addEventListener(IOErrorEvent.IO_ERROR, uploadIoErrorHandler);
				file.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, uploadCompleteHandler);
				file.addEventListener(UploadEvent.UPLOAD_EVENT, uploadEventHandler);
				// Set the upload path from the parent document.
				path = 'upload/image/teacher';
				// Instantiate a new FileFilter.
				imageTypes = new FileFilter("Images (*.jpg, *.jpeg, *.png, *.gif)", "*.jpg; *.jpeg; *.png; *.gif;");
				callLater(initStaffWin);				
			}
			
			private function initStaffWin():void{
				imageSrc = 'resources/oa/layout/default_head.jpg';
				Alert.show(this.label + "000" + this.id + this.name);
				if(this.toolTip=='Update'){		
					//teacherId = this.id;//弹出窗口时设定的中转参数
					//teacherServiceRO.get(teacherId);
				}else{
					teacher = new TeacherModel();
					teacherId = "3";
					//teacherId = ((ModuleLoader)(this.owner)).id;//弹出窗口时设定的中转参数
					//systemServiceRO.getDepartmentById(parentId);
				}
				getDepartment();
			}
			
			protected function teacherGetResult_resultHandler(event:ResultEvent):void
			{
				var teacher:TeacherModel = event.result as TeacherModel;
				style = teacher.style;
				createDate = teacher.creationDate;
				modifiedDate = teacher.modifiedDate;
				userID = teacher.userID;
				
				teacherName.text = teacher.name;
				mail.text = teacher.teacherMail;
				teacherno.text = teacher.teacherNo;
				sex.selectedItem.value = teacher.sex;
				birthday.text = DateUtil.formatDate(teacher.birthday as Date, "YYYY-MM-DD");
				marriage.selectedItem.value = teacher.teacherMarried;
				nation.text = teacher.nation;
				politicStatus.selectedItem.value = teacher.politicsStatus;
				idCode.text = teacher.teacherID;
				nativePlace.text = teacher.teacherNativePlace;
				homePhone.text = teacher.homePhone;
				cellPhone.text = teacher.teacherMobilePhone;
				education.selectedItem.value = teacher.teacherEducation;
				profession.text = teacher.teacherProfession;
				school.text = teacher.teacherGraduateSchool;
				professionalTitle.text = teacher.teacherProfessionTitle;
				skillLevel.text = teacher.teacherSkillLevel;
				skillLevelDate.text = DateUtil.formatDate(teacher.teacherSkillLevelDate as Date, "YYYY-MM-DD");
				department.selectedItem.value = teacher.teacherDepartment;
				position.text = teacher.teacherPosition;
				contactPhone.text = teacher.teacherContactPhone;
				officePhone.text = teacher.teacherOfficePhone;
				workDate.text = DateUtil.formatDate(teacher.teacherWorkDate as Date, "YYYY-MM-DD");
				teacherAddress.text = teacher.teacherAddress;
				
				//teacher.teacherPhoto = status.text;
				status.selectedItem.value = teacher.teacherStatus;
			}
			
			protected function validateForm(event:MouseEvent):void
			{
				
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					teacher.name = teacherName.text;
					teacher.teacherMail = mail.text;
					teacher.teacherNo = teacherno.text;
					teacher.sex = parseInt(sex.selectedItem.value);
					teacher.birthday = DateFormatter.parseDateString(birthday.text);
					teacher.teacherMarried = parseInt(marriage.selectedItem.value);
					teacher.nation = nation.text;
					teacher.politicsStatus = parseInt(politicStatus.selectedItem.value);
					teacher.teacherID = idCode.text;
					teacher.teacherNativePlace = nativePlace.text;
					teacher.homePhone = homePhone.text;
					teacher.teacherMobilePhone = cellPhone.text;
					teacher.teacherEducation = education.selectedItem.value;
					teacher.teacherProfession = profession.text;
					teacher.teacherGraduateSchool = school.text;
					teacher.teacherProfessionTitle = professionalTitle.text;
					teacher.teacherSkillLevel = skillLevel.text;
					teacher.teacherSkillLevelDate = DateFormatter.parseDateString(skillLevelDate.text);
					teacher.teacherDepartment = department.selectedItem.value;
					teacher.teacherPosition = position.text;
					teacher.teacherContactPhone = contactPhone.text;
					teacher.teacherOfficePhone = officePhone.text;
					teacher.teacherWorkDate = DateFormatter.parseDateString(workDate.text);
					teacher.teacherAddress = teacherAddress.text;
					
					//teacher.teacherPhoto = status.text;
					teacher.teacherStatus = parseInt(status.selectedItem.value);
					teacher.teacherAttendDate = DateFormatter.parseDateString(attendDate.text);
					
					teacher.creationDate = createDate;
					teacher.modifiedDate = modifiedDate;
					teacher.style = style;
					teacher.id = teacherId;
					teacher.userID = userID;
					//Alert.show("添加");
					teacherServiceRO.save(teacher);
				} else {
					var err:ValidationResultEvent;
					var errorMessageArray:Array = [];
					for each (err in validatorErrorArray) {
						var errField:String = FormItem(err.currentTarget.source.parent).label
						errorMessageArray.push(errField + ": " + err.message);
					}
					Alert.show(errorMessageArray.join("\n\n"), "请按照以下错误提示信息重新填写", Alert.OK);
				}
			}
			
			protected function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
			
			protected function teacherAddResult_resultHandler(event:ResultEvent):void
			{
				var teacher:Object=event.result;
				if(teacher!=null){
					createDate = teacher.creationDate;
					modifiedDate = teacher.modifiedDate;
					style = teacher.style;
					teacherId = teacher.id;
					userID = teacher.userID;
					Alert.show("添加成功");
				}else{
					Alert.show("添加失败");
				}
			}
			

			protected function teacherno_focusOutHandler(event:FocusEvent):void
			{
				// TODO Auto-generated method stub
			}
			
			private const button_add:Class;
			
			/******************
			 *   work experience
			 * */
			public function work_cancleApply(id:String):void
			{
				Alert.show("你确定要删除该项吗?","确认删除",Alert.NO|Alert.YES,null,function(event:CloseEvent):void{
					if(event.detail == Alert.YES)
						teacherExperienceServiceRO.remove(id);
				},null,Alert.NO);
			}
			public function work_enterEdit(data:Object):void
			{
				workCompany.text = data.company;
				workPosition.text = data.position;
				workStartDate.text = DateUtil.formatDate(data.startDate as Date, "YYYY-MM-DD");
				workEndDate.text = DateUtil.formatDate(data.endDate as Date, "YYYY-MM-DD");
				workId.text = data.id;
				this.currentState = "add";
			}
			
			protected function work_save_clickHandler(event:MouseEvent):void
			{
				if(validateWorkInput()){
					var experience:TeacherExperience = new TeacherExperience();
					experience.company = workCompany.text;
					experience.endDate = DateFormatter.parseDateString(workEndDate.text);
					experience.position = workPosition.text;
					experience.startDate = DateFormatter.parseDateString(workEndDate.text);
					experience.id = workId.text;
					teacherExperienceServiceRO.save(experience, teacherId);
				}
			}
			private function validateWorkInput():Boolean
			{	
				validatorArr = new Array();
				validatorArr.push(workCompany_stringValidator);
				validatorArr.push(workPosition_stringValidator);
				validatorArr.push(workStart_dateValidator);
				validatorArr.push(workEnd_dateValidator);

				var validatorErrorArray:Array = Validator.validateAll(validatorArr);
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					if(teacherId != null)
						return true;
					else{
						Alert.show("请先保存教师信息");
						return false;
					}
				} else {
					var err:ValidationResultEvent;
					var errorMessageArray:Array = [];
					for each (err in validatorErrorArray) {
						var errField:String = FormItem(err.currentTarget.source.parent).label
						errorMessageArray.push(errField + ": " + err.message);
					}
					Alert.show(errorMessageArray.join("\n\n"), "请按照以下错误提示信息重新填写", Alert.OK);
					return false;
				}
			}
		
			protected function teacherExperienceAddResult_resultHandler(event:ResultEvent):void
			{
				this.currentState = "list";
				getExperience();
			}
			
			protected function teacherExperienceRemoveResult_resultHandler(event:ResultEvent):void
			{
				this.currentState = "list";
				getExperience();
			}
			
			protected function teacherExperienceGetResult_resultHandler(event:ResultEvent):void
			{
				this.currentState = "list";
				var allList:ArrayCollection = event.result as ArrayCollection;
				experiences_table.initdata(allList);
			}
						
			private function getExperience():void
			{
				teacherExperienceServiceRO.get(teacherId, experiences_table.curpage,experiences_table.pagecount);
			}
			
			/**********************
			 *   relation
			 * */
			
			public function relation_cancleApply(id:String):void
			{
				Alert.show("你确定要删除该项吗?","确认删除",Alert.NO|Alert.YES,null,function(event:CloseEvent):void{
					if(event.detail == Alert.YES)
						teacherRelationServiceRO.remove(id);
				},null,Alert.NO);	
			}
			public function relation_enterEdit(data:Object):void
			{
				relationName.text = data.name;
				relationWith.text = data.relation;
				relationCompany.text = data.company;
				relationPhone.text = data.phone;
				relationId.text = data.id;
				this.currentState = "relation_add";
			}
			
			
			protected function relation_save_clickHandler(event:MouseEvent):void
			{
				if(validateRelationInput()){
					var relation:TeacherRelation = new TeacherRelation();
					relation.name = relationName.text;
					relation.relation = relationWith.text;
					relation.company = relationCompany.text;
					relation.phone = relationPhone.text;
					relation.id = relationId.text;
					teacherRelationServiceRO.save(relation, teacherId);
				}
			}
			private function validateRelationInput():Boolean
			{	
				validatorArr = new Array();
				validatorArr.push(relation_name_stringValidator);
				validatorArr.push(relation_with_stringValidator);
				validatorArr.push(relation_company_stringValidator);
				validatorArr.push(relation_phone_stringValidator);
				
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					if(teacherId != null)
						return true;
					else{
						Alert.show("请先保存教师信息");
						return false;
					}
				} else {
					var err:ValidationResultEvent;
					var errorMessageArray:Array = [];
					for each (err in validatorErrorArray) {
						var errField:String = FormItem(err.currentTarget.source.parent).label
						errorMessageArray.push(errField + ": " + err.message);
					}
					Alert.show(errorMessageArray.join("\n\n"), "请按照以下错误提示信息重新填写", Alert.OK);
					return false;
				}
			}
			
			protected function teacherRelationAddResult_resultHandler(event:ResultEvent):void
			{
				this.currentState = "relation_list";
				getRelation();
			}
			
			protected function teacherRelationRemoveResult_resultHandler(event:ResultEvent):void
			{
				this.currentState = "relation_list";
				getRelation();
			}
			
			protected function teacherRelationGetResult_resultHandler(event:ResultEvent):void
			{
				this.currentState = "relation_list";
				var allList:ArrayCollection = event.result as ArrayCollection;
				relations_table.initdata(allList);
			}
			
			private function getRelation()
			{
				teacherRelationServiceRO.get(teacherId, relations_table.curpage,relations_table.pagecount);
			}
			
			
			/**********************
			 *   department
			 * */
			public function department_cancleApply(id:String):void
			{
				Alert.show("你确定要删除该项吗?","确认删除",Alert.NO|Alert.YES,null,function(event:CloseEvent):void{
					if(event.detail == Alert.YES)
						teacherDepartmentServiceRO.remove(id);
				},null,Alert.NO);
			}
			
			protected function teacherDepartmentRemoveResult_resultHandler(event:ResultEvent):void
			{
				this.currentState = "department_list";
				getDepartment();
			}
			
			protected function teacherDepartmentAddResult_resultHandler(event:ResultEvent):void
			{
				this.currentState = "department_list";
				getDepartment();
			}
			
			public function department_enterEdit(data:Object):void
			{
				this.currentState='department_add';
				departmentName.text = data.department;
				departmentPosition.text = data.position;
				departmentId.text = data.id;
			}
			
			private function getDepartment():void
			{
				teacherDepartmentServiceRO.get(teacherId, departments_table.curpage, departments_table.pagecount);
			}
			
			protected function department_save_clickHandler(event:MouseEvent):void
			{
				if(validateDepartmentInput()){
					var department:TeacherDepartment = new TeacherDepartment();
					department.department = departmentName.text;
					department.position = departmentPosition.text;
					department.id = departmentId.text;
					teacherDepartmentServiceRO.save(department, teacherId);
				}
			}
			
			protected function teacherDepartmentGetResult_resultHandler(event:ResultEvent):void
			{
				this.currentState = "department_list";
				var allList:ArrayCollection = event.result as ArrayCollection;
				departments_table.initdata(allList);
			}
			
			private function validateDepartmentInput():Boolean
			{	
				validatorArr = new Array();
				validatorArr.push(department_department_stringValidator);
				validatorArr.push(department_position_stringValidator);
				
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					if(teacherId != null)
						return true;
					else{
						Alert.show("请先保存教师信息");
						return false;
					}
				} else {
					var err:ValidationResultEvent;
					var errorMessageArray:Array = [];
					for each (err in validatorErrorArray) {
						var errField:String = FormItem(err.currentTarget.source.parent).label
						errorMessageArray.push(errField + ": " + err.message);
					}
					Alert.show(errorMessageArray.join("\n\n"), "请按照以下错误提示信息重新填写", Alert.OK);
					return false;
				}
			}
			

			/*
			*  tab页 跳转到  其他信息时显示
			*/
			protected function navigatorcontent1_activateHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				this.currentState = "list";
				if(showFirst)
				{
					getExperience();
					getRelation();
					showFirst = false;
				}
			}
			
			/**
			 * Called to format dates in the data grid.
			 */          
			private function formatDate(data:Object, column:DataGridColumn):String
			{
				return DateUtil.formatDate(data[column.dataField] as Date, "YYYY-MM-DD");
			}


			protected function navigatorcontent2_showHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				this.currentState = "department_list";
			}
			
			private var file:FileReference;
			private var path:String;
			
			[Bindable] 
			private var imageSrc:String;  
			
			// Limit the file types in the Browse popup box to ".jpg" 
			// so we can easily find it again when reloading page. 
			private var imageTypes:FileFilter;
			
			/**
			 * Event handler for the "Browse" button's click.
			 * 
			 * @param event Event object contains details of the event triggering this handler.
			 */          
			private function browseHandler(event:Event):void {
				pbrUploadProgress.visible = false;
				btnUpload.visible = false;
				file.browse([imageTypes]);
			}
			
			/**
			 * Event handler for when the user selects a file from disk.
			 * 
			 * @param event Event object contains details of the event triggering this handler.
			 */ 
			private function selectHandler(event:Event):void {
				txtFilename.text = file.name;
				btnUpload.visible = true;
			}
			
			/**
			 * Event handler for when the file is opened.
			 * 
			 * @param event Event object contains details of the event triggering this handler.
			 */ 
			private function openHandler(event:Event):void {
				pbrUploadProgress.visible = true;
				pbrUploadProgress.label = "Uploading %3%% of image file.";
			}
			
			/**
			 * Event handler for the "Upload" button.
			 * Initiates file upload operation.
			 * 
			 * @param event Event object contains details of the event triggering this handler.
			 */ 
			private function uploadHandler(event:Event):void {
				var url:String = 'spring/imageUpload.action';
				var request:URLRequest = new URLRequest(url);
				request.method = URLRequestMethod.POST;
				
				var variables:URLVariables = new URLVariables();
				variables.teacherID = teacherId; 
				request.data = variables;
				
				pbrUploadProgress.visible = true;
				file.upload(request);
			}
			
			/**
			 * Event handler for when the upload starts.
			 * 
			 * @param event ProgressEvent object contains details of the event triggering this handler.
			 */ 
			private function progressHandler(event:ProgressEvent):void {
				pbrUploadProgress.setProgress(event.bytesLoaded, event.bytesTotal);                       
			}
			
			/**
			 * Event handler for when the upload operation has completed.
			 * Specifically manages response data.
			 * 
			 * @param event DataEvent object contains details of the event triggering this handler.
			 */       
			private function uploadCompleteHandler(event:DataEvent):void {
				try {
					var xmlResponse:XML = XML(event.data);
					pbrUploadProgress.label = "Upload complete.";
					
					// Create a custom event. 
					var uploadEvent:UploadEvent = new UploadEvent("uploadevent");
					// Fetch the file element of the servlet's XML response.
					uploadEvent.ServerResponse = xmlResponse.elements("file");
					// Fetch the entire XML response. 
					uploadEvent.ServerResponseRaw = event.data;
					// Dispatch the custom event.
					dispatchEvent(uploadEvent);
					
					imageSrc = path + xmlResponse.elements("file").attribute("id").toString();
				}
				catch (error:Error) {
					pbrUploadProgress.label = "Exception occurred.";
					Alert.show("Exception details: " + error.message,"Exception occured.");
				}
			}
			
			/**
			 * Event handler for the image IO error.
			 * 
			 * @param event IOErrorEvent object contains details of the event triggering this handler.
			 */  
			private function imageIOErrorHandler(event:IOErrorEvent):void {
				txtFilename.text = "找不到相关图片";
				imgPhoto.source = "resources/oa/layout/default_head.jpg";
			}
			
			/**
			 * Event handler for the file upload IO error.
			 * 
			 * @param event IOErrorEvent object contains details of the event triggering this handler.
			 */  
			private function uploadIoErrorHandler(event:IOErrorEvent):void {
				pbrUploadProgress.label = "Encountered error.";
				Alert.show("IO Error: " + event.toString());
			}
			
			/**
			 * Custom event handler for the UploadEvent.
			 * 
			 * <p>Sets some text fields from the event and invalidates
			 * the DataGrid's display list to force a refresh.</p>
			 *
			 * @param event UploadEvent custom event
			 */ 
			private function uploadEventHandler(event:UploadEvent):void {
				txtServerResponse.text = event.ServerResponse;
				txtServerResponseRaw.text = event.ServerResponseRaw;
			}

		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:StringValidator id="name_stringValidator" source="{teacherName}" property="text"  requiredFieldError="不能为空"/>
		<mx:DateValidator id="birthday_dateValidator" inputFormat="YYYY-MM-DD" source="{birthday}" property="text"  requiredFieldError="请选择"/>
		<mx:StringValidator id="nation_stringValidator" source="{nation}" property="text"  requiredFieldError="不能为空"/>
		<mx:RegExpValidator id="idCode_stringValidator" expression="^[0-9]\{18\}[\w]?$" noMatchError="格式错误" source="{idCode}" property="text"  requiredFieldError="不能为空"/>
		<mx:StringValidator id="nativePlace_stringValidator" source="{nativePlace}" property="text"  requiredFieldError="不能为空"/>
		<mx:StringValidator id="position_stringValidator" source="{position}" property="text"  requiredFieldError="不能为空"/>
		<mx:PhoneNumberValidator id="cellphone_phoneNumberValidator" source="{cellPhone}" property="text" minDigits="6" requiredFieldError="错误格式的电话"/>
		<mx:PhoneNumberValidator id="homephone_phoneNumberValidator" source="{homePhone}" required="false" property="text" minDigits="6" requiredFieldError="错误格式的电话"/>
		<mx:DateValidator id="work_dateValidator" inputFormat="YYYY-MM-DD" source="{workDate}" property="text"  requiredFieldError="请选择"/>
		<mx:DateValidator id="attend_dateValidator" inputFormat="YYYY-MM-DD" source="{attendDate}" property="text"  requiredFieldError="请选择"/>
		
		<mx:StringValidator id="workCompany_stringValidator" source="{workCompany}" property="text"  requiredFieldError="不能为空"/>
		<mx:StringValidator id="workPosition_stringValidator" source="{workPosition}" property="text"  requiredFieldError="不能为空"/>
		<mx:DateValidator id="workStart_dateValidator" inputFormat="YYYY-MM-DD" source="{workStartDate}" property="text"  requiredFieldError="请选择"/>
		<mx:DateValidator id="workEnd_dateValidator" inputFormat="YYYY-MM-DD" source="{workEndDate}" property="text"  requiredFieldError="请选择"/>
		
		<mx:StringValidator id="relation_name_stringValidator" source="{relationName}" property="text"  requiredFieldError="不能为空"/>
		<mx:StringValidator id="relation_with_stringValidator" source="{relationWith}" property="text"  requiredFieldError="不能为空"/>
		<mx:StringValidator id="relation_company_stringValidator" source="{relationCompany}" property="text"  requiredFieldError="不能为空"/>
		<mx:StringValidator id="relation_phone_stringValidator" source="{relationPhone}" property="text"  requiredFieldError="不能为空"/>
		
		<mx:StringValidator id="department_department_stringValidator" source="{departmentName}" property="text"  requiredFieldError="不能为空"/>
		<mx:StringValidator id="department_position_stringValidator" source="{departmentPosition}" property="text"  requiredFieldError="不能为空"/>
		
		<valueObjects:TeacherModel id="teacher"/>
		<mx:RemoteObject id="teacherServiceRO" destination="teacherServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="save"  concurrency="last"  result="teacherAddResult_resultHandler(event);" />
			<mx:method name="get"  concurrency="last"  result="teacherGetResult_resultHandler(event);" />
		</mx:RemoteObject>
		<mx:RemoteObject id="teacherExperienceServiceRO" destination="teacherExperienceServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="save"  concurrency="last"  result="teacherExperienceAddResult_resultHandler(event);" />
			<mx:method name="get"  concurrency="last"  result="teacherExperienceGetResult_resultHandler(event);" />
			<mx:method name="remove"  concurrency="last"  result="teacherExperienceRemoveResult_resultHandler(event);" />
		</mx:RemoteObject>
		<mx:RemoteObject id="teacherDepartmentServiceRO" destination="teacherDepartmentServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="save"  concurrency="last"  result="teacherDepartmentAddResult_resultHandler(event);" />
			<mx:method name="get"  concurrency="last"  result="teacherDepartmentGetResult_resultHandler(event);" />
			<mx:method name="remove"  concurrency="last"  result="teacherDepartmentRemoveResult_resultHandler(event);" />
		</mx:RemoteObject>
		<mx:RemoteObject id="teacherRelationServiceRO" destination="teacherRelationServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="save"  concurrency="last"  result="teacherRelationAddResult_resultHandler(event);" />
			<mx:method name="get"  concurrency="last"  result="teacherRelationGetResult_resultHandler(event);" />
			<mx:method name="remove"  concurrency="last"  result="teacherRelationRemoveResult_resultHandler(event);" />
		</mx:RemoteObject>
		<mx:HTTPService id="teacherNoValidate" url="/servlet/teacherNoValidate" showBusyCursor="true" method="POST">  
		</mx:HTTPService> 
	</fx:Declarations>
	<s:Panel width="100%" height="100%" title="教师信息编辑"  styleName="customPanel"   borderVisible="true" dropShadowVisible="false">
		<s:VGroup width="100%" height="100%">
			<mx:TabNavigator id="systems"  width="100%" height="100%" tabStyleName="customTabStyles"  horizontalGap="1" borderVisible="false"  tabWidth="120" paddingTop="0">
				<s:NavigatorContent label="基础信息" show="navigatorcontent2_showHandler(event)">
					<s:layout>
						<s:VerticalLayout/>
					</s:layout>
					<mx:Form width="100%" height="100%" textAlign="left" labelWidth="70" id="teacherForm">
						<s:Scroller width="100%" height="100%" verticalScrollPolicy="on">
							<s:VGroup width="100%" height="100%">							
							<s:HGroup  width="100%" height="40%">
								<s:VGroup width="10%" height="100%">
									<s:Label>
										<s:text>基本信息</s:text>
									</s:Label>
								</s:VGroup>
								<s:VGroup width="40%" height="100%">
									<s:HGroup width="100%">
										<mx:FormItem label="姓名" width="50%"><s:TextInput id="teacherName" width="100%"/></mx:FormItem>
										<mx:FormItem label="性别" width="50%">
											<s:DropDownList id="sex" selectedIndex="0" width="100%" dataProvider="{sexArr}" labelField="name"/> 
										</mx:FormItem>
									</s:HGroup>
									<s:HGroup width="100%">
										<mx:FormItem label="婚姻状况" width="50%">
											<s:DropDownList id="marriage" width="100%" selectedIndex="0" dataProvider="{marriageArr}" labelField="name"/>
										</mx:FormItem>
										<mx:FormItem label="民族" width="50%"><mx:TextInput id="nation" width="100%"/></mx:FormItem>
									</s:HGroup>
									<mx:FormItem label="身份证号" width="100%"><mx:TextInput id="idCode" width="100%"/></mx:FormItem>
									<mx:FormItem label="邮箱" width="100%"><mx:TextInput id="mail" width="100%"/></mx:FormItem>
									<mx:FormItem label="家庭地址" width="100%"><mx:TextInput id="teacherAddress" width="100%"/></mx:FormItem>
								</s:VGroup>
								<s:VGroup width="30%">
									<s:HGroup width="100%">
										<mx:FormItem label="出生年月" width="100%">
											<mx:DateField id="birthday" width="100%" yearNavigationEnabled="true" formatString="YYYY-MM-DD"/>
										</mx:FormItem>
									</s:HGroup>
									<mx:FormItem label="政治面貌" width="100%">
										<s:DropDownList 
											id="politicStatus" 
											width="100%" dataProvider="{politicArr}"
											selectedIndex="0" 
											labelField="name"/> 
									</mx:FormItem>
									<mx:FormItem label="籍贯" width="100%">
										<mx:TextInput id="nativePlace" width="100%"/>
									</mx:FormItem>
									<mx:FormItem label="家庭电话" width="100%">
										<mx:TextInput id="homePhone" width="100%"/>
									</mx:FormItem>
									<mx:FormItem label="手机" width="100%"><mx:TextInput id="cellPhone" width="100%"/></mx:FormItem>
								</s:VGroup>
								<s:VGroup width="20%">
									<mx:FormItem label="照片" width="100%" height="200%">
										<mx:Image id="imgPhoto" visible="true" autoLoad="true" width="100" height="100" source="{imageSrc}" ioError="imageIOErrorHandler(event)"/>
										<mx:VBox>
											<mx:TextInput id="txtFilename" editable="false" />
											<mx:HBox>
												<mx:Button id="btnBrowse" label="Browse" click="browseHandler(event)" />
												<mx:Button id="btnUpload" label="Upload" click="uploadHandler(event)" visible="false" />
											</mx:HBox>
											<mx:ProgressBar id="pbrUploadProgress" indeterminate="false" mode="manual"
															fontWeight="bold" color="red" labelPlacement="bottom" trackHeight="9" visible="false" />
										</mx:VBox>
									</mx:FormItem>
									<mx:FormItem direction="horizontal" width="100%" label="Server Response:">
										<mx:TextInput editable="false" id="txtServerResponse" />
									</mx:FormItem>
									<mx:FormItem direction="horizontal" width="100%" label="Server Response (Raw):">
										<mx:TextArea editable="false"  id="txtServerResponseRaw" width="100%" height="150" />
									</mx:FormItem>
									<mx:FormItem label="短号" width="100%">
										<mx:TextInput id="teacherno" width="100%" focusOut="teacherno_focusOutHandler(event)"/>
									</mx:FormItem>
								</s:VGroup>
							</s:HGroup>
							<s:HGroup  width="100%" height="20%">
								<s:VGroup width="10%" height="100%">
									<s:Label>
										<s:text>教育背景</s:text>
									</s:Label>
								</s:VGroup>
								<s:VGroup width="20%">
									<mx:FormItem label="学历" width="100%">
										<s:ComboBox 
											id="education" 
											width="100%" 
											selectedIndex="0" 
											dataProvider="{educationArr}" 
											labelField="name"/>
									</mx:FormItem>
									<mx:FormItem label="职称" width="100%">
										<mx:TextInput id='professionalTitle' width="100%"/>
									</mx:FormItem>
								</s:VGroup>
								<s:VGroup width="30%">
									<mx:FormItem label="专业" width="100%">
										<mx:TextInput id='profession' width="100%"/>
									</mx:FormItem>
									<mx:FormItem label="技能等级" width="100%">
										<mx:TextInput id='skillLevel' width="100%"/>
									</mx:FormItem>
								</s:VGroup>
								<s:VGroup width="50%">
									<mx:FormItem label="毕业院校" width="100%">
										<mx:TextInput id='school'/>
									</mx:FormItem>
									<mx:FormItem label="技能鉴定时间" width="100%">
										<mx:DateField id="skillLevelDate" width="100%"/>
									</mx:FormItem>
								</s:VGroup>
							</s:HGroup>
							<s:HGroup  width="100%" height="40%">
								<s:VGroup width="10%" height="100%">
									<s:Label>
										<s:text>温中聘请信息</s:text>
									</s:Label>
								</s:VGroup>								
								<s:VGroup width="100%">
									<s:HGroup width="100%">
										<mx:FormItem label="部门" width="20%">
											<s:ComboBox 
												id="department" 
												width="100%" 
												selectedIndex="0" 
												dataProvider="{departmentArr}" 
												labelField="name"/>
										</mx:FormItem>
										<mx:FormItem label="职务" width="30%">
											<mx:TextInput id='position' width="100%"/>
										</mx:FormItem>
										<mx:FormItem label="办公电话" width="50%">
											<mx:TextInput id='officePhone' width="100%"/>
										</mx:FormItem>
									</s:HGroup>
									<s:HGroup width="100%">
										<mx:FormItem label="紧要联络电话" width="20%">
											<mx:TextInput id='contactPhone' width="100%"/>
										</mx:FormItem>
										<mx:FormItem label="何时工作" width="30%">
											<mx:DateField id='workDate' width="100%" formatString="YYYY-MM-DD"/>
										</mx:FormItem>
										<mx:FormItem label="工龄" width="50%">
											<mx:TextInput id='workPeriod' width="100%"/>
										</mx:FormItem>
									</s:HGroup>
									<s:HGroup width="100%">
										<mx:FormItem label="入校时间" width="20%">
											<mx:DateField id="attendDate" width="100%" formatString="YYYY-MM-DD"/>
										</mx:FormItem>
										<mx:FormItem label="校龄" width="30%">
											<mx:TextInput id='attendPeriod' width="100%"/>
										</mx:FormItem>
										<mx:FormItem label="状态" width="20%">
											<s:DropDownList id='status' width="100%" 
															dataProvider="{educationArr}" 
															labelField="name" selectedIndex="0"/>
										</mx:FormItem>
										<s:Button click="validateForm(event)" label="保存"/>
									</s:HGroup>
									<s:HGroup width="100%">
										<s:Panel width="100%" height="100%" title="其他单位"  borderVisible="false" id="departments" dropShadowVisible="false">
											<s:VGroup width="100%" height="100%" id="department_listPanel" excludeFrom="department_add">
												<s:HGroup verticalAlign="middle" horizontalAlign="right" width="100%" fontSize="12" height="30" paddingLeft="20">
													<s:Label text="|"/>
													<mx:LinkButton  label="添加" icon="@Embed(source='../WebContent/resources/common/tools/button_add_icon.png')" click=" this.currentState='department_add'" />
													<s:Label text="|"/>
												</s:HGroup>
												<s:VGroup width="100%" height="100%"  gap="10" verticalAlign="middle" horizontalAlign="center">
													<s:HGroup width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingBottom="10">
														<s:Panel width="100%" height="100%"  styleName="customPanel" title="部门记录"  cornerRadius="5" borderVisible="false" dropShadowVisible="false">
															<component:WlzxPageDataGrid width="100%" height="100%" borderVisible="false"   borderAlpha="0.2" verticalAlign="middle"   id="departments_table" pagecount="10"  >				
																<component:mygridcolumns>
																	
																	<mx:DataGridColumn textAlign="center" headerText="部门" dataField="department" width="100"></mx:DataGridColumn>
																	<mx:DataGridColumn textAlign="center" headerText="职务" dataField="position" width="170"></mx:DataGridColumn>
																	<mx:DataGridColumn textAlign="center" headerText="编辑" width="60">
																		<mx:itemRenderer>
																			<fx:Component>
																				<mx:LinkButton  label="[编辑]"   click="{this.outerDocument.department_enterEdit(data);}">											
																				</mx:LinkButton>										
																			</fx:Component>
																		</mx:itemRenderer>
																	</mx:DataGridColumn>
																	<mx:DataGridColumn textAlign="center" headerText="删除"  width="60">
																		<mx:itemRenderer>
																			<fx:Component>
																				<mx:LinkButton  label="[删除]"   click="{this.outerDocument.department_cancleApply(data.id);}">											
																				</mx:LinkButton>										
																			</fx:Component>
																		</mx:itemRenderer>
																	</mx:DataGridColumn>
																</component:mygridcolumns>
															</component:WlzxPageDataGrid>
														</s:Panel>
													</s:HGroup>
												</s:VGroup>
											</s:VGroup>
											<s:VGroup width="100%" height="100%" id="department_addPanel" excludeFrom="department_list">
												<s:HGroup verticalAlign="middle" horizontalAlign="right" width="100%" fontSize="12">
													<s:HGroup width="100%" height="30" paddingLeft="20"  gap="0"  verticalAlign="middle">
														<s:Label text="|"/>
														<mx:LinkButton  label="返回" icon="@Embed(source='../WebContent/resources/common/tools/button_back_icon.png')" click="currentState='department_list';" />
														<s:Label text="|"/>
													</s:HGroup>
												</s:HGroup>
												<s:VGroup width="100%" height="50%" gap="10" verticalAlign="middle" horizontalAlign="left" paddingTop="10" paddingBottom="10"   paddingLeft="10" paddingRight="10">
													<s:VGroup width="100%" horizontalAlign="center" height="100%" verticalAlign="middle" paddingLeft="20" paddingRight="20">
														<mx:Grid width="80%" height="100%" id="department_container"  verticalGap="10" horizontalGap="5"   borderStyle="solid" paddingBottom="10" paddingTop="10" paddingLeft="10" paddingRight="10">
															
															<mx:GridRow width="100%" height="30"  >
																<mx:GridItem    verticalAlign="middle" horizontalAlign="right">
																	<mx:Label  text="部门" width="60"  textAlign="right" />
																</mx:GridItem>
																<mx:GridItem  verticalAlign="middle" horizontalAlign="center">
																	<mx:TextInput width="120" id="departmentName"/>
																</mx:GridItem>
																<mx:GridItem    verticalAlign="middle" horizontalAlign="right">
																	<mx:Label  text="职务" width="60"  textAlign="right" />
																</mx:GridItem>
																<mx:GridItem  verticalAlign="middle" horizontalAlign="center">
																	<mx:TextInput width="120" id="departmentPosition"/>
																</mx:GridItem>
																<mx:GridItem  verticalAlign="middle" horizontalAlign="center">
																	<s:TextInput id="departmentId" visible="false"/>
																	<mx:Button label="保存" width="60" click="department_save_clickHandler(event)"/>
																</mx:GridItem>
															</mx:GridRow>
														</mx:Grid>
													</s:VGroup>
												</s:VGroup>
											</s:VGroup>
										</s:Panel>
									</s:HGroup>
								</s:VGroup>
							</s:HGroup>
							</s:VGroup>
						</s:Scroller>
					</mx:Form>
				</s:NavigatorContent>
				<s:NavigatorContent label="其他信息" show="navigatorcontent1_activateHandler(event)">
					<s:layout>
						<s:VerticalLayout/>
					</s:layout>
					<s:Scroller width="100%" height="100%" verticalScrollPolicy="auto">
						<s:VGroup width="100%">
							<s:HGroup width="100%" height="50%">
								<s:Panel width="100%" height="100%" title="工作经历"  borderVisible="false" id="work_experience" dropShadowVisible="false">
									<s:VGroup width="100%" height="100%" id="work_experience_listPanel" excludeFrom="add">
										<s:HGroup verticalAlign="middle" horizontalAlign="right" width="100%" fontSize="12" height="30" paddingLeft="20">
											<s:Label text="|"/>
											<mx:LinkButton  label="添加" icon="@Embed(source='../WebContent/resources/common/tools/button_add_icon.png')" click=" this.currentState='add'" />
											<s:Label text="|"/>
										</s:HGroup>
										<s:VGroup width="100%" height="100%"  gap="10" verticalAlign="middle" horizontalAlign="center">
											<s:HGroup width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingBottom="10">
													<component:WlzxPageDataGrid width="100%" height="100%" borderVisible="false"   borderAlpha="0.2" verticalAlign="middle"   id="experiences_table" pagecount="10" >				
														<component:mygridcolumns>
															<mx:DataGridColumn textAlign="center" headerText="开始时间" dataField="startDate" width="100" labelFunction="formatDate"></mx:DataGridColumn>
															<mx:DataGridColumn textAlign="center" headerText="截止时间" dataField="endDate" width="170" labelFunction="formatDate"></mx:DataGridColumn>
															<mx:DataGridColumn textAlign="center" headerText="工作单位" dataField="company" width="120"></mx:DataGridColumn>
															<mx:DataGridColumn textAlign="center" headerText="职务" dataField="position" width="120"></mx:DataGridColumn>
															<mx:DataGridColumn textAlign="center" headerText="编辑" width="60">
																<mx:itemRenderer>
																	<fx:Component>
																		<mx:LinkButton  label="[编辑]"   click="{this.outerDocument.work_enterEdit(data);}">											
																		</mx:LinkButton>										
																	</fx:Component>
																</mx:itemRenderer>
															</mx:DataGridColumn>
															<mx:DataGridColumn textAlign="center" headerText="删除"  width="60">
																<mx:itemRenderer>
																	<fx:Component>
																		<mx:LinkButton  label="[删除]"   click="{this.outerDocument.work_cancleApply(data.id);}">											
																		</mx:LinkButton>										
																	</fx:Component>
																</mx:itemRenderer>
															</mx:DataGridColumn>
														</component:mygridcolumns>
													</component:WlzxPageDataGrid>
											</s:HGroup>
										</s:VGroup>
									</s:VGroup>
									<s:VGroup width="100%" height="100%" id="work_experience_addPanel" excludeFrom="list, relation_add, relation_list">
										<s:HGroup verticalAlign="middle" horizontalAlign="right" width="100%" fontSize="12">
											<s:HGroup width="100%" height="30" paddingLeft="20"  gap="0"  verticalAlign="middle">
												<s:Label text="|"/>
												<mx:LinkButton  label="返回" icon="@Embed(source='../WebContent/resources/common/tools/button_back_icon.png')" click="currentState='list';" />
												<s:Label text="|"/>
											</s:HGroup>
										</s:HGroup>
										<s:VGroup width="100%" height="50%" gap="10" verticalAlign="middle" horizontalAlign="left" paddingTop="10" paddingBottom="10"   paddingLeft="10" paddingRight="10">
											<s:VGroup width="100%" horizontalAlign="center" height="100%" verticalAlign="middle" paddingLeft="20" paddingRight="20">
												<mx:Grid width="80%" height="100%" id="container"  verticalGap="10" horizontalGap="5"   borderStyle="solid" paddingBottom="10" paddingTop="10" paddingLeft="10" paddingRight="10">
													
													<mx:GridRow width="100%" height="30"  >
														<mx:GridItem    verticalAlign="middle" horizontalAlign="right">
															<mx:Label  text="开始时间" width="60"  textAlign="right" />
														</mx:GridItem>
														<mx:GridItem  verticalAlign="middle" horizontalAlign="center">
															<mx:DateField width="120" formatString="YYYY-MM-DD"  name="workStartDate" id="workStartDate"/>
														</mx:GridItem>
														<mx:GridItem    verticalAlign="middle" horizontalAlign="right">
															<mx:Label  text="截止时间" width="60"  textAlign="right" />
														</mx:GridItem>
														<mx:GridItem  verticalAlign="middle" horizontalAlign="center">
															<mx:DateField width="120" formatString="YYYY-MM-DD"  name="workEndDate" id="workEndDate"/>
														</mx:GridItem>
														<mx:GridItem    verticalAlign="middle" horizontalAlign="right">
															<mx:Label  text="工作单位" width="60"  textAlign="right" />
														</mx:GridItem>
														
														<mx:GridItem  verticalAlign="middle" horizontalAlign="center" >
															<mx:TextInput width="120" name="workDepartment" id="workCompany"/>
														</mx:GridItem>
														<mx:GridItem    verticalAlign="middle" horizontalAlign="left">
															<mx:Label  text="职务" width="60"  textAlign="right"/>
														</mx:GridItem>
														<mx:GridItem  verticalAlign="middle" horizontalAlign="center" >
															<mx:TextInput width="120" name="workPosition" id="workPosition"/>
															<mx:TextInput id="workId" visible="false"/>

														</mx:GridItem>
														<mx:GridItem  verticalAlign="middle" horizontalAlign="center" >
															<mx:Button label="保存" width="60" click="work_save_clickHandler(event)"/>
														</mx:GridItem>
													</mx:GridRow>
												</mx:Grid>
											</s:VGroup>
										</s:VGroup>
									</s:VGroup>
								</s:Panel>
							</s:HGroup>
							<s:HGroup width="100%" height="50%">
								<s:Panel width="100%" height="100%" title="社会关系"  borderVisible="false" id="relations" dropShadowVisible="false">
									<s:VGroup width="100%" height="100%" id="relation_listPanel" excludeFrom="relation_add">
										<s:HGroup verticalAlign="middle" horizontalAlign="right" width="100%" fontSize="12" height="30" paddingLeft="20">
											<s:Label text="|"/>
											<mx:LinkButton  label="添加" icon="@Embed(source='../WebContent/resources/common/tools/button_add_icon.png')" click=" this.currentState='relation_add'" />
											<s:Label text="|"/>
										</s:HGroup>
										<s:VGroup width="100%" height="100%"  gap="10" verticalAlign="middle" horizontalAlign="center">
											<s:HGroup width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingBottom="10">
													<component:WlzxPageDataGrid width="100%" height="100%" borderVisible="false"   borderAlpha="0.2" verticalAlign="middle"   id="relations_table" pagecount="10"  >				
														<component:mygridcolumns>
															
															<mx:DataGridColumn textAlign="center" headerText="姓名" dataField="name" width="100"></mx:DataGridColumn>
															<mx:DataGridColumn textAlign="center" headerText="与本人关系" dataField="relation" width="170"></mx:DataGridColumn>
															<mx:DataGridColumn textAlign="center" headerText="工作单位" dataField="company" width="120"></mx:DataGridColumn>
															<mx:DataGridColumn textAlign="center" headerText="联系电话" dataField="phone" width="120"></mx:DataGridColumn>
															<mx:DataGridColumn textAlign="center" headerText="编辑" width="60">
																<mx:itemRenderer>
																	<fx:Component>
																		<mx:LinkButton  label="[编辑]"   click="{this.outerDocument.relation_enterEdit(data);}">											</mx:LinkButton>										
																	</fx:Component>
																</mx:itemRenderer>
															</mx:DataGridColumn>
															<mx:DataGridColumn textAlign="center" headerText="删除"  width="60">
																<mx:itemRenderer>
																	<fx:Component>
																		<mx:LinkButton  label="[删除]"   click="{this.outerDocument.relation_cancleApply(data.id);}">											</mx:LinkButton>										
																	</fx:Component>
																</mx:itemRenderer>
															</mx:DataGridColumn>
														</component:mygridcolumns>
													</component:WlzxPageDataGrid>
											</s:HGroup>
										</s:VGroup>
									</s:VGroup>
									<s:VGroup width="100%" height="100%" id="relation_addPanel" excludeFrom="relation_list, list, add">
										<s:HGroup verticalAlign="middle" horizontalAlign="right" width="100%" fontSize="12">
											<s:HGroup width="100%" height="30" paddingLeft="20"  gap="0"  verticalAlign="middle">
												<s:Label text="|"/>
												<mx:LinkButton  label="返回" icon="@Embed(source='../WebContent/resources/common/tools/button_back_icon.png')" click="currentState='relation_list';" />
												<s:Label text="|"/>
											</s:HGroup>
										</s:HGroup>
										<s:VGroup width="100%" height="50%" gap="10" verticalAlign="middle" horizontalAlign="left" paddingTop="10" paddingBottom="10"   paddingLeft="10" paddingRight="10">
											<s:VGroup width="100%" horizontalAlign="center" height="100%" verticalAlign="middle" paddingLeft="20" paddingRight="20">
												<mx:Grid width="80%" height="100%" id="relation_container"  verticalGap="10" horizontalGap="5"   borderStyle="solid" paddingBottom="10" paddingTop="10" paddingLeft="10" paddingRight="10">
													
													<mx:GridRow width="100%" height="30"  >
														<mx:GridItem    verticalAlign="middle" horizontalAlign="right">
															<mx:Label  text="姓名" width="60"  textAlign="right" />
														</mx:GridItem>
														<mx:GridItem  verticalAlign="middle" horizontalAlign="center">
															<mx:TextInput width="120" id="relationName"/>
														</mx:GridItem>
														<mx:GridItem    verticalAlign="middle" horizontalAlign="right">
															<mx:Label  text="与本人关系" width="60"  textAlign="right" />
														</mx:GridItem>
														<mx:GridItem  verticalAlign="middle" horizontalAlign="center">
															<mx:TextInput width="120" id="relationWith"/>
														</mx:GridItem>
														<mx:GridItem    verticalAlign="middle" horizontalAlign="right">
															<mx:Label  text="工作单位" width="60"  textAlign="right" />
														</mx:GridItem>
														
														<mx:GridItem  verticalAlign="middle" horizontalAlign="center" >
															<mx:TextInput width="120" id="relationCompany"/>
														</mx:GridItem>
														<mx:GridItem    verticalAlign="middle" horizontalAlign="left">
															<mx:Label  text="联系电话" width="60"  textAlign="right"/>
														</mx:GridItem>
														<mx:GridItem  verticalAlign="middle" horizontalAlign="center" >
															<mx:TextInput width="120" id="relationPhone"/>
															<mx:TextInput id="relationId" visible="false"/>
														</mx:GridItem>
														<mx:GridItem  verticalAlign="middle" horizontalAlign="center" >
															<mx:Button label="保存" width="60" click="relation_save_clickHandler(event)"/>
														</mx:GridItem>
													</mx:GridRow>
												</mx:Grid>													
											</s:VGroup>
										</s:VGroup>
									</s:VGroup>
								</s:Panel>
							</s:HGroup>
						</s:VGroup>
					</s:Scroller>
					
				</s:NavigatorContent>
			</mx:TabNavigator>
		</s:VGroup>
	</s:Panel>
</mx:Module>
