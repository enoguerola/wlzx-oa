<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:hc="com.hillelcoren.components.*"
		   xmlns:render="system.component.render.*"
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" width="100%" height="100%" creationComplete="initData();" xmlns:valueObjects="basic.entity.*" xmlns:component="system.component.*">
	<fx:Declarations>
		
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<valueObjects:TeacherModel id="teacher"/>
		<mx:RemoteObject id="teacherServiceRO" destination="teacherServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getTeacherModels"  concurrency="last"  result="searchResult_resultHandler(event);" />
			<mx:method name="remove"  concurrency="last"  result="removeResult_resultHandler(event);" />
			<mx:method name="changeStatus"  concurrency="last"  result="changeResult_resultHandler(event);" />
		</mx:RemoteObject>
		<!--<mx:RemoteObject id="systemServiceRO" destination="systemServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getDepartmentBySymbol"  concurrency="last"  result="getDepartmentBySymbolResult(event);" />
		</mx:RemoteObject>-->
		<fx:Component id="searchAccountDropDownItemRenderer">
			<render:AdvancedItemRenderer selectedItems="{ outerDocument.search_account.selectedItems }" />
		</fx:Component>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import basic.utils.DateUtil;
			import basic.utils.Excel;
			import system.component.lockWin.LockWinTool;
			import flash.events.*;
			import flash.net.FileFilter;
			import flash.net.FileReference;
			import flash.net.URLRequest;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Button;
			import mx.core.FlexGlobals;
			import mx.core.INavigatorContent;
			import mx.events.CloseEvent;
			import mx.events.ItemClickEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.*;
			import mx.utils.StringUtil;
			
			
			import system.entity.*;
			import system.utils.CommonUtils;
			[Bindable]   
			private var filename:String; 
			[Bindable]   
			private var file:FileReference = new FileReference(); 			
			private var excel:Excel = new Excel;
			public var departmentList:ArrayCollection = new ArrayCollection();
			
			public var statusArr:ArrayCollection = new ArrayCollection(
				[    
					{data:-1, label:"请选择"}, 
					{data:0, label:"正式"}, 
					{data:1, label:"试用"},
					{data:2, label:"离职"},
					{data:3, label:"退休"}
				]                
			);
			
			protected function searchResult_resultHandler(event:ResultEvent):void
			{
				LockWinTool.unLockCurrentWin();
				var result:Object=event.result as Object;
				var list:Object=new Object;
				list.data=(result==null?new ArrayCollection():result.items);
				list.totalLength=(result==null?0:result.totalCount);
				if(result!=null){
					pc.AppandData(list);
					
				}else{
					table.dataProvider=null;
				}
			}
			
			public function initData():void {
				search_account.dataProvider=this.parentApplication.allTeacherAcccounts;
				//systemServiceRO.getDepartmentBySymbol("root");//初始化部门数据字典
				creationCompletedHandler();
				
				departmentList = new ArrayCollection(CommonUtils.clone(this.parentApplication.allDepartment.source));
				var _init:Object = {label:'请选择',data:""};
				departmentList.addItemAt(_init,0);
				department.dataProvider=departmentList;
				department.selectedIndex = 0;
				search();
			}
			
			public function detail(event:Event):void{
				var selectedIndex:int = table.selectedIndex;
				if(selectedIndex==-1)
					Alert.show("当前未选中任意行");
				else{
					editItem(table.selectedItem.id);
				}
			}
			public function search():void{
				pc.GoToControll(1);
			}
			public function searchPage(index:int,dataLength:int):void{
				LockWinTool.lockCurrentWin(this,"搜索员工信息中");
				teacher = new TeacherModel();
				teacher.name = _name.text;
				teacher.teacherDepartment = department.selectedItem.data;
				teacher.teacherStatus = status.selectedItem.data;
				teacher.teacherAttendDate = DateFormatter.parseDateString(attendDate.text);
				teacherServiceRO.getTeacherModels(teacher,index-1,index-1+dataLength);
			}
			
			private function creationCompletedHandler():void
			{
				Security.allowDomain("*");   
				this.addEventListener(Event.CLOSE, TitleWindowClose);   
				file.addEventListener(ProgressEvent.PROGRESS,progressHandler);   
				file.addEventListener(Event.SELECT, selectedHandler);   
				file.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler); 
				file.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, uploadComplete);
			}
			
			private function uploadComplete(e:DataEvent):void   
			{   
				LockWinTool.unLockCurrentWin();
				var xmlResponse:XML = XML(e.data);
				//Alert.show(xmlResponse+"");
				var list:XMLList = xmlResponse.field;
				var error:String = "";
				var item:XML;
				for each(item in list){
					error += item.toString() + "\n";
				}
				if(error!=null&&error!='')
				Alert.show(error,  "以下短号重复", Alert.OK);
				_name.text = "";
				department.selectedIndex = 0;
				status.selectedIndex = 0;
				attendDate.text = "";
				search();
				//重新加载帐号姓名对应全局信息
				this.parentApplication.teacherAccountBridgeServiceRO.teacherAccountGetAll();
			} 
			
			private function ioErrorHandler(e:IOErrorEvent):void   
			{   
				Alert.show("有错误"); 
				LockWinTool.unLockCurrentWin();
			}  
			import	mx.controls.ProgressBarMode;

			private function progressHandler(e:ProgressEvent):void   
			{   
				uploadbar.visible = true;
				uploadbar.mode=ProgressBarMode.POLLED;

				lblProgress.text = " 已上传 " + e.bytesLoaded   + " 字节，共 " + e.bytesTotal + " 字节";    
				var proc: uint = e.bytesLoaded / e.bytesTotal * 100;    
				uploadbar.label= "当前进度: " + " " + proc + "%";   
				uploadbar.setProgress(proc, 100);    
				
				uploadbar.validateNow();
			}
			
			/**Event事件监听处理函数，弹出上传提示窗口   
			 * @param e，Event类型事件参数   
			 * @author  54cwf@163.com   
			 * * @return void   
			 **/   
			private function selectedHandler(e:Event):void   
			{   
				Alert.show("上传 " + file.name + " (共 "+Math.round(file.size/1024)+"KB)?",     
					"确认上传",  
					Alert.YES|Alert.NO,      
					null,      
					proceedWithUpload);   
			}  
			
			
			/**CloseEvent事件监听处理函数，访问upload的servlet服务   
			 * @param e，Event类型事件参数   
			 * @author  54cwf@163.com               
			 * * @return void   
			 * */   
			private function proceedWithUpload(e:CloseEvent): void
			{      
				if (e.detail == Alert.YES)   
				{      
					LockWinTool.lockCurrentWin(this,"档案导入中");
					var params:URLVariables = new URLVariables();
					params.name = "123213";
					var request:URLRequest = new URLRequest(parentApplication.homeUrl+"basic/staff/spring/excelUpload.action");
					request.data = params;
					try    
					{      
						file.upload(request, "file");      
					}    
					catch (error:Error)    
					{      
						Alert.show("上传失败","错误"); 
					}      
				}      
			}   
			
			/**CloseEvent事件监听处理函数，关闭TitleWindow弹出窗口   
			 * @param e，事件参数   
			 * @author  54cwf@163.com  
			 * * @return void   
			 * */   
			private function TitleWindowClose(e:CloseEvent):void   
			{   
				PopUpManager.removePopUp(this);   
			}  

			
			public function importExcel(event:Event):void
			{
				var typefiter:FileFilter = new FileFilter("Excel","*.xls");
				file.browse([typefiter]); 
			}
			
			public function exportExcel(event:Event):void
			{
				excel.load("general/export/teachers.action", "");
			}
			
			protected function systemFaultHandler(event:FaultEvent):void {
				LockWinTool.unLockCurrentWin();
				Alert.show(event.fault.faultString, 'Error');
			}
			
			/**
			 * Called to format dates in the data grid.
			 */          
			private function formatDate(data:Object, column:DataGridColumn):String
			{
				return DateUtil.formatDate(data[column.dataField] as Date, "YYYY-MM-DD");
			}
			         
			private function formatSex(data:Object, column:DataGridColumn):String
			{
				if(data[column.dataField] == 0)
					return "男";
				else
					return "女";
			}
			
			private function formatPhone(data:Object, column:DataGridColumn):String
			{
				if(data[column.dataField] == 0)
					return "男";
				else
					return "女";
			}
			
			public function deleteItem(item_id:String):void
			{
				Alert.show("你确定要删除该项吗?","确认删除",Alert.NO|Alert.YES,null,function(event:CloseEvent):void{
					if(event.detail == Alert.YES)
						teacherServiceRO.remove(item_id);
				},null,Alert.NO);
			}
			
			protected function removeResult_resultHandler(event:ResultEvent):void
			{
				search();
			}
			
			public function editItem(item_id:String):void
			{
				var parent:Object=(Object)(((Object)(this.owner)).owner);
				parent.addTab("staff_input_menu-edit"+item_id,"教师编辑",parent.nav,"basic/staff/staffInput.swf",null,item_id);
			}
			public function editDetail(item_id:String):void
			{
				var parent:Object=(Object)(((Object)(this.owner)).owner);
				parent.addTab("staff_detail"+item_id,"教师详细",parent.nav,"basic/staff/staffDetail.swf",null,item_id);
			}
			
			public function changestatus(item_id:String, status:int):void
			{
				teacherServiceRO.changeStatus(item_id, status);
			}
			
			protected function changeResult_resultHandler(event:ResultEvent):void
			{
				search();
				//重新加载帐号姓名对应全局信息
				this.parentApplication.teacherAccountBridgeServiceRO.teacherAccountGetAll();
			}

			/* private function getDepartmentBySymbolResult(event:ResultEvent):void {
				var _department:DepartmentModel = event.result as DepartmentModel;
				buildSubDepartments(_department,departmentList,0);
				var _init:Object = {label:'请选择',data:""};
				departmentList.addItemAt(_init,0);
				department.selectedIndex = 0;
				search();
			} */
			
			/* private function buildSubDepartments(department:DepartmentModel,resultList:ArrayCollection,depth:int):void{
				var headText:String="";
				for(var j:int = 0;j<depth;j++)
					headText=headText.concat("--");
				headText=headText.concat(department.name);
				resultList.addItem( {data:department.id, label:headText})
				var list:ArrayCollection = ArrayCollection(department.subordinates);			
				if(list.length>0){
					for (var i:int = 0; i < list.length; i++){
						var _department:DepartmentModel = list.getItemAt(i) as DepartmentModel;	
						buildSubDepartments(_department,resultList,depth+1);
					}
				}		
			} */
			private function searchAccountHandleAutoCompleteChange():void
			{
				var color:Object = search_account.selectedItem;
				
				if (color != null && color.hasOwnProperty( "name" ))
				{
					_name.text=color.name;
				} else{
					_name.text="";
				}               
			}
			
			
		]]>
	</fx:Script>
	
	<mx:VBox borderVisible="true" width="100%" height="100%" borderStyle="solid">
			<s:HGroup verticalAlign="middle" horizontalAlign="right" width="100%">
				<mx:HBox width="100%" height="25" paddingLeft="20"  horizontalGap="10" styleName="CustomHBoxStyle"   verticalAlign="middle">
					<mx:Label text="|"/>
					<mx:LinkButton  label="详细" icon="@Embed(source='../WebContent/resources/common/tools/button_detail_icon.png')"  click="detail(event);"/>
					<mx:Label text="|"/>
					<mx:LinkButton  label="导入" icon="@Embed(source='../WebContent/resources/common/tools/button_down_icon.png')" click="importExcel(event);"/>
					<mx:Label text="|"/>
					<mx:LinkButton  label="导出" icon="@Embed(source='../WebContent/resources/common/tools/button_down_icon.png')" click="exportExcel(event);"/>
					<mx:Label text="|"/>
					<mx:ProgressBar id="uploadbar" labelPlacement="left" color="#F20D7A" minimum="0" maximum="100" label="当前进度: 0%" direction="right" mode="manual" width="200" visible="false"/> 
					<mx:Label id="lblProgress" text="上传" visible="false"/>
				</mx:HBox>
			</s:HGroup>

				<mx:HBox width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off"   horizontalGap="10"    verticalAlign="middle" horizontalAlign="left" borderVisible="true" paddingTop="10" paddingBottom="0"   paddingLeft="10" paddingRight="10">
					<component:Fieldset title="条件查询"  width="100%">
						<mx:HBox width="100%" height="100%"  horizontalAlign="left" verticalAlign="middle">
								<mx:Label  text="姓名" />
								<hc:AutoComplete id="search_account"  labelField="name"  width="150"  matchType="anyPart" prompt="选择"  change="{ searchAccountHandleAutoCompleteChange() }" dropDownItemRenderer="{ searchAccountDropDownItemRenderer }" selectedItemStyleName="none">
									
								</hc:AutoComplete>
								<mx:Label id="_name" visible="false"/>
							
								<s:Label  text="部门" />
								<mx:ComboBox  width="200" id="department" labelField="label" editable="false"/>
							
								<mx:Label  text="状态" />
								<mx:ComboBox  width="150" id="status" dataProvider="{statusArr}" selectedIndex="0" labelField="label" editable="false"/>
							
								<s:Label  text="入校时间" />
								<mx:DateField dayNames='["日", "一", "二", "三", "四", "五", "六"]'  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]' yearNavigationEnabled="true" formatString="YYYY-MM-DD" width="150" id="attendDate" />
							
								<mx:Button  label="搜索"  width="80"   click="search()"/>
						</mx:HBox>
					</component:Fieldset>
				</mx:HBox>
					
				<mx:VBox width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingBottom="10">
					
					<mx:DataGrid id="table" rowCount="10" width="100%" height="100%"    verticalAlign="middle" >
						<mx:columns>		
							<mx:DataGridColumn textAlign="center" headerText="姓名" dataField="name" width="80"></mx:DataGridColumn>
							<mx:DataGridColumn textAlign="center" headerText="性别" dataField="sex" width="40" labelFunction="formatSex"></mx:DataGridColumn>
							<mx:DataGridColumn textAlign="center" headerText="出生年月" dataField="birthday" width="100" labelFunction="formatDate"></mx:DataGridColumn>
							<mx:DataGridColumn textAlign="center" headerText="手机/短号" width="150">
								<mx:itemRenderer>
									<fx:Component>
										<mx:Label htmlText="{data.teacherMobilePhone + '/' + data.teacherNo}"/>									
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn textAlign="center" headerText="主部门" dataField="teacherDepartmentName" width="100">
								<mx:itemRenderer>
									<fx:Component>
										<mx:Label htmlText="{data.teacherDepartment==null?'未指定':parentApplication.getDepartmentNameById(data.teacherDepartment)}"/>									
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn textAlign="center" headerText="主职务" dataField="teacherPosition" width="100">
								<mx:itemRenderer>
									<fx:Component>
										<mx:Label htmlText="{data.teacherPosition==null?'未指定':parentApplication.getRoleNameById(data.teacherPosition)}"/>									
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>

							<mx:DataGridColumn textAlign="center" headerText="办公电话" dataField="teacherOfficePhone" width="100"></mx:DataGridColumn>
							<mx:DataGridColumn textAlign="center" headerText="状态"  width="60">
								<mx:itemRenderer>
									<fx:Component>
										<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
											<mx:Label  text="{getStatus(data)}" >
												<fx:Script>
													<![CDATA[
														
														
														private function getStatus(data:Object):String{
															if(data!=null){
																if(data.teacherStatus==0){
																	return "正式";
																}else if(data.teacherStatus==1){
																	return "试用";
																}else if(data.teacherStatus==2){
																	return "离职";
																}else if(data.teacherStatus==3){
																	return "退休";
																}
															}
															return null;
														}
													]]>
												</fx:Script>
											</mx:Label>
										</mx:HBox>
										
									</fx:Component>
								</mx:itemRenderer>
							
							</mx:DataGridColumn>

							<mx:DataGridColumn textAlign="center" headerText="入校时间" dataField="teacherAttendDate" width="100" labelFunction="formatDate"></mx:DataGridColumn>
							<mx:DataGridColumn textAlign="center" headerText="操作"  width="320">
								<mx:itemRenderer>
									<fx:Component>
										<mx:HBox width="100%" horizontalGap="0" horizontalScrollPolicy="off" horizontalAlign="center">
											<mx:LinkButton  label="[离职]" click="{this.outerDocument.changestatus(data.id, 2);}" enabled="{parentApplication.currentUser.hasDam('staff_input_main@defaultVisit@@noFilter@')}"></mx:LinkButton>										
											<mx:LinkButton  label="[退休]" click="{this.outerDocument.changestatus(data.id, 3);}" enabled="{parentApplication.currentUser.hasDam('staff_input_main@defaultVisit@@noFilter@')}">											
											</mx:LinkButton>	
											<mx:LinkButton  label="[转正]" click="{this.outerDocument.changestatus(data.id, 0);}" enabled="{parentApplication.currentUser.hasDam('staff_input_main@defaultVisit@@noFilter@')}">											
											</mx:LinkButton>
											<mx:LinkButton  label="[编辑]" click="{this.outerDocument.editItem(data.id);}" enabled="{parentApplication.currentUser.hasDam('staff_input_main@defaultVisit@@noFilter@')}">											
											</mx:LinkButton>
											<mx:LinkButton  label="[删除]" click="{this.outerDocument.deleteItem(data.id);}" enabled="{parentApplication.currentUser.hasDam('staff_input_main@defaultVisit@@noFilter@')}">											
											</mx:LinkButton>	
										</mx:HBox>
										
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							
							<mx:DataGridColumn textAlign="center" headerText="详细"  width="60">
								<mx:itemRenderer>
									<fx:Component>
										<mx:LinkButton  label="[详细]" click="{this.outerDocument.editDetail(data.id);}" >											
										</mx:LinkButton>								
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							
						</mx:columns>
					</mx:DataGrid>
					<component:SPageController id="pc" useCache="{false}" TargetUI="{table}" callBackFunc="{searchPage}"  PerPage="13" ClientPages="3"  width="100%"/>
					
				</mx:VBox>
			
		</mx:VBox>
		
		
</mx:Module>
