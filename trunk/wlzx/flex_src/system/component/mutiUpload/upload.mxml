<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" 
		 creationComplete="moduleInit();"  verticalAlign="middle" horizontalAlign="center" xmlns:ui="ui.*">
	
	<mx:RemoteObject id="attachmentServiceRO" destination="attachmentServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
		<mx:method name="remove"  concurrency="last"  result="remove_resultHandler(event);" />
	</mx:RemoteObject>
	
	<mx:Script>
		
		<![CDATA[  
			import com.adobe.serialization.json.JSON;
			
			import flash.events.MouseEvent;
			import flash.events.ProgressEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import basic.utils.LockWinTool;
			
			import basic.utils.DateTimeTool;
			private var myFileRef:FileReferenceList = new FileReferenceList();
			private var urlRequest:URLRequest = new URLRequest();
			[Binary]
			public var showControl:Boolean=false;//控制添加与删除按钮是否可见
			<!-- ***模块初始化*** -->
			public function moduleInit():void {
				var url:String =parentApplication.homeUrl+'servlet/attachmentUpload.action';
				urlRequest.url=url;
				myFileRef.addEventListener(Event.SELECT,chooseHandler);//监听上传对话框确定按钮

				
				
			}
			private function systemFaultHandler(event:FaultEvent):void {
				LockWinTool.unLockCurrentWin();
				Alert.show(event.fault.faultString, 'Error');
			}
			private function chooseHandler(event:Event):void {//上传框确认按钮按下
				for(var i:int=0;i<myFileRef.fileList.length;i++){
					var f:FileReference = FileReference(myFileRef.fileList[i]); 
					if(f.size> 20 * 1024 * 1024){
						Alert.show("单个文件最大不允许超过20M");
						continue;
					}
					LockWinTool.lockCurrentWin(this,"上传中");
					f.upload(urlRequest);
					f.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, uploadCompleteHandler);
				}
			}
			
			private function uploadCompleteHandler(event:DataEvent):void {
				LockWinTool.unLockCurrentWin();
				var list:ArrayCollection= new ArrayCollection();
				if(dataGrid.dataProvider!=null){
					var temp:ArrayCollection=dataGrid.dataProvider as ArrayCollection ;
					for(var i:int=0;i<temp.length;i++){
						list.addItem(temp.getItemAt(i));
					}
				}
				var obj:Object = JSON.decode(event.data);
				list.addItem(obj);
				dataGrid.dataProvider=list;
				dataGrid.validateNow();
			}
			private function select(event:MouseEvent):void{//浏览按钮按下
				
				try
				{
					myFileRef.browse();
				}
				catch (error:Error) 
				{
					Alert.show("文件选择出现错误，请选择正确的文件");
				}
			}
			
			public function deleteItem(id:String):void{
				Alert.show("你确定要删除该项吗?","确认删除",Alert.NO|Alert.YES,null,function(event:CloseEvent):void{
					if(event.detail == Alert.YES)
						attachmentServiceRO.remove(id);
				},null,Alert.NO);
			}
			private function remove_resultHandler(event:ResultEvent):void {
				var list:ArrayCollection= new ArrayCollection();
				if(dataGrid.dataProvider!=null){
					var temp:ArrayCollection=dataGrid.dataProvider as ArrayCollection ;
					for(var i:int=0;i<temp.length;i++){
						if(temp.getItemAt(i).id!=event.result)
						list.addItem(temp.getItemAt(i));
					}
				}
				dataGrid.dataProvider=list;
				dataGrid.validateNow();
			}	
			public function downLoad(data:Object):void{
				
			}
			
			<!-- ***初始化附件区域已有文件*** -->
			public function loadData(list:ArrayCollection,show:Boolean=false):void{
				dataGrid.dataProvider=list;
				showControl=show;
				addControl.visible=show;
				this.validateNow();
			}
			<!-- ***返回附件IDs*** -->
			public function getAttachmentsIds():String{
			
				var results:String="";
				if(dataGrid.dataProvider!=null){
					var temp:ArrayCollection=dataGrid.dataProvider as ArrayCollection ;
					for(var i:int=0;i<temp.length;i++){
						results+=temp.getItemAt(i).id+";";
					}
				}
				return results;
			}
			
			private var downloadURL:URLRequest;
			private var file:FileReference; //这是要主要的地方
			
			public function download(path:String):void {
				downloadURL = new URLRequest(parentApplication.homeUrl+"uploads/oa/attachment/" + path );
//				Alert.show(downloadURL.url);
				file = new FileReference();
				configureListeners(file);
				file.download(downloadURL);
				
			}
			
			private function configureListeners(dispatcher:IEventDispatcher):void {
				dispatcher.addEventListener(Event.CANCEL, cancelHandler);
				dispatcher.addEventListener(Event.COMPLETE, completeHandler);
				dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
				dispatcher.addEventListener(Event.OPEN, openHandler);
				dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
				dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
				dispatcher.addEventListener(Event.SELECT, selectHandler);
			}
			
			private function cancelHandler(event:Event):void {
				trace("cancelHandler: " + event);
			}
			
			private function completeHandler(event:Event):void {
				trace("completeHandler: " + event);
				Alert.show("下载成功");
			}
			
			private function ioErrorHandler(event:IOErrorEvent):void {
				trace("ioErrorHandler: " + event);
				Alert.show("网络连接有错");
			}
			
			private function openHandler(event:Event):void {
				trace("openHandler: " + event);
			}
			
			private function progressHandler(event:ProgressEvent):void {
				var file:FileReference = FileReference(event.target);
				trace("progressHandler name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
			}
			
			private function securityErrorHandler(event:SecurityErrorEvent):void {
				trace("securityErrorHandler: " + event);
			}
			
			private function selectHandler(event:Event):void {
				var file:FileReference = FileReference(event.target);
				trace("selectHandler: name=" + file.name + " URL=" + downloadURL.url);
			}

			
		]]> 
		
	</mx:Script>
<!--	<ui:Fieldset title="附件区域" width="100%" height="100%" >-->
		<mx:HBox width="100%" horizontalAlign="left">
		<!--	<mx:LinkButton  label="附件区域" />-->
			<mx:LinkButton  label="上传附件" click="select(event)"  id="addControl" icon="@Embed(source='../WebContent/resources/common/tools/button_attachment_icon.png')"  />
		</mx:HBox>
		<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
			<mx:DataGrid width="100%" height="100%" id="dataGrid" styleName="DataGridBox">
				<mx:columns>
					<mx:DataGridColumn headerText="文件名称" dataField="name" fontSize="12"/>
					<mx:DataGridColumn headerText="文件大小" dataField="size" fontSize="12"/>
					<mx:DataGridColumn headerText="文件类型" dataField="type" fontSize="12"/>
					<mx:DataGridColumn headerText="上传时间" dataField="uploadDate" fontSize="12">
						<mx:itemRenderer>
							<mx:Component>
								<mx:HBox  horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off" verticalScrollPolicy="off">
									<mx:Label text="{getDateLabel(data.uploadDate as Date)}" width="100%"/>
									<mx:Script>
										<![CDATA[  
											import basic.utils.DateTimeTool;
											private function getDateLabel(date:Date):String{
												return DateTimeTool.formatDate(date);
											}
											
										]]> 
									</mx:Script> 
								</mx:HBox>
							</mx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn  headerText="操作" fontSize="12">
						<mx:itemRenderer>
							<mx:Component>
								<mx:HBox  horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off" verticalScrollPolicy="off">
									<mx:LinkButton label="下载" click="this.outerDocument.download(data.path)" >
										
									</mx:LinkButton>
									<mx:LinkButton label="删除" click="this.outerDocument.deleteItem(data.id)"  visible="{this.outerDocument.showControl}">
									
									</mx:LinkButton>
								</mx:HBox>
							</mx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
				</mx:columns>
			</mx:DataGrid>
		</mx:HBox>
<!--	</ui:Fieldset>-->
</mx:VBox>
