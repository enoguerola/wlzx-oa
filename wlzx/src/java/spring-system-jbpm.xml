<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:flex="http://www.springframework.org/schema/flex"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/flex
       http://www.springframework.org/schema/flex/spring-flex-1.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<flex:message-broker />

	<bean id="springHelper" class="org.jbpm.pvm.internal.processengine.SpringHelper">
		<property name="jbpmCfg" value="spring-jbpm4.cfg.xml" />
	</bean>
     <bean id="processEngine" factory-bean="springHelper" factory-method="createProcessEngine" />
    <bean id = "jbpmSessionFactory" class = "org.springframework.orm.hibernate3.LocalSessionFactoryBean">

       <property name = "dataSource" ref = "jbpmDataSource" />

       <property name = "hibernateProperties" >

           <props >

              <prop key = "hibernate.dialect" > org.hibernate.dialect.MySQLInnoDBDialect </prop>

              <prop key = "hibernate.show_sql" > true </prop>

              <prop key = "hibernate.connection.pool_size" > 1 </prop>

              <prop key = "hibernate.format_sql" > true </prop>

              <prop key = "hibernate.hbm2ddl.auto" > update </prop>

            </props>

       </property>

 

       <property name = "mappingLocations">

           <list>

            	 <value>classpath:jbpm.execution.hbm.xml</value>
				<value>classpath:jbpm.history.hbm.xml</value>
				<value>classpath:jbpm.identity.hbm.xml</value>
				<value>classpath:jbpm.repository.hbm.xml</value>
				<value>classpath:jbpm.task.hbm.xml</value>

           </list>

       </property>

    </bean>

 

	<bean id="jbpmDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/wlzx_jbpm?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		 <!-- 连接池启动时的初始值  --> 
        <property name="initialSize" value="1"/> 
        <!-- 连接池的最大值 --> 
        <property name="maxActive" value="500"/> 
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 --> 
        <property name="maxIdle" value="3"/> 
        <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 --> 
        <property name="minIdle" value="2"/> 
        <!--  removeAbandoned true,false,是否清理removeAbandonedTimeout秒没有使用的活动连接,清理后并没有放回连接池 --> 
		 <property name="removeAbandoned" value="true"/>
		<!--  removeAbandonedTimeout 活动连接的最大空闲时间 --> 
		 <property name="removeAbandonedTimeout" value="3600000"/>
		 <!-- logAbandoned true,false,连接池收回空闲的活动连接时是否打印消息  -->
        <property name="logAbandoned" value="true"/> 
        <!-- 每timeBetweenEvictionRunsMillis毫秒秒检查一次连接池中空闲的连接,把空闲时间超过minEvictableIdleTimeMillis毫秒的连接断开,直到连接池中的连接数到minIdle为止； -->
         <property name="timeBetweenEvictionRunsMillis" value="1000"/> 
         <property name="minEvictableIdleTimeMillis" value="60000"/> 
        
	</bean>

	
	<bean id="jbpmTxManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="jbpmSessionFactory" />
		<property name="nestedTransactionAllowed" value="true" />
	</bean>
	<tx:annotation-driven transaction-manager="jbpmTxManager" />
	
</beans>