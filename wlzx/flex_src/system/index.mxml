<?xml version="1.0" encoding="utf-8"?>

<!--当 Application 完成构建后立即触发 init() 方法，以实现对 Server 端 Java 的调用-->
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"   creationComplete="init();" width="100%" pageTitle="系统主页" height="100%"  backgroundColor="#FFFFFF" xmlns:flexlib="http://code.google.com/p/flexlib/"  xmlns:viewers="flexlib.scheduling.scheduleClasses.viewers.*" xmlns:sliderClasses="flexlib.controls.sliderClasses.*" xmlns:baseClasses="flexlib.baseClasses.*" implements="system.implement.BaseImpl">

	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<!--定义 RemoteObject 组件-->
		<mx:RemoteObject id="systemServiceRO" destination="systemServiceDest" showBusyCursor="true" result="systemResultHandler(event);" fault="systemFaultHandler(event);"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flexlib.controls.SuperTabBar;
			import flexlib.controls.tabBarClasses.SuperTab;
			import flexlib.events.TabReorderEvent;
			
			import mx.collections.ArrayCollection;
			import mx.containers.*;
			import mx.controls.*;
			import mx.events.*;
			import mx.rpc.events.*;
			
			import spark.components.*;
			
			import system.entity.*;
			import mx.managers.IPopUpManager; 
			import mx.modules.*;
			import system.event.BaseEvent;
//			private var systemList:Object;
			
//			private var systemXMLList:XMLList = new XMLList();
			private function init():void {
				systemServiceRO.getSystemBySymbol("root");
				initHomeTab();
			}
			
			private function systemResultHandler(event:ResultEvent):void {
				var rootSystem:SystemModel =SystemModel(event.result);
				var systemList:ArrayCollection = ArrayCollection(rootSystem.children);
				systems.historyManagementEnabled = true;
				systems.addEventListener(mx.events.IndexChangedEvent.CHANGE,changeHandler);
				makeAccordion(systemList);
			}
			
			private function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
			private function makeAccordion(systemList:ArrayCollection):void{
				var nc:NavigatorContent =null;
				var tree:Tree =null;
				for (var i:int = 0; i < systemList.length; i++){	
					var _system:SystemModel = SystemModel(systemList.getItemAt(i));						
					nc = new NavigatorContent();
					nc.percentHeight=100;
					nc.percentWidth=100;
					nc.setStyle("font-size","20");
					nc.label=_system.name;_system
					nc.name=_system.detail;
					nc.id=_system.indexPath;
					systems.addChild(nc as DisplayObject);
				}

				systems.selectedIndex=systems.getChildren().length-1;
				
			}
			public function changeHandler(event:mx.events.IndexChangedEvent):void{ 
				var accordion:NavigatorContent=systems.selectedChild as NavigatorContent;
				addTab(accordion.label,nav,accordion.id,accordion.name);
			} 
			
			private var homeTabTitle:String="校园简介";
			private function showHideLeftbody_handler(event:MouseEvent):void{
				if(systems.visible){
					systems.width=0;
				}else{
					systems.width=220;
				}
				systems.visible=!systems.visible;
			}
			
			
			[Embed(source="../WebContent/resources/common/icon/Home.png")]
			private var home_icon:Class;
			private function initHomeTab():void {	
				addTab(homeTabTitle, nav, "system/index.swf",null,home_icon);
				
			}
			private function openSystemByUrl(event:Event):void{
				var button:mx.controls.Button=mx.controls.Button(event.currentTarget);
//				this.parentApplication.loadModule(button.name);
				dispatchEvent(new BaseEvent(BaseEvent.Enter, button.name));
			}
			private function addTab(title:String, navigator:SuperTabNavigator,indexPath:String, detail:String=null,  icon:Class=null):void {
				for(var i:int=0;i<navigator.getChildren().length;i++){
					// 将对象转换为一个泛型
					var obj:* = navigator.getChildAt(i);
					if(obj.label == title){
						navigator.selectedIndex = i;
						return;
					}
				}
				var curNum:Number = nav.numChildren + 1;			
				var child:Canvas = new Canvas();								
				child.percentHeight=100;
				child.percentWidth=100;
				child.label = title;
				child.name = title;				
				child.icon = icon;	
				var systemDetail:spark.components.TextArea=new  spark.components.TextArea();
				systemDetail.percentHeight=100;
				systemDetail.percentWidth=100;
				systemDetail.text=detail;
				systemDetail.setStyle("borderVisible", false);
				systemDetail.editable=false;
				child.addChild(systemDetail as DisplayObject);
				var button:mx.controls.Button=new mx.controls.Button();
				button.label=indexPath;
				button.name=indexPath;
				button.addEventListener(MouseEvent.CLICK,openSystemByUrl);
				child.addChild(button as DisplayObject);
				
				navigator.addChild(child as DisplayObject);
				navigator.selectedIndex = navigator.getChildIndex(child);
				navigator.setClosePolicyForTab(0, SuperTab.CLOSE_NEVER);
			}
			
			
			
			private function homeTab():void{
				// TODO Auto-generated method stub
				initHomeTab();
				nav.selectedIndex = 0;
			}
			private function exitSystem():void{
				// TODO Auto-generated method stub
				Alert.show("你确定要退出系统吗?","确认",Alert.YES|Alert.NO,null,this.parentApplication.logoutRequest.send());
			}
			
		]]>
	</fx:Script>
	
	
	
	
	
	

	<s:BorderContainer width="100%" height="80" backgroundImage="@Embed(source='../WebContent/resources/common/layout/head_bg.jpg')">
		<s:layout>
			<s:HorizontalLayout verticalAlign="middle" gap="0"/>
		</s:layout>
			<mx:VBox width="90%"></mx:VBox> 
			<s:Label text="当前用户：admin&#xd;用户角色：管理员" fontSize="14"  y="20"/>		
		
			
	</s:BorderContainer>
	<s:BorderContainer width="100%" height="100%" >
		<s:layout>
			<s:HorizontalLayout verticalAlign="middle" gap="0"/>
		</s:layout>
		<mx:Accordion width="220"  height="100%"  selectedIndex="-1" id="systems" dropShadowVisible="false" backgroundAlpha="0.0" headerHeight="35" fontSize="15" textAlign="center">
			
		</mx:Accordion>
		
		<flexlib:DockableToolBar x="215" y="65" height="100%" paddingTop="200" dropShadowVisible="false" borderVisible="false"  doubleClickEnabled="true" doubleClick="showHideLeftbody_handler(event)" toolTip="隐藏/展开左区域菜单"></flexlib:DockableToolBar>
		<flexlib:SuperTabNavigator id="nav" closePolicy="SuperTab.CLOSE_ROLLOVER|SuperTab.CLOSE_ALWAYS|SuperTab.CLOSE_SELECTED|SuperTab.CLOSE_NEVER" width="100%" height="100%" tabWidth="120" tabHeight="30" creationPolicy="all" horizontalGap="5"  popUpButtonPolicy="auto" borderVisible="true" allowTabSqueezing="true"  dragEnabled="false">
			
			
		</flexlib:SuperTabNavigator>
	</s:BorderContainer>
	
	<s:BorderContainer width="100%" height="30" backgroundAlpha="1.0" cornerRadius="1" borderVisible="true"  borderWeight="1">
		<s:layout>
			<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"/>
		</s:layout>
		<s:Label text="浙江省温岭中学数字化系统  CopyRight：2011-2012&#xd;"/>
	</s:BorderContainer>
	
</mx:Module>
