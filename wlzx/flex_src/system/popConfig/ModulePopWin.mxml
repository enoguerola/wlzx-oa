<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"  xmlns:valueObjects="system.entity.*" xmlns:flexlib="http://code.google.com/p/flexlib/"   creationComplete="init();" width="800" height="500">
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:StringValidator id="name_stringValidator" source="{moduleName}" property="text"  requiredFieldError="模块名称不能为空"/>
		<mx:StringValidator id="createDate_dateValidator"  source="{creationDate}" property="text" requiredFieldError="模块创建日期不能为空"/>
		<mx:NumberValidator id="sequence_numberValidator" source="{sequence}" required="false" property="text" integerError="请输入整数值，同级模块默认排序升序" domain="int"/>
		<valueObjects:ModuleModel id="module"/>
		<mx:RemoteObject id="systemServiceRO" destination="systemServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="moduleAdd"  concurrency="last"  result="moduleAddResult_resultHandler(event);" />
			<mx:method name="getModuleBySymbol"  concurrency="last"  result="getModuleBySymbol_resultHandler(event);" />
			<mx:method name="moduleUpdate"  concurrency="last"  result="moduleUpdate_resultHandler(event);" />
		</mx:RemoteObject>
	</fx:Declarations>
	
	<fx:Script> 
		
		<![CDATA[  
		
			import mx.controls.Alert;
			import mx.events.ValidationResultEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.*;
			import mx.validators.Validator;
			import mx.validators.ZipCodeValidatorDomainType;
			
			import system.component.*;
			private var validatorArr:Array;
			
			private function init():void
			{
				
				validatorArr = new Array();
				validatorArr.push(name_stringValidator);
				validatorArr.push(createDate_dateValidator);
				validatorArr.push(sequence_numberValidator);
				callLater(initModuleWin);
				
			} 
			private function initModuleWin():void{
				if(this.toolTip=='Update'){		
					this.moduleWin.title="模块编辑";
					var moduleSymbol:String=this.name;//弹出窗口时设定的中转参数
					systemServiceRO.getModuleBySymbol(moduleSymbol);
				}else if(this.toolTip=='Add'){
					module=new ModuleModel();
					this.moduleWin.title="模块新增";					
					
				}
			}
			private function validateForm(evt:MouseEvent):void {
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);;
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					module.name=moduleName.text;
					module.creationDate=DateFormatter.parseDateString(creationDate.text);
					module.detail=detail.text;
					module.symbol=symbol.text;
					module.sequence=parseInt(sequence.text);
					module.url=moduleUrl.text;
					if(this.toolTip=='Update'){
						systemServiceRO.moduleUpdate(module);
					}else if(this.toolTip=='Add'){
						var parentType:String=this.id;//弹出窗口时设定的中转参数
						var parentSymbol:String=this.name;//弹出窗口时设定的中转参数
						systemServiceRO.moduleAdd(module,parentType,parentSymbol);
						
					}
					
				} else {
					var err:ValidationResultEvent;
					var errorMessageArray:Array = [];
					for each (err in validatorErrorArray) {
						var errField:String = FormItem(err.currentTarget.source.parent).label
						errorMessageArray.push(errField + ": " + err.message);
					}
					Alert.show(errorMessageArray.join("\n\n"), "请按照以下错误提示信息重新填写", Alert.OK);
				}
			}
			protected function moduleAddResult_resultHandler(event:ResultEvent):void
			{
				var module:ModuleModel=event.result as ModuleModel;
				if(module!=null){
					var moduleData:XML=new XML("<node type='module' label='"+module.name+"[模块]'  symbol='"+module.symbol+"' id='"+module.id+"'></node>");
					this.parentApplication.selectedNode.appendChild(moduleData);
					PopUpManager.removePopUp(this);
				}else{
					Alert.show("添加失败");
				}
			}
			protected function getModuleBySymbol_resultHandler(event:ResultEvent):void
			{
				module=event.result as ModuleModel;
				moduleName.text=module.name;
				creationDate.text=CommonUtils.formatDate(module.creationDate,"YYYY-MM-DD");
				detail.text=module.detail;
				symbol.text=module.symbol;
				sequence.text=module.sequence.toString();
				moduleUrl.text=module.url;
			}
			protected function moduleUpdate_resultHandler(event:ResultEvent):void
			{
				var module:ModuleModel=event.result as ModuleModel;
				if(module!=null){
					this.parentApplication.selectedNode.@label=module.name+"[模块]";
					this.parentApplication.selectedNode.@symbol=module.symbol;
					this.parentApplication.selectedNode.@id=module.id;
					PopUpManager.removePopUp(this);
				}else{
					Alert.show("更新失败");
				}
			}
			
			protected function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
			private function resetForm(evt:MouseEvent):void{
				if(this.toolTip=='Update'){		
					moduleName.text=module.name;
					creationDate.text=CommonUtils.formatDate(module.creationDate,"YYYY-MM-DD");
					detail.text=module.detail;
					symbol.text=module.symbol;
					sequence.text=module.sequence.toString();
					moduleUrl.text=module.url;
				}else if(this.toolTip=='Add'){
					moduleName.text="";
					creationDate.text="";
					detail.text="";
					symbol.text="";
					sequence.text="";
					moduleUrl.text="";			
					
				}
			} 	
		]]> 
		
	</fx:Script> 
	<s:TitleWindow  id="moduleWin" width="100%" height="100%"  close="PopUpManager.removePopUp(this);this.parentApplication.modulePopWin=null;">
		<mx:Form width="100%" height="100%" id="dform">
			<mx:FormHeading label="模块信息" fontSize="15" width="100%" textAlign="center"/>
			
			<mx:FormItem label="模块名称">
				<mx:TextInput id="moduleName" width="200"/>
			</mx:FormItem>
			
			<mx:FormItem label="创建日期 ">
				<mx:DateField  id="creationDate" width="200" formatString="YYYY-MM-DD" />
			</mx:FormItem>
			
			<mx:FormItem label="唯一标识">
				<mx:TextInput id="symbol" width="200"/>
			</mx:FormItem>	
			<mx:FormItem label="同级排序顺序">
				<mx:TextInput id="sequence" width="200"/>
			</mx:FormItem>
			
			<mx:FormItem label="模块地址"  >
				<mx:TextInput id="moduleUrl" width="200"/>
			</mx:FormItem>
			<mx:FormItem label="模块描述">
				<s:TextArea id="detail" width="400"/>
			</mx:FormItem>
			<mx:FormItem width="100%">
				<mx:HBox verticalAlign="middle" horizontalAlign="right" width="100%">
					<mx:Button label="保存" click="validateForm(event)" />
					<mx:Button label="重置" click="resetForm(event);" />
				</mx:HBox>
			</mx:FormItem> 
		</mx:Form>
		
	</s:TitleWindow>
	
</s:VGroup>
