<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
		  xmlns:hc="com.hillelcoren.components.*"
		  xmlns:render="system.component.render.*"
		   xmlns:valueObjects="system.entity.*" creationComplete="init();" xmlns:component="system.component.*" xmlns:flexlib="http://code.google.com/p/flexlib/"  width="600" height="500">
	
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:RemoteObject id="systemServiceRO" destination="systemServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			
		<!--	<mx:method name="getAllRoles"  concurrency="last"  result="getAllRolesResult_resultHandler(event);" />-->
			<!-- <mx:method name="getDepartmentBySymbol"  concurrency="last"  result="getDepartmentBySymbolResult(event);" /> -->
	<!--		<mx:method name="getDepartmentBySymbol"  concurrency="last"  result="getDepartmentBySymbolResult(event);" />-->
			

		</mx:RemoteObject>
		<mx:RemoteObject id="teacherAccountBridgeServiceRO" destination="teacherAccountBridgeServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
<!--			<mx:method name="getAllUsers"  concurrency="last"  result="getAllUsers_resultHandler(event);" />
-->			<mx:method name="getUnAuthUsers"  concurrency="last"  result="getUnAuthUsers_resultHandler(event);" />
<!--			<mx:method name="getDepartmentUsers"  concurrency="last"  result="getDepartmentUsers_resultHandler(event);" />
			<mx:method name="getRoleUsers"  concurrency="last"  result="getRoleUsers_resultHandler(event);" />-->
			<mx:method name="getUsersByCondition"  concurrency="last"  result="getUsersByCondition_resultHandler(event);" />
		</mx:RemoteObject>
		
	
	<mx:Script> 
		<![CDATA[  
			import mx.collections.ArrayCollection;
			import mx.controls.*;
			import mx.events.*;
			import mx.managers.PopUpManager;
			import mx.rpc.events.*;
			
			import system.entity.DepartmentModel;
			import system.entity.RoleModel;
			import system.entity.UserModel;
			import system.index;
			private var winParent:Object;
			private var alreadyChoose:Array = new Array();
			public var accounts:ArrayCollection = new ArrayCollection();

			private function init():void {
				//accounts.addItem("");
				search_account.dataProvider=this.parentApplication.allTeacherAcccounts;
				departments.dataProvider=this.parentApplication.allDepartment;
				departments.selectedIndex=0;
				roles.dataProvider=parentApplication.allRole;
				roles.selectedIndex=0;
//				Alert.show(parentApplication.allRole.length+"");
				teacherAccountBridgeServiceRO.getUsersByCondition(null,null,null);
				callLater(initWin);
				
			}
			private function initWin():void{
				winParent=this.owner as Object;
				alreadyChoose = new Array();
				for(var i:int=0;i<winParent.usersSelected.length;i++){
					alreadyChoose.push({data:winParent.usersSelected[i].data,id:winParent.usersSelected[i].id});
				}
				
				alreadyChooseListTree.dataProvider=organzizeChooseUsers(alreadyChoose);
				alreadyChooseListTree.validateNow();
				//				Alert.show(winParent.usersSelected[0].data);
			}
			private function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
//			private function getAllUsers_resultHandler(event:ResultEvent):void{
//				var allList:ArrayCollection=event.result as ArrayCollection;				
//				allListTree.dataProvider=organzizeUsers(allList);
////				for(var i:int=0;i<allList.length;i++){
////					accounts.addItem(allList.getItemAt(i).name);
////				}
////				search_account.dataProvider=accounts;
//			}
			protected function getUsersByCondition_resultHandler(event:ResultEvent):void{
				var allList:ArrayCollection=event.result as ArrayCollection;
				var selectIndex:int=view.selectedIndex;
				if(selectIndex==0){
					allListTree.dataProvider=organzizeUsers(allList);
					allListTree.validateNow();
				}else if(selectIndex==1){
					departmentListTree.dataProvider=organzizeUsers(allList);
					departmentListTree.validateNow();
				}else if(selectIndex==2){
					roleListTree.dataProvider=organzizeUsers(allList);
					roleListTree.validateNow();
				}
				
			}
			public function organzizeChooseUsers(chooseList:Array):XML{			
				if(chooseList.length>0){
					var resultXML:String="";
					resultXML=resultXML.concat("<node>");
					for (var i:int = 0; i < chooseList.length; i++){
						resultXML=resultXML.concat("<node label='"+chooseList[i].data+"' id='"+chooseList[i].id+"'/>");
					}
					resultXML=resultXML.concat("</node>");
					var resultXMLData:XML=new XML(resultXML);
					return resultXMLData;
				}	else return null;
				
			}
			public function organzizeUsers(allList:ArrayCollection):XML{
				
				if(allList.length>0){
					var resultXML:String="";
					resultXML=resultXML.concat("<node>");
					for (var i:int = 0; i < allList.length; i++){
						var _user:Object = allList.getItemAt(i);
						var exist:Boolean=false;
						for (var j:int = 0; j < alreadyChoose.length; j++){
							if(alreadyChoose[j].id==_user.right){
								exist=true;
								break;
							}
						}
						if(exist==true)continue;
						resultXML=resultXML.concat("<node label='"+parentApplication.getTeacherNameByAccountId(_user.right)+"' id='"+_user.right+"'/>");
					}
					resultXML=resultXML.concat("</node>");
					if(resultXML=="<node></node>")return null
					else{
						var resultXMLData:XML=new XML(resultXML);
						return resultXMLData;
					}
					
				}	else return null;
			
			}
			
//			
//			private function getDepartmentUsers_resultHandler(event:ResultEvent):void {
//				var allList:ArrayCollection=event.result as ArrayCollection;				
//				departmentListTree.dataProvider=organzizeUsers(allList);		
//			}
//			private function getRoleUsers_resultHandler(event:ResultEvent):void {
//				var allList:ArrayCollection=event.result as ArrayCollection;				
//				roleListTree.dataProvider=organzizeUsers(allList);
//			}
			private function getUnAuthUsers_resultHandler(event:ResultEvent):void {
				var allList:ArrayCollection=event.result as ArrayCollection;				
				unAuthListTree.dataProvider=organzizeUsers(allList);
			}
			
//			private function getDepartmentBySymbolResult(event:ResultEvent):void {
//				var department:Object=event.result;
//				var resultList:ArrayCollection = new ArrayCollection();
//				buildSubDepartments(department,resultList,0);
//				
//				this.departments.dataProvider=resultList;
//				this.departments.selectedIndex=0;
//				teacherAccountBridgeServiceRO.getUsersByCondition(null,departments.selectedItem.data,null);
//			}
//			private function buildSubDepartments(department:Object,resultList:ArrayCollection,depth:int):void{
//				var headText:String="";
//				for(var j:int = 0;j<depth;j++)
//					headText=headText.concat("----");
//				headText=headText.concat(department.name);
//				resultList.addItem( {dataField:department.id, headerText:headText})
//				var list:ArrayCollection = ArrayCollection(department.subordinates);			
//				if(list.length>0){
//					for (var i:int = 0; i < list.length; i++){
//						var _department:Object = list.getItemAt(i);	
//						buildSubDepartments(_department,resultList,depth+1);
//					}
//					//					CommonUtils.sortBySequence(resultList);
//				}		
//				
//			}
//			private function getAllRolesResult_resultHandler(event:ResultEvent):void {
//				var resultList:ArrayCollection = new ArrayCollection();
//				var allList:ArrayCollection=event.result as ArrayCollection;
//				if(allList.length>0){
//					for (var i:int = 0; i < allList.length; i++){
//						var _role:RoleModel = allList.getItemAt(i) as RoleModel;
//						var headText:String="";
//						for(var j:int = 0;j<_role.level;j++)
//							headText=headText.concat("--");
//						headText=headText.concat(_role.name);
//						resultList.addItem( {dataField:_role.id, headerText:headText})
//					}
//				}	
//				this.roles.dataProvider=resultList;	
//				this.roles.selectedIndex=0;
//				teacherAccountBridgeServiceRO.getUsersByCondition(null,null,roles.selectedItem.data);
////			systemServiceRO.getRoleUsers(roles.selectedItem.data);
//				//				switchRoleAuthorization();
//				
//			}
			/*
				protected function getDepartmentBySymbolResult(event:ResultEvent):void {
					var department:DepartmentModel=event.result as DepartmentModel;	
					//				Alert.show(department.name+"a");
					var resultXML:String="<node>";
					resultXML=resultXML.concat(buildSubDepartments(department));	
					resultXML=resultXML.concat("</node>");
					var resultXMLData:XML=new XML(resultXML);
					//				callLater(function():void{
					departmentListTree.dataProvider=resultXMLData;
					departmentListTree.validateNow();
					departmentListTree.expandChildrenOf(resultXMLData[0],true);
					//				});
					
					
					
					
				}
				private function buildSubDepartments(department:DepartmentModel):String{
					var resultXML:String="<node label='"+department.name+"' id='"+department.id+"'>";
					var list:ArrayCollection = ArrayCollection(department.subordinates);	
					
					if(list.length>0){
						for (var i:int = 0; i < list.length; i++){
							var _department:DepartmentModel = list.getItemAt(i) as DepartmentModel;	
							resultXML=resultXML.concat(buildSubDepartments(_department));
						}
					}
					resultXML=resultXML.concat("</node>");	
					return resultXML;
				}
			*/
			
			private function switchViews(event:Event):void{
				var selectIndex:int=view.selectedIndex;
//				Alert.show(selectIndex+"");
				if(selectIndex==0){
					teacherAccountBridgeServiceRO.getUsersByCondition(null,null,null);
				}else if(selectIndex==1){
//					departments.dataProvider=parentApplication.allDepartment;
//					departments.selectedIndex=0;
					callLater(function():void{
						[binary]
						var item:Object=departments.selectedItem;
						teacherAccountBridgeServiceRO.getUsersByCondition(null,item.data,null);
					
					});
					//systemServiceRO.getDepartmentBySymbol("root");
				}else if(selectIndex==2){
//					roles.dataProvider=parentApplication.allRole;	
//					roles.selectedIndex=0;
					callLater(function():void{
						[binary]
						var item:Object=roles.selectedItem;
						teacherAccountBridgeServiceRO.getUsersByCondition(null,null,item.data);
						
					});
					//systemServiceRO.getAllRoles();
				}else if(selectIndex==3){
					teacherAccountBridgeServiceRO.getUnAuthUsers();
				}
			
			}
			
			private function departmentSelectionChangedHandler(event:Event):void{
				var item:Object=departments.selectedItem;
				teacherAccountBridgeServiceRO.getUsersByCondition(null,item.data,null);
				
			}
			private function roleSelectionChangedHandler(event:Event):void{
				var item:Object=roles.selectedItem;
				teacherAccountBridgeServiceRO.getUsersByCondition(null,null,item.data);
				systemServiceRO.getRoleUsers(item.data);
				
			}
			private function addOneUser():void{
				var selectIndex:int=view.selectedIndex;
				if(selectIndex==0){
					if(allListTree.selectedItem){
//						Alert.show(allListTree.selectedItem.label);
						alreadyChoose.push({data:allListTree.selectedItem.@label,id:allListTree.selectedItem.@id});
						alreadyChooseListTree.dataProvider=organzizeChooseUsers(alreadyChoose);
						delete allListTree.selectedItem.parent().node[allListTree.selectedIndex];
					}
				}else if(selectIndex==1){
					if(departmentListTree.selectedItem){
//						Alert.show(departmentListTree.selectedItem.@label);
						alreadyChoose.push({data:departmentListTree.selectedItem.@label,id:departmentListTree.selectedItem.@id});
						alreadyChooseListTree.dataProvider=organzizeChooseUsers(alreadyChoose);
						delete departmentListTree.selectedItem.parent().node[departmentListTree.selectedIndex];

					}
				}else if(selectIndex==2){
					if(roleListTree.selectedItem){
//						Alert.show(roleListTree.selectedItem.@label);
						alreadyChoose.push({data:roleListTree.selectedItem.@label,id:roleListTree.selectedItem.@id});
						alreadyChooseListTree.dataProvider=organzizeChooseUsers(alreadyChoose);
						delete roleListTree.selectedItem.parent().node[roleListTree.selectedIndex];

					}
				}else if(selectIndex==3){
					if(unAuthListTree.selectedItem){
//						Alert.show(unAuthListTree.selectedItem.@label);
						alreadyChoose.push({data:unAuthListTree.selectedItem.@label,id:unAuthListTree.selectedItem.@id});
						alreadyChooseListTree.dataProvider=organzizeChooseUsers(alreadyChoose);
						delete unAuthListTree.selectedItem.parent().node[unAuthListTree.selectedIndex];

					}
				}
			}
			private function removeOneUser():void{
				if(alreadyChooseListTree.selectedItem){
					alreadyChoose.splice(alreadyChooseListTree.selectedIndex,1);
					alreadyChooseListTree.dataProvider=organzizeChooseUsers(alreadyChoose);
					var selectIndex:int=view.selectedIndex;
					if(selectIndex==0){
						teacherAccountBridgeServiceRO.getUsersByCondition(null,null,null);
						//systemServiceRO.getAllUsers();
					}else if(selectIndex==1){
//						this.departments.dataProvider=parentApplication.allDepartment;
//						this.departments.selectedIndex=0;
						var item:Object=departments.selectedItem;
						teacherAccountBridgeServiceRO.getUsersByCondition(null,item.data,null);
//						systemServiceRO.getDepartmentBySymbol("root");
					}else if(selectIndex==2){
//						this.roles.dataProvider=parentApplication.allRole;	
//						this.roles.selectedIndex=0;
						var item:Object=roles.selectedItem;
						teacherAccountBridgeServiceRO.getUsersByCondition(null,null,item.data);
						//systemServiceRO.getAllRoles();
					}else if(selectIndex==3){
						teacherAccountBridgeServiceRO.getUnAuthUsers();
					}
				
				}
				
			}
			private function addAllUser():void{
				var selectIndex:int=view.selectedIndex;
				var root:XML=null;
				if(selectIndex==0){
					root = <root>{allListTree.dataProvider.source}</root>
					for each(var xml:XML in root.elements()){
						for each(var item:XML in xml.elements()){
							//打印每个节点的标签
//							Alert.show(item.@label);
							alreadyChoose.push({data:item.@label,id:item.@id});
						}
						

					}
					alreadyChooseListTree.dataProvider=organzizeChooseUsers(alreadyChoose);
					allListTree.dataProvider=null;
				}else if(selectIndex==1){
					root = <root>{departmentListTree.dataProvider.source}</root>
					for each(var xml:XML in root.elements()){
						for each(var item:XML in xml.elements()){
							//打印每个节点的标签
							//							Alert.show(item.@label);
							alreadyChoose.push({data:item.@label,id:item.@id});
						}
						
						
					}
					alreadyChooseListTree.dataProvider=organzizeChooseUsers(alreadyChoose);
					departmentListTree.dataProvider=null;
				}else if(selectIndex==2){
					root = <root>{roleListTree.dataProvider.source}</root>
					for each(var xml:XML in root.elements()){
						for each(var item:XML in xml.elements()){
							//打印每个节点的标签
							//							Alert.show(item.@label);
							alreadyChoose.push({data:item.@label,id:item.@id});
						}
						
						
					}
					alreadyChooseListTree.dataProvider=organzizeChooseUsers(alreadyChoose);
					roleListTree.dataProvider=null;
				}else if(selectIndex==3){
					root = <root>{unAuthListTree.dataProvider.source}</root>
					for each(var xml:XML in root.elements()){
						for each(var item:XML in xml.elements()){
							//打印每个节点的标签
							//							Alert.show(item.@label);
							alreadyChoose.push({data:item.@label,id:item.@id});
						}
						
						
					}
					alreadyChooseListTree.dataProvider=organzizeChooseUsers(alreadyChoose);
					unAuthListTree.dataProvider=null;

				}
			}
			private function removeAllUser():void{
					alreadyChoose=new Array();
					alreadyChooseListTree.dataProvider=organzizeChooseUsers(alreadyChoose);
					var selectIndex:int=view.selectedIndex;
					if(selectIndex==0){
						teacherAccountBridgeServiceRO.getUsersByCondition(null,null,null);
					//	systemServiceRO.getAllUsers();
					}else if(selectIndex==1){
//						this.departments.dataProvider=parentApplication.allDepartment;
//						this.departments.selectedIndex=0;
						teacherAccountBridgeServiceRO.getUsersByCondition(null,departments.selectedItem.data,null);
					//	systemServiceRO.getDepartmentBySymbol("root");
					}else if(selectIndex==2){
//						this.roles.dataProvider=parentApplication.allRole;	
//						this.roles.selectedIndex=0;
						teacherAccountBridgeServiceRO.getUsersByCondition(null,null,roles.selectedItem.data);
						//systemServiceRO.getAllRoles();
					}else if(selectIndex==3){
						teacherAccountBridgeServiceRO.getUnAuthUsers();
					}
					
			}
			private function confirmSelect():void{
				winParent.usersSelected=new Array();
				for(var i:int=0;i<alreadyChoose.length;i++){
					//Alert.show(alreadyChoose[i].id);
					winParent.usersSelected.push({data:alreadyChoose[i].data,id:alreadyChoose[i].id});
				}
				winParent.organizedUsersSelected();
				PopUpManager.removePopUp(this);
			}
			

			protected function search():void
			{
				view.selectedIndex=0;
				var account:String=search_account_id.text;
				
				teacherAccountBridgeServiceRO.getUsersByCondition(account,null,null);
				if(account=="")callLater(initWin);
			}
			private function searchAccountHandleAutoCompleteChange():void
			{
					var item:Object=search_account.selectedItem;
					if (item != null && item.hasOwnProperty( "id" ))
					{
						search_account_id.text=item.id;
					} else{
						search_account_id.text="";
					}             
				
				
			}
		
		]]> 		
	</mx:Script> 
	<mx:Component id="searchAccountDropDownItemRenderer">
		<render:AdvancedItemRenderer selectedItems="{ outerDocument.search_account.selectedItems }" />
	</mx:Component>
<mx:Panel width="100%" height="100%"  styleName="customPanel" title="人员选择"   dropShadowVisible="false" borderVisible="true" borderColor="black">
	<mx:VBox width="100%" height="100%"  verticalAlign="middle">
		<mx:HBox  verticalAlign="middle"   horizontalAlign="right" width="100%"  height="30" top="40">
			<mx:Label text="|"/>
			<!-- <mx:LinkButton label="全体人员" color="0x3380DD"  textDecoration="underline" fontWeight="normal" />
			<mx:Label text="|"/>-->
			<mx:LinkButton label="确认选择" color="0x3380DD" click="confirmSelect();" textDecoration="underline" fontWeight="normal" />
			<mx:Label text="|"/>
			<mx:LinkButton label="关闭" color="0x3380DD" click="PopUpManager.removePopUp(this);" textDecoration="underline" fontWeight="normal" />

			<mx:Label text="|"/>
			
		</mx:HBox>
		<mx:HBox  verticalAlign="middle" width="100%" height="100%" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" horizontalAlign="center">
			<mx:Box borderVisible="true" width="250" height="100%" borderColor="0xD0E8AA">
				<mx:VBox width="100%" height="100%">
					<mx:HBox  verticalAlign="middle"   horizontalAlign="center" width="100%" height="40">
						<hc:AutoComplete id="search_account"  labelField="name"  width="150"  matchType="anyPart" prompt="选择教师"  change="{ searchAccountHandleAutoCompleteChange() }" dropDownItemRenderer="{ searchAccountDropDownItemRenderer }" selectedItemStyleName="none">
							
						</hc:AutoComplete>
						<mx:Label id="search_account_id" visible="false">
							
						</mx:Label>
						<mx:LinkButton icon="@Embed(source='../WebContent/resources/common/tools/button_search_icon.png')"  click="search();"/>
					</mx:HBox>
					<mx:Accordion id="view"    creatingContentPane="true" headerStyleName="customAccordionHeadStyles" width="100%"  top="15" height="100%"  selectedIndex="0" creationPolicy="all" change="switchViews(event);" dropShadowVisible="false" backgroundAlpha="0.0" headerHeight="25" fontSize="15" textAlign="center">
						<mx:Box label="所有人员列表" fontSize="20" width="100%" height="100%">
							
							<mx:Tree id="allListTree" iconField="@icon"   width="100%" height="100%" labelField="@label"   textAlign="left"  paddingLeft="10" showRoot="false" />    
							
						</mx:Box>
						<!-- 
							<mx:Box label="选择部门" fontSize="20" width="100%" height="100%" visible="false">
							<s:layout>
							<s:VerticalLayout horizontalAlign="center"/>
							</s:layout>
							<mx:Tree id="departmentListTree" iconField="@icon"   width="100%" height="100%" labelField="@label"   textAlign="left"  paddingLeft="10" showRoot="false" />    
							
							</mx:Box>
						
						-->
						
						<mx:Box label="按部门选择员工" fontSize="20" width="100%" height="100%">
							
							<mx:ComboBox  width="100%" id="departments"  fontSize="12" labelField="label"  dataProvider="{parentApplication.allDepartment}" textAlign="left" change="departmentSelectionChangedHandler(event);" />
							<mx:Tree id="departmentListTree" iconField="@icon"   width="100%" height="100%"  labelField="@label"   textAlign="left"  paddingLeft="10" showRoot="false" />    
							
						</mx:Box>
						<mx:Box label="按岗位选择员工" fontSize="20" width="100%" height="100%">
							
							<mx:ComboBox  width="100%" id="roles"    fontSize="12" labelField="label" dataProvider="{parentApplication.allRole}"  textAlign="left" change="roleSelectionChangedHandler(event);"/>
							<mx:Tree id="roleListTree" iconField="@icon"   width="100%" height="100%" labelField="@label"   textAlign="left"  paddingLeft="10" showRoot="false" />    
							
						</mx:Box>
						<mx:Box label="未分配岗位员工" fontSize="20" width="100%" height="100%">
							
							<mx:Tree id="unAuthListTree" iconField="@icon"   width="100%" height="100%" labelField="@label"   textAlign="left"  paddingLeft="10" showRoot="false" />    
							
						</mx:Box>
					</mx:Accordion>
				</mx:VBox>	
			</mx:Box>	
			<mx:VBox width="5%" height="100%" verticalAlign="middle" horizontalAlign="center" verticalGap="10">
				<mx:LinkButton icon="@Embed(source='../WebContent/resources/common/tools/button_next_icon.png')"  click="addOneUser();"/>
				<mx:LinkButton icon="@Embed(source='../WebContent/resources/common/tools/button_pre_icon.png')"  click="removeOneUser();"/>
				<mx:LinkButton icon="@Embed(source='../WebContent/resources/common/tools/button_nextPlus_icon.png')" click="addAllUser();"/>
				<mx:LinkButton icon="@Embed(source='../WebContent/resources/common/tools/button_prePlus_icon.png')" click="removeAllUser();"/>

			</mx:VBox>	
			<mx:Box borderVisible="true"  width="250" height="100%" borderColor="0xD0E8AA">
				<mx:VBox width="100%" height="100%">
					<mx:HBox  verticalAlign="middle"   horizontalAlign="left" width="100%" height="40">					
						<mx:Image source="@Embed(source='../WebContent/resources/common/tools/button_hook_icon.png')" />
						<mx:Label text="已选人员"/>	
					</mx:HBox>
					<mx:Tree id="alreadyChooseListTree" iconField="@icon"   width="100%" height="100%" labelField="@label"   textAlign="left"  paddingLeft="10" showRoot="false" />    

				</mx:VBox>
				
			</mx:Box>
		</mx:HBox>
	</mx:VBox>
</mx:Panel>
</mx:VBox>
