<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" 
		   xmlns:hc="com.hillelcoren.components.*"
		   xmlns:render="system.component.render.*"
		   layout="vertical" width="100%" creationComplete="init();" height="100%" xmlns:valueObjects="oa.entity.*" xmlns:component="system.component.*"  xmlns:mx1="library://ns.adobe.com/flex/mx">
	
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<!--定义 RemoteObject 组件-->
		<mx:RemoteObject id="systemServiceRO" destination="systemServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getDepartmentBySymbol"  concurrency="last"  result="getDepartmentBySymbolResult(event);" />
		</mx:RemoteObject>
		<mx:RemoteObject id="teacherAccountBridgeServiceRO" destination="teacherAccountBridgeServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getUserAddressesByConditions"  concurrency="last"  result="getUserAddressesByConditions_resultHandler(event);" />
		</mx:RemoteObject>
	
	<mx:Script>
		<![CDATA[
			import basic.setting.popWin.DepartmentPopWin;
			
			import flexlib.controls.SuperTabBar;
			import flexlib.controls.tabBarClasses.SuperTab;
			import flexlib.events.TabReorderEvent;
			import system.component.WlzxLockWin;

			import mx.collections.ArrayCollection;
			import mx.containers.*;
			import mx.controls.*;
			import mx.events.*;
			import mx.events.ModuleEvent;
			import mx.managers.PopUpManager;
			import mx.modules.*;
			import mx.rpc.events.*;
			
			import mx.events.ListEvent;

			import system.entity.*;
			import basic.utils.Excel;
			import mx.core.FlexGlobals;
			private var excel:Excel = new Excel;
			private function init():void {
				systemServiceRO.getDepartmentBySymbol("root");
				search_account.dataProvider=this.parentApplication.allTeacherAcccounts;
				search();
			}
			
			private function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
				unLockWin();
			}
			private function getDepartmentBySymbolResult(event:ResultEvent):void {
				var department:DepartmentModel=DepartmentModel(event.result);
				var resultXML:String=buildSubDepartments(department);
				var departmentData:XML=new XML(resultXML);
				this.departments.dataProvider=departmentData;
				//				var list:ArrayCollection = ArrayCollection(event.result);
			}
			private function buildSubDepartments(department:DepartmentModel):String{
				var resultXML:String="";
				var list:ArrayCollection = ArrayCollection(department.subordinates);
				if(list.length>0){
					resultXML=resultXML.concat("<node label='"+department.name+"' id='"+department.id+"'>");
					for (var i:int = 0; i < list.length; i++){
						var _department:DepartmentModel = DepartmentModel(list.getItemAt(i));	
						resultXML=resultXML.concat(buildSubDepartments(_department));
					}
					resultXML=resultXML.concat("</node>");
				}		
				else resultXML=resultXML.concat("<node label='"+department.name+"' id='"+department.id+"'/>");				
				
				return resultXML;
			}
			private function getUserAddressesByConditions_resultHandler(event:ResultEvent):void{
				var allList:ArrayCollection=event.result as ArrayCollection;				
				table.initdata(allList);
				unLockWin();
			}
			
			private function treeSelectedItemId():String{
				var selectedNode:XML=departments.selectedItem as XML;
				
				if(selectedNode!=null){
//					Alert.show(selectedNode.@id);
					return selectedNode.@id;
				}
				else{
					//Alert.show("当前未选中任何节点部门","操作不当");
					return null;
				} 
			}
			
			private function searchAccountHandleAutoCompleteChange():void
			{
				var color:Object = search_account.selectedItem;
				
				if (color != null && color.hasOwnProperty( "id" ))
				{
					search_account_id.text=color.id;
					departments.selectedItem=null;
				} else{
					search_account_id.text="";
				}               
			}
			private var window:WlzxLockWin=null;
			private function lockWin():void{
				
				window=WlzxLockWin(PopUpManager.createPopUp(this,WlzxLockWin,true)); 
				PopUpManager.centerPopUp(window);
				window.percentHeight=100;
				window.percentWidth=100;			
				
			}
			private function unLockWin():void{
				if(window!=null)
					PopUpManager.removePopUp(window);
			}
			public function search():void{
				lockWin();
				var departmentId:String=treeSelectedItemId();
				var userId:String=search_account_id.text;
//				Alert.show(departmentId+"d");
//				Alert.show(userId+"u");
				teacherAccountBridgeServiceRO.getUserAddressesByConditions(departmentId,userId);
			}
			
			protected function departments_changeHandler(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				search_account.selectedItem=null;
				search();
			}
			public function exportExcel(event:Event):void
			{
				excel.load("general/export/publicAddress.action", "");
			}
		]]>
	</mx:Script>
	<mx:Component id="searchAccountDropDownItemRenderer">
		<render:AdvancedItemRenderer selectedItems="{ outerDocument.search_account.selectedItems }" />
	</mx:Component>
	<mx:VBox borderVisible="true" width="100%" height="100%" borderStyle="solid">

		<mx:VBox  width="100%" height="100%" >
			<mx:HBox  width="100%" height="7%" styleName="CustomHBoxStyle"  horizontalGap="10" paddingLeft="20" verticalAlign="middle">
				<mx:Label text="|"/>
				<mx:LinkButton  label="导出" icon="@Embed(source='../WebContent/resources/common/tools/button_down_icon.png')" click="exportExcel(event);"/>
				<mx:Label text="|"/>
				
				
				<hc:AutoComplete id="search_account"  labelField="name"  width="200"  matchType="anyPart" prompt="选择"  change="{ searchAccountHandleAutoCompleteChange() }" dropDownItemRenderer="{ searchAccountDropDownItemRenderer }" selectedItemStyleName="none">
					
				</hc:AutoComplete>
				<mx:Label id="search_account_id" visible="false" width="0">
					
				</mx:Label>
				<mx:LinkButton  label="快速查找" icon="@Embed(source='../WebContent/resources/oa/buttonIcon/search_icon.jpg')" click="departments.selectedItem=null;search();">
					
				</mx:LinkButton>
				<mx:Label text="|"/>
			</mx:HBox>
			
			<mx:HBox  width="100%" height="100%" paddingBottom="10" paddingLeft="10" paddingRight="10">
				<mx:VBox width="200" height="100%">
					<mx:Panel width="100%" height="100%"  styleName="customPanel"  title="部门结构"   dropShadowVisible="false" borderVisible="true">
						<mx:Tree  id="departments" labelField="@label"   width="100%" height="100%"  change="departments_changeHandler(event)" borderVisible="false">
						</mx:Tree>
					</mx:Panel>
				</mx:VBox>
				<mx:VBox  width="100%" height="100%"  >
					<component:WlzxPageDataGrid width="100%" height="100%" borderVisible="true"   borderAlpha="0.2" verticalAlign="middle"   id="table" pagecount="15">				
						<component:mygridcolumns>
							
							
							<mx:DataGridColumn textAlign="center" headerText="姓名" dataField="userName" width="100">
							</mx:DataGridColumn>
							<mx:DataGridColumn textAlign="center" headerText="短号" dataField="userAccount" width="100">
							</mx:DataGridColumn>
							<mx:DataGridColumn textAlign="center" headerText="主部门" dataField="mainDepartmentName" width="100">
								<mx:itemRenderer>
									<mx:Component>
										<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
											<mx:Label text="{parentApplication.getDepartmentNameById(data.mainDepartmentName)}"/>
											
										</mx:VBox>																			
									</mx:Component>	
									
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn textAlign="center" headerText="职务" dataField="mainRoleName" width="100">
								<mx:itemRenderer>
									<mx:Component>
										<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
											<mx:Label text="{parentApplication.getRoleNameById(data.mainRoleName)}"/>
											
										</mx:VBox>																			
									</mx:Component>	
									
								</mx:itemRenderer>
							</mx:DataGridColumn>
							
							<mx:DataGridColumn textAlign="center" headerText="电子邮箱" dataField="email" width="100">
							</mx:DataGridColumn>
							<mx:DataGridColumn textAlign="center" headerText="办公电话" dataField="officePhone" width="100">
							</mx:DataGridColumn>
							<mx:DataGridColumn textAlign="center" headerText="手机号码" dataField="mobilePhone" width="100">
							</mx:DataGridColumn>
							
						</component:mygridcolumns>
					</component:WlzxPageDataGrid>
				</mx:VBox>
			</mx:HBox>
			
		</mx:VBox>
		
		
	</mx:VBox>
</mx:Module>
