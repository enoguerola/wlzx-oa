<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:local="*" xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:flexcalendar="com.flexcalendar.components.calendar.*"
		   xmlns:myflexcalendar="oa.schedule.flexCalendar"
		   xmlns:component="system.component.*"
		   height="100%" width="100%" creationComplete="init();" xmlns:flexCalendar="oa.schedule.flexCalendar.*"
		  >


	<mx:Script>
		<![CDATA[
			import com.flexcalendar.components.calendar.core.DateRange;
			import com.flexcalendar.components.calendar.core.dataModel.CalendarDataProvider;
			import com.flexcalendar.components.calendar.editor.baloon.BaloonItemEditor;
			import com.flexcalendar.components.calendar.events.CalendarItemAddedEvent;
			import com.flexcalendar.components.calendar.events.CalendarItemModificationEvent;
			import com.flexcalendar.components.calendar.events.CalendarItemRemovedEvent;
			import com.flexcalendar.components.calendar.events.CalendarMouseEvent;
			import com.flexcalendar.components.calendar.utils.CalendarMode;
			import com.flexcalendar.components.calendar.utils.DateUtils;
			
			import mx.controls.Alert;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.*;
			import mx.events.ItemClickEvent;
			import system.entity.*;
			import system.utils.CommonUtils;
			import oa.schedule.flexCalendar.*;
			[Bindable]
			public var dp:CalendarDataProvider;
			
			[Bindable]
			public var visibleDateRange:DateRange;
			
			public var scheduleType:ArrayCollection = new ArrayCollection(
				[ {label:"全部", data:null},  
					{label:"私人日程", data:1},
					{label:"工作日程", data:2}]
			); 
			public var scheduleState:ArrayCollection = new ArrayCollection( 
				[ {label:"全部", data:null},  
					{label:"进行中", data:1},
					{label:"已完结", data:2}]); 
			
			protected function init(event:Event = null):void {
				
				
				var today:Date = DateUtils.startOfDay(new Date());
				
				var startRange:Date = DateUtils.startOfDay(new Date());
				var endRange:Date = DateUtils.endOfDay(new Date());
				
				
				DateUtils.addDays(startRange, 0 - today.day);
				DateUtils.addDays(endRange, 0 - today.day + 6);
				
				visibleDateRange = new DateRange(startRange, endRange);
				fromDateChooser.text=CommonUtils.formatDate(startRange,"YYYY-MM-DD");
				toDateChooser.text=CommonUtils.formatDate(endRange,"YYYY-MM-DD");

				fromDateChooser.addEventListener(CalendarLayoutChangeEvent.CHANGE, updateRange);
				toDateChooser.addEventListener(CalendarLayoutChangeEvent.CHANGE, updateRange);
//				
				//create sample CalendarDataProvider
				dp = new DataProviderBuilder().buildExampleDataProvider();
				callLater(hideWaterMark);
				
			}
			protected function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
			
			//隐藏水印代码
			private function hideWaterMark():void{
				var sy:Sprite=flexCalendar.getChildAt(3) as Sprite;
				sy.visible=false;
				sy.alpha=0;
			}
			protected function updateRange(event:CalendarLayoutChangeEvent):void {
				
				//sanity check
				if (toDateChooser.selectedDate < fromDateChooser.selectedDate) {
					//reset val	ues
					fromDateChooser.selectedDate = flexCalendar.visibleRange.start;
					toDateChooser.selectedDate = flexCalendar.visibleRange.end;
				}
				else {
					flexCalendar.visibleRange = new DateRange(DateUtils.startOfDay(fromDateChooser.selectedDate),
						DateUtils.endOfDay(toDateChooser.selectedDate));
				}
			}
			
//			private function calendarMouseClickHandler(event:CalendarMouseEvent):void {
//				trace("Selected date: " + event.selectedDate);
//				trace("Preferred new event time: " + event.preferredTimeInMills);
//				trace("Mouse event: " + event.event);
//			}
//			
//			
//			private function calendarRendererMouseClickHandler(event:CalendarMouseEvent):void {
//				trace("Selected renderer start date: " + event.selectedDate);
//				trace("Selected item details: " + event.item)
//				trace("Selected item summary: " + event.item.summary);
//				trace("Mouse event: " + event.event);
//			}
			
			private function calendarItemAdded(event:CalendarItemAddedEvent):void {
//				Alert.show("add");
				trace("Item added");
			}
			
			private function calendarItemRemoved(event:CalendarItemRemovedEvent):void {
//				Alert.show("removed");
				trace("Item removed");
			}
			
			private function calendarItemModified(event:CalendarItemModificationEvent):void {
//				Alert.show("modified");
				trace("Item modified");
			}

			private function scheduleViewSwitch(event:ItemClickEvent):void {
				var value:String=event.currentTarget.selectedValue;
//								Alert.show(value);
				//				scheduleViewContainer.setCurrentState(value,true);
				if(value=="list"){
//					scheduleViewContainer.selectedChild= a;
					list.percentHeight=100;
					list.visible=true;
					schedule.height=0;
					schedule.visible=false;
				}else if(value=="schedule"){
					schedule.percentHeight=100;
					schedule.visible=true;
					list.height=0;
					list.visible=false;
//						scheduleViewContainer.selectedChild= b;
//						
//						callLater(hideWaterMark);
				}
				
			}
			public  function enterEdit(id:String):void{
			
			}
			public function finishSchedule(id:String):void{
				
			}
			public function deleteSchedule(id:String):void{
				
			}
		]]>
	</mx:Script>
	
<!--	<mx:Metadata>
		[ResourceBundle("sampleApp")]
	</mx:Metadata>-->
	<mx:Panel width="100%" height="100%"   title="个人日程"  borderVisible="false" id="panel" dropShadowVisible="false" >
		
		
		<mx:VBox width="100%" height="100%" id="listPanel">
			<mx:HBox verticalAlign="middle" horizontalAlign="right" width="100%" fontSize="12" >
				<mx:HBox width="100%" height="30" paddingLeft="20"  horizontalGap="0" backgroundColor="#C5E497"  verticalAlign="middle">
					<mx:Label text="|"/>
					<mx:LinkButton  label="新建" icon="@Embed(source='../WebContent/resources/common/tools/button_add_icon.png')"  />
					<mx:Label text="|"/>
					<mx:LinkButton  label="工作提交" icon="@Embed(source='../WebContent/resources/common/tools/button_add_icon.png')"/>
					<mx:Label text="|"/>
					<mx:LinkButton  label="打印" icon="@Embed(source='../WebContent/resources/common/tools/button_printer_icon.png')"/>
					<mx:Label text="|"/>
					<mx:LinkButton  label="导出" icon="@Embed(source='../WebContent/resources/common/tools/button_printer_icon.png')"/>
					<mx:Label text="|"/>
				</mx:HBox>
			</mx:HBox>
			<mx:VBox width="100%" height="100%">
				<mx:HBox height="30" width="100%" verticalAlign="middle" horizontalAlign="left">
					<mx:Label text="起止日期：" width="70">
						
					</mx:Label>
					<mx:DateField width="100" editable="false" id="fromDateChooser" selectedDate="{flexCalendar.visibleRange.start}"  formatString="YYYY-MM-DD">
						
					</mx:DateField>
					<mx:Label text="--" width="20">
						
					</mx:Label>
					<mx:DateField width="100" editable="false" id="toDateChooser" selectedDate="{flexCalendar.visibleRange.end}" formatString="YYYY-MM-DD">
						
					</mx:DateField>
					<mx:Label text="日程类型：" width="70" >
						
					</mx:Label>
					<mx:ComboBox id="scope" width="130" dataProvider="{scheduleType}" selectedIndex="0">
						
					</mx:ComboBox>
					<mx:Label text="日程状态：" width="70">
						
					</mx:Label>
					<mx:ComboBox width="100"   id="state" dataProvider="{scheduleState}"  selectedIndex="0">
						
					</mx:ComboBox>
					<mx:CheckBox id="entireCalendarReadonly" label="只读" selected="true" width="80" />									
					<mx:RadioButtonGroup id="scheduleView"  itemClick="scheduleViewSwitch(event);" />
					<mx:RadioButton label="列表视图"  groupName="scheduleView" id="listView" selected="true" value="list"/>
					<mx:RadioButton label="日历视图" groupName="scheduleView" id="dateView" value="schedule"/>
					
				</mx:HBox>
				
					<mx:VBox width="100%" height="100%" label="日程列表"  name="list" id="list">
						
						<component:WlzxPageDataGrid width="100%" height="100%" borderVisible="false"   borderAlpha="0.2" verticalAlign="middle" id="mydg">				
							<component:mygridcolumns>
								
								
								<mx:DataGridColumn textAlign="center" headerText="日程类型"  width="80">
									
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="共享日程" width="80">
									
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="开始时间" width="100">
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="截止时间"  width="100">
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="主题" width="200">
								</mx:DataGridColumn>
								
								<mx:DataGridColumn textAlign="center" headerText="优先级" width="80">
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="操作" width="100">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalGap="0">
												<mx:LinkButton  label="[编辑]"   click="{this.outerDocument.enterEdit(data.id);}" enabled="{checkAuth(data)}">											
												</mx:LinkButton>
												<mx:LinkButton  label="[完成]"   click="{this.outerDocument.finishSchedule(data.id);}" enabled="{checkAuth(data)}">											
												</mx:LinkButton>
												<mx:LinkButton  label="[删除]"   click="{this.outerDocument.deleteSchedule(data.id);}" enabled="{checkAuth(data)}">											
												</mx:LinkButton>
												<mx:Script>
													<![CDATA[
														
														//提示信息
														import cn.org.rapid_framework.flex_security.SecurityControler;
														
														import mx.controls.Alert;
														import mx.core.UIComponent;
														private function checkAuth(data:Object):Boolean{
															
															if(data!=null){	
																if(data.status==0){
																	return true;
																}else
																	return false;
																
															}else{
																return false;
															}
														}
													]]>
												</mx:Script>
											</mx:HBox>
											
											
										</mx:Component>
										
									</mx:itemRenderer>
								</mx:DataGridColumn>
							</component:mygridcolumns>
						</component:WlzxPageDataGrid>
					</mx:VBox>
					
					
					
					<mx:VBox label="日历视图" width="100%" height="0" name="schedule" id="schedule">
						<flexCalendar:MyFlexCalendar license="xxxx-xxx-xxx-xx-xxx" id="flexCalendar" width="100%" height="100%" dataProvider="{dp}" scaleX="1" visibleRange="{visibleDateRange}"
													scaleY="1" itemEditor="{new MyBaloonItemEditor(flexCalendar, false, false)}"
													calendarMode="{entireCalendarReadonly.selected?CalendarMode.READ_ONLY_MODE : CalendarMode.LIMITED_EDIT_MODE}"
													headerVisible="true"
													currentTimeIndicator="true"
													currentDayIndicator="true"
													doubleClickEnabled="true"
													calendarItemAddedEvent="calendarItemAdded(event)"
													calendarItemRemovedEvent="calendarItemRemoved(event)"
													calendarItemModificationEvent="calendarItemModified(event)"
													
													calendarMouseClick="trace('calendarMouseClick')"
													calendarMouseDoubleClick="trace('calendarMouseDoubleClick')"
													calendarRendererMouseClick="trace('calendarRendererMouseClick')"
													calendarRendererMouseDoubleClick="trace('calendarRendererMouseDoubleClick')"
													calendarSpaceRendererMouseClick="trace('calendarSpaceRendererMouseClick')"
													calendarSpaceRendererMouseDoubleClick="trace('calendarSpaceRendererMouseDoubleClick')"
													/>
					</mx:VBox>	
			</mx:VBox>
		</mx:VBox>
	</mx:Panel>
	
				
			
		
		
		
	
	
</mx:Module>
