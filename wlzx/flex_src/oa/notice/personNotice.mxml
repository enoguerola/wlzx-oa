<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" 
		   xmlns:hc="com.hillelcoren.components.*"
		   xmlns:render="system.component.render.*"
		  
		   layout="vertical" width="100%" creationComplete="init();"  height="100%" xmlns:valueObjects="oa.entity.*" xmlns:component="system.component.*" xmlns:mx1="library://ns.adobe.com/flex/mx" xmlns:mutiUpload="system.component.mutiUpload.*"  currentState="list">
	<valueObjects:NoticeModel id="form"/>
	<mx:RemoteObject id="noticeServiceRO" destination="noticeServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
		<mx:method name="addNotice"  concurrency="last"  result="addNoticeResult_resultHandler(event);" />
		<mx:method name="updateNotice"  concurrency="last"  result="updateNoticeResult_resultHandler(event);" />
		<mx:method name="loadNoticeInfoById"  concurrency="last"  result="loadNoticeInfoById_resultHandler(event);" />
		<mx:method name="deleteNoticeById"  concurrency="last"  result="deleteNoticeById_resultHandler(event);" />
		<mx:method name="getNoticesByConditions"  concurrency="last"  result="getNoticesByConditions_resultHandler(event);" />
		<mx:method name="publish"  concurrency="last"  result="publish_resultHandler(event);" />
	</mx:RemoteObject>
	<mx:RemoteObject id="directoryServiceRO" destination="directoryServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
		<mx:method name="getDirectoryItemsByType"  concurrency="multiple"  result="getDirectoryItemsByType_resultHandler(event);" />
	</mx:RemoteObject>
<!--<mx:Style>
		.customTabStyles {
		skin: ClassReference("system.skins.WlzxSubTabSkin");
		border:1px;
		}
	</mx:Style>-->
	<mx:StringValidator id="title_stringValidator" source="{title}" property="text"  requiredFieldError="公告标题不能为空"/>
	<mx:StringValidator id="content_stringValidator" source="{rte}" property="htmlText"  requiredFieldError="公告内容不能为空"/>
	
	<mx:states>
		<mx:State name="add" enterState="add_activateHandler(event)">           
			<mx:RemoveChild target="{listPanel}"/>
		</mx:State>
		<mx:State name="list">           
			<mx:RemoveChild target="{addPanel}"/>
		</mx:State>
	</mx:states>
	<mx:transitions>
		<mx:Transition id="myTransition1" fromState="list" toState="*" >
			<mx:Parallel id="t1" target="{addPanel}" >
				<mx:WipeLeft duration="1500"></mx:WipeLeft>
			</mx:Parallel>
		</mx:Transition>
		<mx:Transition id="myTransition2" fromState="*" toState="list" >
			<mx:Parallel id="t2" target="{listPanel}" >
				<mx:WipeRight duration="800">
				</mx:WipeRight>
			</mx:Parallel>
		</mx:Transition>
	</mx:transitions>
	
	<mx:Script>
		<![CDATA[
			import basic.utils.DateUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.*;
			import mx.events.*;
			import mx.rpc.events.*;
			import mx.validators.Validator;
			
			import oa.entity.AttachmentModel;
			
			import system.utils.*;
			
			public var scopes:ArrayCollection = new ArrayCollection( 
				[	{label:"全部", data:null},  
					{label:"学校", data:"0"},  
					{label:"部门", data:"1"}]); 
			
			public var noticeScopeList:ArrayCollection = new ArrayCollection( 
				[	
					{label:"校级公告", data:"0"},  
					{label:"部门公告", data:"1"}]);
			public var noticeEmergenceList:ArrayCollection = new ArrayCollection( 
				[	{label:"全部", data:null},
					{label:"紧急", data:"1"},  
					{label:"普通", data:"0"}]);
			public var noticeTypeList:ArrayCollection = new ArrayCollection();
			public var typeList:ArrayCollection = new ArrayCollection();
			
			[Bindable] 
			public var departmentList:ArrayCollection = new ArrayCollection();
			private var validatorArr:Array;
			
			private function init():void {	
				var parms:String=((Object)(this.owner)).id;
//				if(parms=='add'){
//					this.currentState='add';
//					returnArea.height=0;
//				}
//				else if(parms=='list') 
//				{
//					//this.currentState='list';
//				}
				search_date_begin.text=CommonUtils.formatDate(CommonUtils.currentMonthBeginDate(),"YYYY-MM-DD");
				search_date_end.text=CommonUtils.formatDate(CommonUtils.currentMonthEndDate(),"YYYY-MM-DD");
				directoryServiceRO.getDirectoryItemsByType("noticeType");
				var urlRequest:URLRequest = new URLRequest(parentApplication.homeUrl+"spring/attachmentUpload.action");
				//upload.urlRequest = urlRequest;
				messagesView.selectedIndex = 0;
				noticeScope.dataProvider=  new ArrayCollection([{label:"部门公告", data:"1"}]);
				departmentList = this.parentApplication.currentUserFirstLevelDepartment;
				postdepartment.dataProvider= departmentList;
				postdepartment.selectedIndex=0;
				//权限控制部分
				if(this.parentApplication.currentUser.hasDam("postSelfDepartmentSchoolScopeNotice@noFilter@")){
					noticeScope.dataProvider= new ArrayCollection([{label:"校级公告", data:"0"},{label:"部门公告", data:"1"}]);
				}
				if(this.parentApplication.currentUser.hasDam("postAnyNotice@noFilter@")){
					noticeScope.dataProvider= new ArrayCollection([{label:"校级公告", data:"0"},{label:"部门公告", data:"1"}]);
//					departmentList = this.parentApplication.allDepartment;
//					postdepartment.dataProvider= departmentList;
//					postdepartment.selectedIndex=0;
				}
//				callLater(search);
			}
			
			private function systemFaultHandler(event:FaultEvent):void {
				unLockWin();
				Alert.show(event.fault.faultString, 'Error');
				
			}
			protected function getDirectoryItemsByType_resultHandler(event:ResultEvent):void{
				typeList.addItem({label:"全部", data:null});
				typeList.addItem({label:"其他", data:"其他"});
				var list:ArrayCollection=event.result as ArrayCollection;
				for(var i:int=0;i<list.length;i++){
					var directoryItem:Object=list.getItemAt(i);
					if(directoryItem.type=='noticeType'){
						noticeTypeList.addItem({label:directoryItem.name, data:directoryItem.value});
						typeList.addItem({label:directoryItem.name, data:directoryItem.value});
//						if(i==list.length-1){
//							search_type.dataProvider=typeList;
//							seachType.dataProvider=noticeTypeList
//						}
						
					}
				}
				noticeTypeList.addItem({label:"其他", data:"其他"});
				search_type.dataProvider=typeList;
				search_type.selectedIndex=0;
				noticeType.dataProvider=noticeTypeList;
				noticeType.selectedIndex=0;
				callLater(search);
				
				
			}
			
			public function search():void
			{
				lockWin();
				var type:String = search_type.selectedItem.data;
				var scope:String=search_scope.selectedItem.data;
				var status:String= messagesView.selectedIndex + "";
				var emergence:String = _emergence.selectedItem.data;
//				if(_emergence.selected)
//					emergence = 1;
				var submitBeginDate:String=search_date_begin.text;
				var submitEndDate:String=search_date_end.text;
//				Alert.show(type);
				noticeServiceRO.getNoticesByConditions(this.parentApplication.currentUser.id, type, scope,emergence, "", "",status,
					submitBeginDate,submitEndDate, draftTable.curpage, draftTable.pagecount);
			}
			
			protected function addNoticeResult_resultHandler(event:ResultEvent):void
			{
				Alert.show("添加成功");
				this.currentState='list';
				search();
			}
			protected function updateNoticeResult_resultHandler(event:ResultEvent):void
			{
				Alert.show("添加成功");
				this.currentState='list';
				search();
			}
			protected function loadNoticeInfoById_resultHandler(event:ResultEvent):void
			{
				form = event.result as NoticeModel;
				title.text = form.title;
				noticeType.selectedIndex = ComboxUtils.findIndex(noticeTypeList, form.type);
				noticeScope.selectedIndex = ComboxUtils.findIndex(noticeScopeList, form.scope);
				postdepartment.selectedIndex = ComboxUtils.findIndex(departmentList, form.postDepartmentId);
				if(form.emergence == 1)
					emergence.selected = true;
				rte.htmlText = form.content;
				/*
				var uploadList:Array=new Array();
				for each(var model:AttachmentModel in form.attachments){
					uploadList.push({label:model.name,data:parseInt(model.size)/1000+"KB",width:145,id:model.id});
					//	uploadListfileRef.fileList
				}
				upload.uploadAlready_list.dataProvider=uploadList;
				*/
				
				upload.loadData(ArrayCollection(form.attachments),true);

			}
			protected function publish_resultHandler(event:ResultEvent):void
			{
				search();
			}
			
			protected function deleteNoticeById_resultHandler(event:ResultEvent):void
			{
				if(event.result as Boolean==true){
					Alert.show("删除成功");
				}else{
					Alert.show("无法删除");
				}
				search();
			}			
			
			
			protected function getNoticesByConditions_resultHandler(event:ResultEvent):void
			{
				unLockWin();
				var allList:ArrayCollection = event.result as ArrayCollection;
//				Alert.show( " " + messagesView.selectedIndex);
				if(messagesView.selectedIndex == 1)
					noticeTable.initdata(allList);
				else
					draftTable.initdata(allList);
			}
			
			protected function add_activateHandler(event:Event):void
			{
				if(addUpdateFlag.text=="add")
				{
					addInit();
				}
				else {
					var id:String=addUpdateFlag.text.split("_")[1];
					editInit(id);
				}
			}
			
			public function formatDate(date:Date):String{
				return CommonUtils.formatDate(date);
				
			}
			//编辑
			public function enterEdit(id:String):void{
				addUpdateFlag.text="update"+"_"+id;
				this.currentState='add';
				returnArea.height=30;
			}
			//发布
			public function post(id:String):void{
				Alert.show("你确定要发布该公告吗?","确认",Alert.YES | Alert.NO,null,function(event:CloseEvent):void{
					if(event.detail == Alert.YES)
					{
						noticeServiceRO.publish(id);
					}
				});
			}
			public function detailNotice(id:String):void
			{
				var parent:Object=(Object)(((Object)(this.owner)).owner);
				parent.addTab("noticeDetial-"+id,"查看公告",parent.nav,"oa/notice/noticeDetail.swf",null,id);
			}
			//删除
			public function deleteNotice(id:String):void{
				Alert.show("你确定要删除该公告吗?","确认",Alert.YES | Alert.NO,null,function(event:CloseEvent):void{
					if(event.detail == Alert.YES)
					{
						noticeServiceRO.deleteNoticeById(id);
					}
				});
			}
			
			/*
			*  保存草稿
			*/
			protected function save_clickHandler(event:MouseEvent):void
			{
				if(validateSaveInput()){
					if(addUpdateFlag.text == "add"){
						//Alert.show("add");
						form = new NoticeModel();
						form.content = rte.htmlText;
						if(emergence.selected)
							form.emergence = 1;
						else
							form.emergence = 0;
						form.postDepartmentId = postdepartment.selectedItem.data;
						form.scope = parseInt(noticeScope.selectedItem.data);
						form.title = title.text;
						form.type = noticeType.selectedItem.data;
						form.status = 0;
						//Alert.show("add begin");
						noticeServiceRO.addNotice(form, upload.getAttachmentsIds());
					}else if(addUpdateFlag.text == "update"+"_"+form.id){
						form.content = rte.htmlText;
						if(emergence.selected)
							form.emergence = 1;
						else
							form.emergence = 0;
						form.postDepartmentId = postdepartment.selectedItem.data;
						form.scope = parseInt(noticeScope.selectedItem.data);
						form.title = title.text;
						form.status = 0;
						form.type = noticeType.selectedItem.data;
						noticeServiceRO.addNotice(form, upload.getAttachmentsIds());
					}
				}
			}
			
			private function validateSaveInput():Boolean
			{	
				validatorArr = new Array();
				validatorArr.push(title_stringValidator);
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					return true;
				} else {
					return false;
				}
				
			}
			
			protected function add_clickHandler(event:MouseEvent):void
			{
				if(validateInput()){
					if(addUpdateFlag.text=="add"){
						form = new NoticeModel();
						//Alert.show("ok");
						form.content = rte.htmlText;
						if(emergence.selected)
							form.emergence = 1;
						else
							form.emergence = 0;
						form.postDepartmentId = postdepartment.selectedItem.data;
						form.scope = parseInt(noticeScope.selectedItem.data);
						
						form.title = title.text;
						form.type = noticeType.selectedItem.data;
						form.status = 1;
						noticeServiceRO.addNotice(form, upload.getAttachmentsIds());
					}else if(addUpdateFlag.text == "update"+"_"+form.id){
						form.content = rte.htmlText;
						if(emergence.selected)
							form.emergence = 1;
						else
							form.emergence = 0;
						form.postDepartmentId = postdepartment.selectedItem.data;
						form.scope = parseInt(noticeScope.selectedItem.data);
						form.status = 1;
						form.title = title.text;
						form.type = noticeType.selectedItem.data;
						noticeServiceRO.addNotice(form, upload.getAttachmentsIds());

						//noticeServiceRO.updateNotice(form, upload.idList);
					}
				}
			}
			
			private function validateInput():Boolean
			{	
				validatorArr = new Array();
				validatorArr.push(title_stringValidator);
				validatorArr.push(content_stringValidator);
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					return true;
				} else {
					return false;
				}
			}
			
			private function addInit():void{
				title.text = " ";
				rte.htmlText = " ";
				noticeType.selectedIndex = 1;
				noticeScope.selectedIndex = 1;
				postdepartment.selectedIndex = 1;
				emergence.selected = false;
				//upload.empty();
			}
			
			public function enterAdd(type:int):void{
				addUpdateFlag.text="add";
				this.currentState='add';
			}
			
			public function editInit(id:String):void{
				//upload.empty();
				noticeServiceRO.loadNoticeInfoById(id);
			}
			
			private function showHide():void{
				if(att_area.height==0)
					att_area.height=340;
				else att_area.height=0;
			}
			import mx.managers.PopUpManager;
			import system.component.WlzxLockWin;
			private var window:WlzxLockWin=null;
			private function lockWin():void{
				if(window==null){
					window=WlzxLockWin(PopUpManager.createPopUp(this,WlzxLockWin,true)); 
					PopUpManager.centerPopUp(window);
					window.percentHeight=100;
					window.percentWidth=100;
				}		
				
			}
			private function unLockWin():void{
				if(window!=null)
					PopUpManager.removePopUp(window);
			}

			protected function noticeScope_changeHandler(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				if(noticeScope.selectedItem.data=='1'){
					//Alert.show("bb");
					postdepartment.dataProvider= this.parentApplication.currentUserFirstLevelDepartment;
					postdepartment.selectedIndex=0;
				}else if(noticeScope.selectedItem.data=='0'){
//					var list:ArrayCollection=new ArrayCollection();
////					var mainDepartment:Object=this.parentApplication.currentUser.mainRole.getBelongDepartment().getLeaderDepartment2FirstLevel();
//					var mainDepartment:Object=this.parentApplication.currentUserFirstLevelDepartment;
//					list.addItem({data:mainDepartment.id, label:mainDepartment.name});
				//	Alert.show("aa");
					postdepartment.dataProvider=this.parentApplication.currentUserTrueFirstLevelDepartment;
					postdepartment.selectedIndex=0;
				}
					
			}

		]]>
	</mx:Script>
	
	<mx:VBox borderVisible="true" width="100%" height="100%" borderStyle="solid">
		<mx:VBox width="100%" height="100%" id="listPanel">
			<mx:HBox verticalAlign="middle" horizontalAlign="right" width="100%" fontSize="12" >
				<mx:HBox width="100%" height="30" paddingLeft="20"  horizontalGap="0" styleName="ToolBar"   verticalAlign="middle">
					<mx:Label text="|"/>
					<mx:LinkButton  label="新增" icon="@Embed(source='../WebContent/resources/common/tools/button_add_icon.png')" click="returnArea.height=30;addUpdateFlag.text='add';this.currentState='add';" />
					<mx:Label text="|"/>
				</mx:HBox>
			</mx:HBox>
			<mx:VBox width="100%"  verticalGap="10" verticalAlign="middle" horizontalAlign="center" >
				<mx:VBox width="100%" height="100%"   horizontalGap="10" verticalAlign="middle"
						 horizontalAlign="left" borderVisible="true" paddingTop="10" paddingBottom="0"   paddingLeft="10" paddingRight="10">
					<component:Fieldset title="条件查询"  width="100%">
						<mx:HBox horizontalGap="10">
							<mx:HBox verticalAlign="middle">
								<mx:Label  text="发布日期"  width="70"  textAlign="right"/>
								<mx:DateField dayNames='["日", "一", "二", "三", "四", "五", "六"]'  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]' yearNavigationEnabled="true" id="search_date_begin"   formatString="YYYY-MM-DD"  editable="false" width="120"/>
								<mx:Label  text="--"  width="30" textAlign="center"/>
								<mx:DateField dayNames='["日", "一", "二", "三", "四", "五", "六"]'  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]' yearNavigationEnabled="true" id="search_date_end"  formatString="YYYY-MM-DD" editable="false" width="120"/>
							</mx:HBox>	
							<mx:HBox>
								<mx:Label  text="公告类型"  width="70"  textAlign="right"/>
								<mx:ComboBox id="search_type"   editable="false" width="80"/>
							</mx:HBox>
							<mx:HBox verticalAlign="middle">
								<mx:Label  text="公告范围"  width="70"  textAlign="right"/>
								<mx:ComboBox id="search_scope"  dataProvider="{scopes}" selectedIndex="0"  editable="false"  width="80"/>
							</mx:HBox>
							<mx:HBox verticalAlign="middle">
								<mx:Label  text="优先级 "  width="70"  textAlign="right"/>
								<mx:ComboBox  id="_emergence" dataProvider="{noticeEmergenceList}"  selectedIndex="0"  editable="false"/>
							</mx:HBox>
							<mx:Button  label="搜索"  width="70"   click="search();"/>
						</mx:HBox>
					</component:Fieldset>
				</mx:VBox>
			</mx:VBox>
			<mx:VBox width="100%" height="100%"  verticalAlign="middle" horizontalAlign="center" paddingLeft="10" paddingRight="10" >
				<mx:TabNavigator id="messagesView"  width="100%" height="100%" tabStyleName="customTabStyles"  horizontalGap="1" 
								 borderVisible="false"  tabWidth="120" paddingTop="0"  change="search();">
					<mx:HBox label="草稿箱" width="100%" height="100%">
						<component:WlzxPageDataGrid width="100%" height="100%"   borderVisible="true"  
													autoLayout="true"  borderAlpha="0.2" verticalAlign="middle"   id="draftTable" pagecount="20"  >				
							<component:mygridcolumns>
								<mx:DataGridColumn textAlign="center" headerText="范围"  width="60">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
												<mx:Label text="{getScope(data)}">
												</mx:Label>
												<mx:Script>
													<![CDATA[
														//提示信息														
														import mx.controls.Alert;
														import mx.core.UIComponent;
														private function getScope(data:Object):String{
															if(data.scope=='0')
																return "校级公告";
															else  if(data.scope=='1')
																return "部门公告";
															else return "异常";
														}
													]]>
												</mx:Script>
											</mx:HBox>																		
										</mx:Component>						
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="类型"  width="60">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
												<mx:Label text="{data.type}"></mx:Label>
											</mx:HBox>																		
										</mx:Component>						
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="公告标题" width="100" >
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off" >
												<mx:Image source="@Embed(source='../WebContent/resources/common/ui/emergence2.png')"  visible="{checkEmergence(data)}" toolTip="紧急公告"/>
												<mx1:Text text="{data.title}" width="100">
												</mx1:Text>
												<mx:Script>
													<![CDATA[
														
														//提示信息
														import cn.org.rapid_framework.flex_security.SecurityControler;
														
														import mx.controls.Alert;
														import mx.core.UIComponent;
														private function checkEmergence(data:Object):Boolean{
															
															if(data!=null){	
																if(data.emergence==1){
																	return true;
																}else
																	return false;
																
															}else{
																return false;
															}
														}
													]]>
												</mx:Script>
											</mx:HBox>
											
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="保存时间" width="100" dataField="lastEditTime" labelFunction="DateUtil.datagridFormatDateTime" >
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="发布部门"  width="100" >
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off" >
												<mx1:Text text="{this.parentApplication.getDepartmentNameById(data.postDepartmentId)}" width="100">
												</mx1:Text>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="操作" width="100">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalGap="0" horizontalScrollPolicy="off">
												<mx:LinkButton  label="[发布]"   click="{this.outerDocument.post(data.id);}" enabled="{checkAuth(data)}">											
												</mx:LinkButton>
												<mx:LinkButton  label="[编辑]"   click="{this.outerDocument.enterEdit(data.id);}" enabled="{checkAuth(data)}">											
												</mx:LinkButton>
												<mx:LinkButton  label="[删除]"   click="{this.outerDocument.deleteNotice(data.id);}" enabled="{checkAuth(data)}">											
												</mx:LinkButton>
												<mx:Script>
													<![CDATA[
													//提示信息
													import cn.org.rapid_framework.flex_security.SecurityControler;
													import mx.controls.Alert;
													import mx.core.UIComponent;
													private function checkAuth(data:Object):Boolean{
														return true;
													}
													]]>
												</mx:Script>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								
								<mx:DataGridColumn textAlign="center" headerText="预览" width="60">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalGap="0" horizontalScrollPolicy="off">
												<mx:LinkButton  label="[预览]"  click="{this.outerDocument.detailNotice(data.id);}">											
												</mx:LinkButton>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
							</component:mygridcolumns>
						</component:WlzxPageDataGrid>
					</mx:HBox>
					
					<mx:HBox label="已发布" width="100%" height="100%">
						<component:WlzxPageDataGrid width="100%" height="100%"   borderVisible="true"  autoLayout="true"  borderAlpha="0.2" verticalAlign="middle"   id="noticeTable" pagecount="20"  >				
							<component:mygridcolumns>
								<mx:DataGridColumn textAlign="center" headerText="范围"  width="60">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
												<mx:Label text="{getScope(data)}">
												</mx:Label>
												<mx:Script>
													<![CDATA[
														//提示信息														
														import mx.controls.Alert;
														import mx.core.UIComponent;
														private function getScope(data:Object):String{
															if(data.scope=='0')
																return "校级公告";
															else  if(data.scope=='1')
																return "部门公告";
															else return "异常";
														}
													]]>
												</mx:Script>
											</mx:HBox>																		
										</mx:Component>						
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="类型"  width="60">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
												<mx:Label text="{data.type}"></mx:Label>
											</mx:HBox>																		
										</mx:Component>						
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="公告标题" width="100" >
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off" >
												<mx1:Text text="{data.title}" width="100">
												</mx1:Text>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="发布时间" width="100" dataField="postTime" labelFunction="DateUtil.datagridFormatDateTime">
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="发布部门"  width="100" >
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle"  horizontalScrollPolicy="off">
												<mx1:Text text="{this.parentApplication.getDepartmentNameById(data.postDepartmentId)}" width="100">
												</mx1:Text>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="发布人" width="100" >
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle"  horizontalScrollPolicy="off">
												<mx1:Text text="{this.parentApplication.getTeacherNameByAccountId(data.posterId)}" width="100">
												</mx1:Text>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="阅读数" width="100" >
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle"  horizontalScrollPolicy="off">
												<mx1:Text text="{data.readNums}" width="100">
												</mx1:Text>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="操作" width="100">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalGap="0" horizontalScrollPolicy="off">
												<mx:LinkButton  label="[编辑]"   click="{this.outerDocument.enterEdit(data.id);}" enabled="{checkAuth(data)}">											
												</mx:LinkButton>
												<mx:LinkButton  label="[删除]"   click="{this.outerDocument.deleteNotice(data.id);}" enabled="{checkAuth(data)}">											
												</mx:LinkButton>
												<mx:Script>
													<![CDATA[
														//提示信息
														import cn.org.rapid_framework.flex_security.SecurityControler;
														import mx.controls.Alert;
														import mx.core.UIComponent;
														private function checkAuth(data:Object):Boolean{
															return true;
														}
													]]>
												</mx:Script>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								
								<mx:DataGridColumn textAlign="center" headerText="详细" width="60">
									<mx:itemRenderer>
										<mx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalGap="0" horizontalScrollPolicy="off">
												<mx:LinkButton  label="[详细]"  click="{this.outerDocument.detailNotice(data.id);}">											
												</mx:LinkButton>
											</mx:HBox>
										</mx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								
							</component:mygridcolumns>
						</component:WlzxPageDataGrid>
					</mx:HBox>
				</mx:TabNavigator>
			</mx:VBox>
		</mx:VBox>
		
		<mx:VBox width="100%" height="100%" id="addPanel">
			<mx:HBox verticalAlign="middle" horizontalAlign="right" width="100%" fontSize="12" id="returnArea">
				<mx:HBox width="100%" height="25" paddingLeft="20"  horizontalGap="10" styleName="ToolBar"   verticalAlign="middle">
					<mx:Label text="|"/>
					<mx:LinkButton  label="返回" icon="@Embed(source='../WebContent/resources/common/tools/button_back_icon.png')" click="this.currentState='list';" />
					<mx:Label text="|"/>
				</mx:HBox>
				
			</mx:HBox>
			<mx:VBox width="100%" height="100%"   horizontalGap="10" verticalAlign="middle" horizontalAlign="left" borderVisible="true" paddingTop="10" paddingBottom="10"   paddingLeft="10" paddingRight="10">
				<mx:VBox  width="100%" height="100%">
					<mx:Form width="100%" height="100%">
						<mx:FormItem label="标题" width="100%">
							<mx:TextInput width="100%" id="title"/>
						</mx:FormItem>
						<mx:FormItem label="公告类型" width="100%">
							<mx:HBox width="100%">
								<mx:ComboBox id="noticeType"  labelField="label"/>
								<mx:FormItem label="公告范围">
									<mx:ComboBox id="noticeScope"  labelField="label" change="noticeScope_changeHandler(event)"/>
								</mx:FormItem>
								<mx:FormItem label="发布部门">
									<mx:ComboBox id="postdepartment"  labelField="label" selectedIndex="-1"/>
								</mx:FormItem>
								<mx:FormItem>
									<mx:CheckBox label="紧急" id="emergence"/>
								</mx:FormItem>
							</mx:HBox>
						</mx:FormItem>
						
						<mx:FormItem label="内容" width="100%" height="100%">
							<!--<rtf:RtfEditor width="100%" height="100%" toolbar="{new DefaultToolbar()}" id="rte">
								
							</rtf:RtfEditor>-->
						<!--	<fck:FCKEditor width="100%" height="100%" id="rte" alpha="0">
							</fck:FCKEditor>-->
							<mx:RichTextEditor id="rte" title="Halo RichTextEditor"   headerHeight="0" width="100%" height="100%" dropShadowVisible="false" htmlText="" >
							</mx:RichTextEditor>
						</mx:FormItem>
					</mx:Form>
				</mx:VBox>
				<mx:VBox width="100%">
					<mx:HBox width="100%" height="20">
						<mx:LinkButton  label="附件区" icon="@Embed(source='../WebContent/resources/common/tools/button_attachment_icon.png')" click="showHide()"/>
					</mx:HBox>
					<mx:FormItem  width="100%"  height="0" id="att_area" paddingLeft="10" paddingRight="10">
						<mx:VBox width="100%">
							<mutiUpload:upload width="100%" id="upload">
							</mutiUpload:upload>
						</mx:VBox>
					</mx:FormItem>
				</mx:VBox>
				<mx:HBox horizontalAlign="right" width="100%">
					<mx:Label id="addUpdateFlag" visible="false" text="add"/>
					<mx:Button label="保存草稿" id="draftSaveButton" click="save_clickHandler(event)"/>
					<mx:Button label="发布" id="postButton" click="add_clickHandler(event)"/>
				</mx:HBox>
			</mx:VBox>
		</mx:VBox>
	</mx:VBox>
</mx:Module>
