<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   xmlns:hc="com.hillelcoren.components.*"
		   xmlns:mx1="library://ns.adobe.com/flex/mx"
		   xmlns:render="system.component.render.*" layout="vertical" width="100%" height="100%"   creationComplete="init();" xmlns:component="system.component.*" >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		
		<mx:RemoteObject id="allWaittingDealServiceRO" destination="allWaittingDealServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getAllWaittingDealTasksByCondition"  concurrency="last"  result="getAllWaittingDealTasksByCondition_result(event);" />
			<mx:method name="getAllHistoryTasksByCondition"  concurrency="last"  result="getAllHistoryTasksByCondition_result(event);" />
		</mx:RemoteObject>
		<mx:RemoteObject id="taskServiceRO" destination="taskServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="finishTask"  concurrency="last"  result="finishTaskResult_resultHandler(event);" />
			
		</mx:RemoteObject>
	</fx:Declarations>
	
	<fx:Script> 
		<![CDATA[  
			import mx.collections.ArrayCollection;
			import mx.controls.*;
			import mx.events.*;
			import mx.managers.PopUpManager;
			import mx.rpc.events.*;
			
			import system.entity.DepartmentModel;
			import system.entity.UserModel;
			import system.index;
			import system.utils.CommonUtils;
			import basic.utils.DateUtil;
			import system.component.WlzxLockWin;
			public var taskStateList:ArrayCollection = new ArrayCollection( 
				[	{label:"全部", data:null},  
					{label:"进行中", data:"0"},  
					{label:"已完成", data:"1"}]); 
			private function init():void {
				var parms:String=((Object)(this.owner)).id;
				if(parms!=null&&parms!=''&&parms!='null'){
					var accountId:String=parms.split(";")[0];
					var beginDate:String=parms.split(";")[1];
					var endDate:String=parms.split(";")[2];
					search_account_id.text=accountId;
					search_account_name.text=this.parentApplication.getTeacherNameByAccountId(search_account_id.text)+"的工作";
					search_date_begin.text=beginDate;
					search_date_end.text=endDate;
				}else{
					
					search_account_id.text=this.parentApplication.currentUser.id;
					//Alert.show(search_account_id.text);
					search_account_name.text=this.parentApplication.getTeacherNameByAccountId(search_account_id.text)+"的工作";
					var date:Date=new Date();
					search_date_begin.text=CommonUtils.formatDate(CommonUtils.currentMonthBeginDate(),"YYYY-MM-DD");
					search_date_end.text=CommonUtils.formatDate(CommonUtils.currentMonthEndDate(),"YYYY-MM-DD");
				}
				
				callLater(search);
			}
			
			
			
			
			
			private function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
				unLockWin();
			}
			import mx.collections.Sort;
			import mx.collections.SortField;
			protected function getAllWaittingDealTasksByCondition_result(event:ResultEvent):void
			{
				
				var list:ArrayCollection=event.result as ArrayCollection;
				var sort:Sort=new Sort();  
				//按照sequence升序排序  
				sort.fields=[new SortField("postTime")];  
				list.sort=sort;
				list.refresh();//更新  
				taskTable.initdata(list);
				unLockWin();
				
			}
			protected function getAllHistoryTasksByCondition_result(event:ResultEvent):void
			{
				
				var list:ArrayCollection=event.result as ArrayCollection;
				var sort:Sort=new Sort();  
				//按照sequence升序排序  
				sort.fields=[new SortField("postTime")];  
				list.sort=sort;
				list.refresh();//更新  
				historyTaskTable.initdata(list);
				unLockWin();
				
			}
			
			protected function finishTaskResult_resultHandler(event:ResultEvent):void
			{
				//Alert.show("更新成功");
				//this.currentState='list';
				search();
			}
			
			protected function search():void
			{
				lockWin();
				var accountId:String=this.parentApplication.currentUser.id;
				var beginTime:String=search_date_begin.text;
				var endTime:String=search_date_end.text;
				var status:String=null;
				allWaittingDealServiceRO.getAllWaittingDealTasksByCondition(accountId,beginTime,endTime);
				allWaittingDealServiceRO.getAllHistoryTasksByCondition(accountId,beginTime,endTime);
			}
			public function formatDate(date:Date):String{
				return CommonUtils.formatDate(date);
				
			}
			
			private var window:WlzxLockWin=null;
			private function lockWin():void{
				
				window=WlzxLockWin(PopUpManager.createPopUp(this,WlzxLockWin,true)); 
				PopUpManager.centerPopUp(window);
				window.percentHeight=100;
				window.percentWidth=100;			
				
			}
			private function unLockWin():void{
				if(window!=null)
					PopUpManager.removePopUp(window);
			}
			public  function timeTip(times:String):String
			{
				
				var result:String="";
				var times_attr:Array=times.split(";");
				for(var i:int=0;i<times_attr.length;i++){
					
					var time:String=times_attr[i];
					if(time!=null&&time!=""){
						var time_attr:Array=time.split(" ");
						result=result.concat(time_attr[0]+" ");
						var sections:String=time_attr[1];
						if(sections.split("-")[0]=="1"){
							result=result.concat("早上 ");
						}
						if(sections.split("-")[1]=="1"){
							result=result.concat("下午 ");
						}
						if(sections.split("-")[2]=="1"){
							result=result.concat("晚上 ");
						}
						result=result.concat("   ");
						
					}
				}
				return result;			
				
			}
			public 	 function getWorkers(data:Object, column:DataGridColumn):String{
				if(data!=null){
					var result1:String="";
					var ids:String=data.workersIds;
					//Alert.show(ids);
					if(ids!=null&&ids!=""){
						var attr:Array=ids.split(";");
						for(var i:int=0;i<attr.length;i++){
							[Binary]var temp:String=attr[i] as String;
							
							if(temp==null||temp=="")continue;
							var name:String=this.parentApplication.getTeacherNameByAccountId(temp);
//							if(data.title=="a"){
//								Alert.show(name);
//								Alert.show(temp);
//							}
							result1=result1.concat(name+"  ");
							
						}
						return result1;
					}else return null;
					//Alert.show(result);
					
				}else return null;
			}
			public 	 function getAssigner(data:Object, column:DataGridColumn):String{
				var result2:String="";
				var id:String=data.assignerId;
				if(id=="-1")return "系统";
				//Alert.show(ids);
				if(id!=null&&id!=""){
					result2+=this.parentApplication.getTeacherNameByAccountId(id);
				}
				//Alert.show(result);
				return result2;
			}
			public function enterEdit(id:String,typeId:String):void{
					//	Alert.show(type);
				var parent:Object=(Object)(((Object)(this.owner)).owner);
				if(typeId=="1"){
					Alert.show("确定已完成该指派任务?","确认",Alert.YES | Alert.NO,null,function(event:CloseEvent):void{
						if(event.detail == Alert.YES)
						{
							taskServiceRO.finishTask(id,parentApplication.currentUser.id);
						}
					});
				}else if(typeId=="2"){
					parent.addTab("adjustApprove-detail"+"_"+id,"调课处理",parent.nav,"oa/course/adjust/adjustApprove.swf",null,id);
				}else if(typeId=="16"){
					parent.addTab("adjustApprove-detail"+"_"+id,"调课安排",parent.nav,"oa/course/adjust/adjustApprove.swf",null,id);
				}else if(typeId>="3"&&typeId<="6"){
					parent.addTab("takeLeaveApprove-leave-detail"+"_"+id,"请假处理",parent.nav,"oa/attendance/takeLeaveApprove.swf",null,id+";"+"Leave");
					
				}else if(typeId>="7"&&typeId<="10"){
					parent.addTab("takeLeaveApprove-bussiness-detail"+"_"+id,"出差处理",parent.nav,"oa/attendance/takeLeaveApprove.swf",null,id+";"+"Leave");
					
				}else if(typeId>="11"&&typeId<="11"){
					parent.addTab("takeLeaveApprove-terminate"+"_"+id,"销假处理",parent.nav,"oa/attendance/takeLeaveApprove.swf",null,id+";"+"Terminate");
					
				}else if(typeId>="12"&&typeId<="12"){
					parent.addTab("overWorkApprove-detail"+"_"+id,"加班处理",parent.nav,"oa/attendance/overWorkApprove.swf",null,id);
					
				}else if(typeId>="13"&&typeId<="14"){
					parent.addTab("moveRestDayApprove-detail"+"_"+id,"调休处理",parent.nav,"oa/attendance/moveRestDayApprove.swf",null,id);
					
				}else if(typeId>="15"&&typeId<="15"){
					parent.addTab("conferenceArrange-detail"+"_"+id,"会议室落实",parent.nav,"oa/conference/conferenceArrange.swf",null,id);
					
				}
			}
		]]> 		
	</fx:Script> 
	<mx:VBox borderVisible="true" width="100%" height="100%" borderStyle="solid" verticalGap="10">
		<mx:VBox width="100%"  height="100%"   verticalGap="0" verticalAlign="middle" horizontalAlign="left" borderVisible="true" paddingTop="10" paddingBottom="10"   paddingLeft="10" paddingRight="10">
			<mx:VBox width="100%" horizontalAlign="center" verticalGap="5">
				<mx:HBox width="100%" horizontalAlign="center">
					<mx:Label  text=""    width="100%"  letterSpacing="5" textAlign="center" fontSize="14"  fontWeight="bold" height="30"  id="search_account_name"/>
					<mx:Label id="search_account_id" visible="false" width="0"/>
				</mx:HBox>
				
				<!--************  搜索面板 ************-->
				<mx:VBox height="60" width="100%" >
					<component:Fieldset title="搜索条件" width="95%" height="95%" >
						<mx:HBox width="100%" horizontalAlign="left" horizontalGap="10">
							<mx:Label  text="时间区间"  width="100"  textAlign="right"/>
							<mx:DateField yearNavigationEnabled="true" id="search_date_begin"   formatString="YYYY-MM-DD"  editable="false" width="120"/>
							<mx:Label  text="--"  width="20" textAlign="center"/>
							<mx:DateField yearNavigationEnabled="true" id="search_date_end"  formatString="YYYY-MM-DD" editable="false" width="120"/>
							<mx:Button  label="搜索"  width="100"   click="search()"/>
						</mx:HBox>
					</component:Fieldset>
				</mx:VBox>
		
			</mx:VBox>

		<mx:Spacer height="10"/>
			<!-- ************ 待办工作面板 **************-->
		<component:Fieldset title="待办工作列表" width="95%" height="50%" >
			
			<mx:Panel width="100%" height="100%"  styleName="customPanel" title="待办工作"  cornerRadius="5" borderVisible="false" dropShadowVisible="false" verticalScrollPolicy="auto" >

			<component:WlzxPageDataGrid width="100%" height="100%"   autoLayout="true"  borderAlpha="0.2" verticalAlign="middle"   id="taskTable" pagecount="10"  >				
				<component:mygridcolumns>				
					<mx:DataGridColumn textAlign="center" headerText="任务类型" width="70">
						<mx:itemRenderer>
							<fx:Component>
								<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
									<mx1:Text text="{data.type}" width="100">
									</mx1:Text>
								</mx:HBox>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn textAlign="center" headerText="任务主题" width="300">
						<mx:itemRenderer>
							<fx:Component>
								<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
									<mx1:Text text="{data.title}" width="100%">
									</mx1:Text>
								</mx:HBox>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					
					<mx:DataGridColumn textAlign="center" headerText="发布时间" width="100" dataField="postTime">
					</mx:DataGridColumn>
					<mx:DataGridColumn textAlign="center" headerText="责任人" width="100" dataField="workersIds" labelFunction="getWorkers">
						
					</mx:DataGridColumn>
					<mx:DataGridColumn textAlign="center" headerText="指派人" width="60" dataField="assignerId" labelFunction="getAssigner">
						
					</mx:DataGridColumn>
					<mx:DataGridColumn textAlign="center" headerText="操作" width="60">
						<mx:itemRenderer>
							<fx:Component>
								<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalGap="0">
									<mx:LinkButton  label="{data.typeId!=1?'[处理]':'[完成]'}"   click="{this.outerDocument.enterEdit(data.id,data.typeId);}" enabled="{checkAuth(data)}">											
									</mx:LinkButton>
									
									<fx:Script>
										<![CDATA[
										//提示信息
										import cn.org.rapid_framework.flex_security.SecurityControler;
										
										import mx.controls.Alert;
										import mx.core.UIComponent;
										private function checkAuth(data:Object):Boolean{
											if(data.status!=1)
												return true;
											else return false;
										}
										]]>
									</fx:Script>
								</mx:HBox>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					
				</component:mygridcolumns>
			</component:WlzxPageDataGrid>
			</mx:Panel>	
			
		</component:Fieldset>
			
			<mx:Spacer height="10"/>
			<!-- ************ 历史工作面板 **************-->
		<component:Fieldset title="历史工作列表" width="95%" height="50%" >
			
			<mx:Panel width="100%"  height="100%"  styleName="customPanel" title="历史工作"  cornerRadius="5" borderVisible="false" dropShadowVisible="false" verticalScrollPolicy="auto">
				
				<component:WlzxPageDataGrid width="100%" height="100%"    autoLayout="true"  borderAlpha="0.2" verticalAlign="middle"   id="historyTaskTable" pagecount="5"  >				
					<component:mygridcolumns>						
						<mx:DataGridColumn textAlign="center" headerText="任务类型" width="80">
							<mx:itemRenderer>
								<fx:Component>
									<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
										<mx1:Text text="{data.type}" width="100">
										</mx1:Text>
									</mx:HBox>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn textAlign="center" headerText="任务主题" width="300">
							<mx:itemRenderer>
								<fx:Component>
									<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
										<mx1:Text text="{data.title}" width="100%">
										</mx1:Text>
									</mx:HBox>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						
						<mx:DataGridColumn textAlign="center" headerText="发布时间" width="100" dataField="postTime">
						</mx:DataGridColumn>
						<mx:DataGridColumn textAlign="center" headerText="责任人" width="100" dataField="workersIds" labelFunction="getWorkers">
							
						</mx:DataGridColumn>
						<mx:DataGridColumn textAlign="center" headerText="指派人" width="60" dataField="assignerId" labelFunction="getAssigner">
							
						</mx:DataGridColumn>
						
						<mx:DataGridColumn textAlign="center" headerText="状态" width="60"  dataField="status">
							
						</mx:DataGridColumn>
						
						
					</component:mygridcolumns>
				</component:WlzxPageDataGrid>
				
			</mx:Panel>	
		</component:Fieldset >

		</mx:VBox>
		
	</mx:VBox>
</mx:Module>
