<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"  xmlns:valueObjects="system.entity.*" xmlns:flexlib="http://code.google.com/p/flexlib/"   creationComplete="init();" width="600" height="500">
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:StringValidator id="name_stringValidator" source="{title}" property="text"  requiredFieldError="任务标题名称不能为空"/>
		<mx:StringValidator id="beginDate_dateValidator"  source="{beginDate}" property="text" requiredFieldError="任务开始日期不能为空"/>
		<mx:StringValidator id="endDate_dateValidator"  source="{endDate}" property="text" requiredFieldError="任务开始日期不能为空"/>
		<mx:StringValidator id="workers_numberValidator" source="{workers}" property="text"  requiredFieldError="需指定任务实施人"/>
		<mx:StringValidator id="assigner_numberValidator" source="{assigner}" property="text"  requiredFieldError="需指定任务指派人"/>

	</fx:Declarations>
	
	<fx:Script> 
		
		<![CDATA[  
			import mx.managers.PopUpManager;
			import mx.core.FlexGlobals;
			import mx.controls.Alert;
			import mx.events.ValidationResultEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.*;
			import mx.validators.Validator;
			import mx.validators.ZipCodeValidatorDomainType;
			import oa.common.popWin.StaffSelectPopWin;
			import system.utils.*;
			private var validatorArr:Array;
			
			private function init():void
			{
				
				validatorArr = new Array();
				validatorArr.push(name_stringValidator);
				validatorArr.push(beginDate_dateValidator);
				validatorArr.push(endDate_dateValidator);
				validatorArr.push(workers_numberValidator);
				validatorArr.push(assigner_numberValidator);
				callLater(initTaskWin);
				
			} 
			private function initTaskWin():void{
				if(this.toolTip=='Update'){		
					this.taskWin.title="任务编辑";
//					var menuSymbol:String=this.name;//弹出窗口时设定的中转参数
//					systemServiceRO.getMenuBySymbol(menuSymbol);
				}else if(this.toolTip=='AddPersonTask'||this.toolTip=='AddStaffTask'){
//					menu=new MenuModel();
					this.taskWin.title="任务新增";
					if(this.toolTip=='AddPersonTask'){
						this.workersArea.height=0;
						this.workersArea.visible=false;
						this.assignerArea.height=0;
						this.assignerArea.visible=false;
						validatorArr.pop();
						validatorArr.pop();

					}
				}
			}
			private function validateForm(evt:MouseEvent):void {
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);;
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
//					menu.name=menuName.text;
//					menu.creationDate=DateFormatter.parseDateString(creationDate.text);
//					menu.detail=detail.text;
//					menu.symbol=symbol.text;
//					menu.sequence=parseInt(sequence.text);
//					menu.menuIcon=menuIcon.text;
					if(this.toolTip=='Update'){
//						systemServiceRO.menuUpdate(menu);
					}else if(this.toolTip=='Add'){
//						var parentType:String=this.id;//弹出窗口时设定的中转参数
//						var parentSymbol:String=this.name;//弹出窗口时设定的中转参数
//						systemServiceRO.menuAdd(menu,parentType,parentSymbol);
						
					}
					
				} else {
					var err:ValidationResultEvent;
					var errorMessageArray:Array = [];
					for each (err in validatorErrorArray) {
						var errField:String = FormItem(err.currentTarget.source.parent).label
						errorMessageArray.push(errField + ": " + err.message);
					}
					Alert.show(errorMessageArray.join("\n\n"), "请按照以下错误提示信息重新填写", Alert.OK);
				}
			}
//			protected function menuAddResult_resultHandler(event:ResultEvent):void
//			{
//				var menu:MenuModel=event.result as MenuModel;
//				if(menu!=null){
//					var menuData:XML=new XML("<node type='menu' label='"+menu.name+"[菜单]'  symbol='"+menu.symbol+"' id='"+menu.id+"'></node>");
//					this.parentApplication.selectedNode.appendChild(menuData);
//					PopUpManager.removePopUp(this);
//				}else{
//					Alert.show("添加失败");
//				}
//			}
//			protected function getMenuBySymbol_resultHandler(event:ResultEvent):void
//			{
//				menu=event.result as MenuModel;
//				menuName.text=menu.name;
//				creationDate.text=CommonUtils.formatDate(menu.creationDate,"YYYY-MM-DD");
//				detail.text=menu.detail;
//				symbol.text=menu.symbol;
//				sequence.text=menu.sequence.toString();
//				menuIcon.text=menu.menuIcon;
//			}
//			protected function menuUpdate_resultHandler(event:ResultEvent):void
//			{
//				var menu:MenuModel=event.result as MenuModel;
//				if(menu!=null){
//					this.parentApplication.selectedNode.@label=menu.name+"[菜单]";
//					this.parentApplication.selectedNode.@symbol=menu.symbol;
//					this.parentApplication.selectedNode.@id=menu.id;
//					PopUpManager.removePopUp(this);
//				}else{
//					Alert.show("更新失败");
//				}
//			}
			
			protected function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
			private function resetForm(evt:MouseEvent):void{
				if(this.toolTip=='Update'){		
//					menuName.text=menu.name;
//					creationDate.text=CommonUtils.formatDate(menu.creationDate,"YYYY-MM-DD");
//					detail.text=menu.detail;
//					symbol.text=menu.symbol;
//					sequence.text=menu.sequence.toString();
//					menuIcon.text=menu.menuIcon;
				}else if(this.toolTip=='Add'){
					title.text="";
					beginDate.text="";
					endDate.text="";
					detail.text="";
					type.text="";
					priority.text="";
					assigner.text="";	
					workers.text="";	
					
				}
			} 
			private function openStaffSelectPopWin(event:Event):void{
				var staffSelectPopWin:StaffSelectPopWin=StaffSelectPopWin(PopUpManager.createPopUp(this,StaffSelectPopWin,true));  
				PopUpManager.centerPopUp(staffSelectPopWin);
				staffSelectPopWin.percentHeight=100;
				staffSelectPopWin.percentWidth=100;
				staffSelectPopWin.x=FlexGlobals.topLevelApplication.stage.stageWidth/2-staffSelectPopWin.width/2;
				staffSelectPopWin.y=FlexGlobals.topLevelApplication.stage.stageHeight/2-staffSelectPopWin.height/2;
				
			}
			
		]]> 
		
	</fx:Script> 
	<s:TitleWindow  id="taskWin" width="100%" height="100%"  close="PopUpManager.removePopUp(this);this.parentApplication.menuPopWin=null;" skinClass="system.skins.WlzxTitleWindowSkin">
		
			<s:VGroup width="100%" height="100%">
					<s:VGroup width="100%" height="100%">
						<mx:Form width="100%" height="100%" id="dform">
							<mx:FormHeading label="任务信息" fontSize="15" width="100%" textAlign="center"/>
							
							<mx:FormItem label="主题" required="true">
								<mx:TextInput id="title" width="200"/>
							</mx:FormItem>
							
							<mx:FormItem label="责任人 " required="true" id="workersArea">
								<s:TextInput   editable="false" id="workers" width="200"  focusIn="openStaffSelectPopWin(event);"   />
							</mx:FormItem>
							
							<mx:FormItem label="起始日期" required="true">
								<mx:DateField id="beginDate" width="200"  formatString="YYYY-MM-DD"/>
							</mx:FormItem>	
							<mx:FormItem label="截止日期" required="true">
								<mx:DateField id="endDate" width="200"  formatString="YYYY-MM-DD"/>
							</mx:FormItem>
							
							<mx:FormItem label="类别"  required="true">
								<mx:ComboBox id="type" width="200"/>
							</mx:FormItem>
							<mx:FormItem label="优先级"  required="true">
								<mx:ComboBox id="priority" width="200"/>
							</mx:FormItem>
							<mx:FormItem label="详细">
								<s:TextArea id="detail" width="400" height="150"/>
							</mx:FormItem>
							<mx:FormItem label="指派人" required="true" id="assignerArea">
								<s:TextInput  editable="false" id="assigner" width="200"   focusIn="openStaffSelectPopWin(event);"  />
							</mx:FormItem>
						</mx:Form>

					</s:VGroup>
					
				<mx:HBox verticalAlign="middle" horizontalAlign="right" width="100%" height="30" paddingRight="20">
					<mx:Button label="指派" click="validateForm(event)"  styleName="customButton" width="60"/>
					<mx:Button label="重置" click="resetForm(event);" styleName="customButton" width="60"/>
				</mx:HBox>
			</s:VGroup>
		
			
		
	</s:TitleWindow>
	
</s:VGroup>
