<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical"  verticalGap="0" creationComplete="init();" width="100%" pageTitle="基础数据系统主页" height="100%"   xmlns:flexlib="http://code.google.com/p/flexlib/"  xmlns:viewers="flexlib.scheduling.scheduleClasses.viewers.*" xmlns:sliderClasses="flexlib.controls.sliderClasses.*" xmlns:baseClasses="flexlib.baseClasses.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<!--定义 RemoteObject 组件-->
		<mx:RemoteObject id="systemServiceRO" destination="systemServiceDest" showBusyCursor="true" result="systemResultHandler(event);" fault="systemFaultHandler(event);"/>
	</fx:Declarations>
	<fx:Style>
		.customAccordionHeadStyles {
			skin: ClassReference("system.skins.WlzxAccordionHeaderSkin");
		}
		.customTabStyles {
			skin: ClassReference("system.skins.WlzxTabSkin");
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import flexlib.controls.IconLoader;
			import flexlib.controls.SuperTabBar;
			import flexlib.controls.iconLoaderClasses.IconParserFactory;
			import flexlib.controls.tabBarClasses.SuperTab;
			import flexlib.events.TabReorderEvent;
			
			import mx.collections.ArrayCollection;
			import mx.containers.*;
			import mx.controls.*;
			import mx.core.IVisualElement;
			import mx.events.*;
			import mx.events.ModuleEvent;
			import mx.modules.*;
			import mx.modules.IModuleInfo;
			import mx.modules.ModuleManager;
			import mx.rpc.events.*;
			
			import spark.components.*;
			
			import system.entity.*;
			import system.utils.CommonUtils;  
			private var _moduleInfo:IModuleInfo;
			
			private function init():void {
				systemServiceRO.getSystemBySymbol("oa");
				initHomeTab();
//				Alert.show(this.parentApplication.account);
				account.text=account.text.concat(this.parentApplication.account);
				roles.text=roles.text.concat(this.parentApplication.roles);
				lastLoginTime.text=lastLoginTime.text.concat(this.parentApplication.lastLoginTime);
				var timer:Timer = new Timer(1000);			
				timer.addEventListener(TimerEvent.TIMER, updateCurrentTime);				
				timer.start();
//				currentTime.text=currentTime.text.concat(this.parentApplication.lastLoginTime);
			}
			private function updateCurrentTime(event:TimerEvent):void{
				currentTime.text=CommonUtils.formatDate(new Date());
			}
			private function systemResultHandler(event:ResultEvent):void {
				var rootSystem:SystemModel =SystemModel(event.result);
				var menuList:ArrayCollection = ArrayCollection(rootSystem.menus);
				CommonUtils.sortBySequence(menuList);
//				trace(menuList.toString()+"");
//				Alert.show();
				menus.historyManagementEnabled = true;
				makeAccordion(menuList);
			}
			
			private function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
			[Embed(source="../WebContent/resources/oa/menuIcon/oa_inside_affair.png")]
			private const oa_inside_affair:Class;
			[Embed(source="../WebContent/resources/oa/menuIcon/oa_official_document.png")]
			private const oa_official_document:Class;
			[Embed(source="../WebContent/resources/oa/menuIcon/oa_public_affair.png")]
			private const oa_public_affair:Class;
			[Embed(source="../WebContent/resources/oa/menuIcon/oa_school_affair.png")]
			private const oa_school_affair:Class;
			[Embed(source="../WebContent/resources/oa/menuIcon/oa_system_management.png")]
			private const oa_system_management:Class;
			

			private function makeAccordion(menuList:ArrayCollection):void{
				var nc:NavigatorContent =null;
				var tree:Tree =null;
				for (var i:int = 0; i < menuList.length; i++){	
					var _menu:MenuModel = MenuModel(menuList.getItemAt(i));						
					nc = new NavigatorContent();
					nc.percentHeight=100;
					nc.percentWidth=100;
					nc.setStyle("borderVisible",false);
					nc.setStyle("font-size","20");
					nc.label=_menu.name;
					//bad code
					if(_menu.menuIcon=='oa_system_management')nc.icon=oa_system_management;
					else if(_menu.menuIcon=='oa_school_affair')nc.icon=oa_school_affair;
					else if(_menu.menuIcon=='oa_inside_affair')nc.icon=oa_inside_affair;
					else if(_menu.menuIcon=='oa_public_affair')nc.icon=oa_public_affair;
					else if(_menu.menuIcon=='oa_official_document')nc.icon=oa_official_document;
					if(ArrayCollection(_menu.children).length>0){
						var resultXML:String=buildSubMenus(_menu);
						var menuData:XML=new XML(resultXML);
						tree=new Tree();
						tree.setStyle("borderVisible",false);
						tree.percentWidth=100;
						tree.percentHeight=100;
						tree.showRoot=false;
						tree.labelField="@label";
						tree.setStyle("textAlign","left");
						tree.setStyle("paddingLeft","10");
						tree.dataProvider=menuData;
						tree.addEventListener(ListEvent.ITEM_CLICK,clickLeafMenuItem);
						nc.addElement(tree);
					}
					menus.addChild(nc as DisplayObject);
				}
								
			}
			public function clickLeafMenuItem(event:Event):void{ 
				var selectedNode:XML=Tree(event.target).selectedItem as XML; 
				if(selectedNode.children().length()==0)
					addTab(selectedNode.@label,nav,selectedNode.@url,null);
				//Alert.show(selectedNode.@label);
			} 
			private function buildSubMenus(menu:MenuModel):String{
				var resultXML:String="";
				var menuList:ArrayCollection = ArrayCollection(menu.children);
				CommonUtils.sortBySequence(menuList);
				if(menuList.length>0){
					resultXML=resultXML.concat("<node label='"+menu.name+"'>");
					for (var i:int = 0; i < menuList.length; i++){
						var _menu:MenuModel = MenuModel(menuList.getItemAt(i));	
						resultXML=resultXML.concat(buildSubMenus(_menu));
					}
					resultXML=resultXML.concat("</node>");
				}		
				else resultXML=resultXML.concat("<node label='"+menu.name+"' url='"+menu.getUrl()+"'/>");				
				
				return resultXML;
			}
			private var homeTabTitle:String="主页";
			private function showHideLeftbody_handler(event:MouseEvent):void{
				if(menus.visible){
					menus.width=0;
				}else{
					menus.width=220;
				}
				menus.visible=!menus.visible;
			}
			
			
			[Embed(source="../WebContent/resources/common/icon/Home.png")]
			private var home_icon:Class;
			private function initHomeTab():void {	
				addTab(homeTabTitle, nav, "com/wl/home/blank.swf", home_icon);
				
			}
			
			private function addTab(title:String, navigator:SuperTabNavigator, moduleUrl:String=null, icon:Class=null):void {
				for(var i:int=0;i<navigator.getChildren().length;i++){
					// 将对象转换为一个泛型
					var obj:* = navigator.getChildAt(i);
					if(obj.label == title){
						navigator.selectedIndex = i;
						return;
					}
				}
				
				var curNum:Number = nav.numChildren + 1;			
				var child:ModuleLoader = new ModuleLoader();				
				child.setStyle("closable", true);
				child.percentHeight=100;
				child.percentWidth=100;
				child.label = title;
				child.name = title;				
				child.icon = icon;	
				child.url = moduleUrl+"?uid=" + new Date().getTime();

				callLater(child.loadModule);
				
				child.addEventListener( ModuleEvent.READY,function(event:ModuleEvent):void{
					child.removeAllChildren();
				}); 
				child.addEventListener( ModuleEvent.ERROR,function(e:ModuleEvent):void{
					child.removeAllChildren();
					Alert.show("模块加载错误，请检查网络或联系系统管理员");
				}); 
				var bar:ProgressBar=new ProgressBar();
				bar.minimum=0;
				bar.visible=true;
				bar.maximum=100;
				bar.percentWidth=100;
				bar.direction=ProgressBarDirection.RIGHT;
				
				bar.labelPlacement="bottom"
				child.addEventListener( ModuleEvent.PROGRESS,function(e:ModuleEvent):void{
					if(!child.contains(bar))child.addChild(bar);
					bar.mode=ProgressBarMode.POLLED;
					
					bar.label = "当前加载进度："+Math.round(e.bytesLoaded * 100 / e.bytesTotal) + "%";
//					Alert.show(bar.label);
					bar.setProgress(e.bytesLoaded,e.bytesTotal);				
				});
			
				navigator.addChild(child as DisplayObject);
				navigator.selectedIndex = navigator.getChildIndex(child);
				navigator.setClosePolicyForTab(0, SuperTab.CLOSE_NEVER);
			}


			
//			protected function onModuleProgress (e:ModuleEvent) : void {    
//				ProgressBashow("[MyFlexHero]:ModuleEvent.PROGRESS 当前已经加载了: " + e.bytesLoaded + " of " + e.bytesTotal + " loaded.");   
//			} 
			
			
			private function homeTab():void{
				// TODO Auto-generated method stub
				initHomeTab();
				nav.selectedIndex = 0;
			}
			private function exitSystem():void{
				// TODO Auto-generated method stub
				Alert.show("你确定要退出系统吗?","确认",Alert.YES|Alert.NO,null,this.parentApplication.logoutRequest.send());
			}
			
		]]>
	</fx:Script>
	
	
	
	
	
	
	
	<s:BorderContainer width="100%" height="80"  borderColor="#6DA752" backgroundImage="@Embed(source='../WebContent/resources/oa/layout/head.jpg')">
		<s:layout>
			<s:HorizontalLayout  verticalAlign="top" horizontalAlign="right"/>
		</s:layout>
		<s:HGroup  width="15%"  height="100%" verticalAlign="top"  paddingTop="15">
			<s:HGroup  paddingLeft="-2">
				<mx:Image source="@Embed(source='../WebContent/resources/oa/buttonIcon/home_icon.png')"  alpha="0.5" id="home_button" mouseOver="home_button.alpha=1;"   mouseOut="home_button.alpha=0.5;"></mx:Image>
			</s:HGroup>
			<s:HGroup  paddingLeft="20">
				<mx:Image source="@Embed(source='../WebContent/resources/oa/buttonIcon/help_icon.png')"  alpha="0.5" id="help_button" mouseOver="help_button.alpha=1;"   mouseOut="help_button.alpha=0.5;"></mx:Image>
			</s:HGroup>
			<s:HGroup  paddingLeft="40">
				<mx:Image source="@Embed(source='../WebContent/resources/oa/buttonIcon/exit_icon.png')"  alpha="0.5" id="exit_button" mouseOver="exit_button.alpha=1;"   mouseOut="exit_button.alpha=0.5;"></mx:Image>
			</s:HGroup>
		</s:HGroup>
	
		<s:VGroup width="35%" height="100%" verticalAlign="middle">
			<s:HGroup width="35%">
				<s:Label id="account" text="当前用户："/>
				<s:Label id="roles" text="用户角色："/>
			</s:HGroup>
			<s:HGroup width="35%">
				<s:Label id="lastLoginTime" text="上次登录："/>
				<s:Label text="当前时间："/>
				<s:Label id="currentTime" text=""/>
			</s:HGroup>
		</s:VGroup>
		

		
		
	</s:BorderContainer>
	<s:BorderContainer height="5" width="100%" backgroundColor="#A6C17A"  borderVisible="false"></s:BorderContainer>
	<s:BorderContainer width="100%" height="100%" backgroundColor="#A6C17A"  borderVisible="false">
		<s:layout>
			<s:HorizontalLayout verticalAlign="middle" gap="0"/>
		</s:layout>
		
		<mx:Accordion   headerStyleName="customAccordionHeadStyles" width="220"  top="15" height="100%"  selectedIndex="-1" id="menus" dropShadowVisible="false" backgroundAlpha="0.0" headerHeight="35" fontSize="15" textAlign="center">
			
		</mx:Accordion>
		
		<flexlib:DockableToolBar x="215" y="65" height="100%" paddingTop="200" dropShadowVisible="false" borderVisible="false"  doubleClickEnabled="true" doubleClick="showHideLeftbody_handler(event)" toolTip="隐藏/展开左区域菜单"></flexlib:DockableToolBar>
		<flexlib:SuperTabNavigator id="nav"  tabStyleName="customTabStyles" horizontalGap="1" borderVisible="false" paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" closePolicy="SuperTab.CLOSE_ROLLOVER|SuperTab.CLOSE_ALWAYS|SuperTab.CLOSE_SELECTED|SuperTab.CLOSE_NEVER" width="100%" height="100%" tabWidth="120"   allowTabSqueezing="false"  dragEnabled="false">
			
			
		</flexlib:SuperTabNavigator>
	</s:BorderContainer>
	
	<s:BorderContainer width="100%" height="30" backgroundColor="#A6C17A" borderVisible="false">
		<s:layout>
			<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"/>
		</s:layout>
		<s:Label text="浙江省温岭中学办公自动化系统  CopyRight：2011-2012     "/>
		<s:Label text="杭州池墨科技有限公司"/>
	</s:BorderContainer>
</mx:Module>
