<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:hc="com.hillelcoren.components.*"
		   xmlns:render="system.component.render.*"
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" width="100%" height="100%"   creationComplete="init();" xmlns:component="system.component.*" >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:RemoteObject id="systemServiceRO" destination="systemServiceDest" showBusyCursor="true" fault="systemFaultHandler(event);">
			<mx:method name="getUsersByCondition"  concurrency="last"  result="getUsersByCondition_resultHandler(event);" />
			<mx:method name="activeUser"  concurrency="last"  result="activeUser_resultHandler(event);" />
			<mx:method name="freezeUser"  concurrency="last"  result="freezeUser_resultHandler(event);" />
			<mx:method name="resetUserPW"  concurrency="last"  result="resetUserPW_resultHandler(event);" />
		</mx:RemoteObject>
		<fx:Component id="searchAccountDropDownItemRenderer">
			<render:AdvancedItemRenderer selectedItems="{ outerDocument.search_account.selectedItems }" />
		</fx:Component>
	</fx:Declarations>
	
	
	<fx:Script> 
		<![CDATA[  
			import mx.collections.ArrayCollection;
			import mx.controls.*;
			import mx.events.*;
			import mx.managers.PopUpManager;
			import mx.rpc.events.*;
			
			import system.entity.DepartmentModel;
			import system.entity.UserModel;
			import system.index;
			import system.utils.CommonUtils;
			import system.component.lockWin.LockWinTool;
			[Bindable] 
			public var status:ArrayCollection = new ArrayCollection( 
				[ {label:"全部", data:null},  
					{label:"激活", data:true},  
					{label:"冻结", data:false} ]); 
			public var selectedAccount:String=null;
			public var accounts:ArrayCollection = new ArrayCollection();
			private function init():void {	
//				accounts.addItem("");
//				systemServiceRO.getAllUsers();
				search_account.dataProvider=this.parentApplication.allTeacherAcccounts;
				search();
			}
//			protected function getAllUsers_resultHandler(event:ResultEvent):void{
//				var users:ArrayCollection=event.result as ArrayCollection;
//				for(var i:int=0;i<users.length;i++){
//					accounts.addItem({name:users.getItemAt(i).name,account:users.getItemAt(i).name,id:users.getItemAt(i)});
//				}
//				search_account.dataProvider=accounts;
//			}
			private function systemFaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, 'Error');
			}
			private function activeUser_resultHandler(event:ResultEvent):void {
				search();
			}
			private function freezeUser_resultHandler(event:ResultEvent):void {
				search();
			}
			private function resetUserPW_resultHandler(event:ResultEvent):void {
				Alert.show("密码重置成功");
			}
			protected function getUsersByCondition_resultHandler(event:ResultEvent):void{
				LockWinTool.unLockCurrentWin();
				var result:Object=event.result as Object;
				var list:Object=new Object;
				list.data=(result==null?new ArrayCollection():result.items);
				list.totalLength=(result==null?0:result.totalCount);
				if(result!=null){
					pc.AppandData(list);
					
				}else{
					table.dataProvider=null;
				}
			}
			public function formatDate(date:Date):String{
				return CommonUtils.formatDate(date);

			}


			public function search():void{
				pc.GoToControll(1);
			}
			public function searchPage(index:int,dataLength:int):void{
				LockWinTool.lockCurrentWin(this,"搜索帐号信息中");
				var account:String=search_account_id.text;
				var state:Object=search_state.selectedItem.data;
				systemServiceRO.getUsersByCondition(account,state,index-1,index-1+dataLength);
			}
			protected function activeAccount():void
			{
				var selectedIndex:int = table.selectedIndex;
				if(selectedIndex==-1)
					Alert.show("请先选择需要激活的帐号记录");
				else{
					systemServiceRO.activeUser(selectedAccount);
				}
				
			}
			protected function freezeAccount():void
			{
				var selectedIndex:int = table.selectedIndex;
				if(selectedIndex==-1)
					Alert.show("请先选择需要冻结的帐号记录");
				else{
					systemServiceRO.freezeUser(selectedAccount);
				}
				
			}
			protected function resetAccountPW():void
			{
				var selectedIndex:int = table.selectedIndex;
				if(selectedIndex==-1)
					Alert.show("请先选择需要重置密码的帐号记录");
				else{
					systemServiceRO.resetUserPW(selectedAccount);
				}
				
			
			}
			protected function checkDetail():void
			{
				var selectedIndex:int = table.selectedIndex;
				if(selectedIndex==-1){
					Alert.show("请先选择需要查看详细信息的帐号记录");
				}else {
					Alert.show(table.selectedItem.id);
				}
			}
			private function searchAccountHandleAutoCompleteChange():void
			{
				var color:Object = search_account.selectedItem;
				
				if (color != null && color.hasOwnProperty( "account" ))
				{
					search_account_id.text=color.account;
				} else{
					search_account_id.text="";
				}               
			}
			import system.component.WlzxLockWin;
			private var window:WlzxLockWin=null;
			private function lockWin():void{
				
				window=WlzxLockWin(PopUpManager.createPopUp(this,WlzxLockWin,true)); 
				PopUpManager.centerPopUp(window);
				window.percentHeight=100;
				window.percentWidth=100;			
				
			}
			private function unLockWin():void{
				if(window!=null)
					PopUpManager.removePopUp(window);
			}
			
		]]> 		
	</fx:Script> 
	<mx:VBox borderVisible="true" width="100%" height="100%" borderStyle="solid">
			<s:HGroup verticalAlign="middle" horizontalAlign="right" width="100%" fontSize="12">
				<mx:HBox width="100%" height="25" paddingLeft="20"  horizontalGap="10" styleName="CustomHBoxStyle"   verticalAlign="middle">
					<mx:Label text="|"/>
					<mx:LinkButton  label="激活" icon="@Embed(source='../WebContent/resources/common/tools/button_add_icon.png')"  click="activeAccount()"/>
					<mx:Label text="|"/>
					<mx:LinkButton  label="冻结" icon="@Embed(source='../WebContent/resources/common/tools/button_edit_icon.png')" click="freezeAccount()" />
					<mx:Label text="|"/>
					<mx:LinkButton  label="密码重置" icon="@Embed(source='../WebContent/resources/common/tools/button_delete_icon.png')" click="resetAccountPW()"/>
					<mx:Label text="|"/>
					
				</mx:HBox>
			</s:HGroup>
			<s:VGroup width="100%" height="100%" gap="10" verticalAlign="middle" horizontalAlign="center" >
				<mx:HBox width="100%"  horizontalGap="10" verticalAlign="middle" horizontalAlign="left" borderVisible="true" paddingTop="10" paddingBottom="0"   paddingLeft="10" paddingRight="10">
						
					<component:Fieldset title="条件查询"  width="100%">
						<mx:HBox horizontalScrollPolicy="off" >
						<s:HGroup verticalAlign="middle">
							<s:Label  text="用户姓名" />
							<hc:AutoComplete id="search_account"  labelField="name"  width="200"  matchType="anyPart" prompt="选择"  change="{ searchAccountHandleAutoCompleteChange() }" dropDownItemRenderer="{ searchAccountDropDownItemRenderer }" selectedItemStyleName="none">
								
							</hc:AutoComplete>
							<mx:Label id="search_account_id" visible="false">
								
							</mx:Label>
						</s:HGroup>	
						<s:HGroup verticalAlign="middle">
							<s:Label  text="状态" />
							<mx:ComboBox id="search_state"  dataProvider="{status}" selectedIndex="0"  editable="false"/>
						</s:HGroup>
						<mx:Button  label="搜索"  width="80"   click="search()"/>
						</mx:HBox>
					</component:Fieldset>
					
				</mx:HBox>
				<mx:VBox width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingBottom="10">
						
						<mx:DataGrid id="table" rowCount="10" width="100%" height="100%"    verticalAlign="middle" >
							<mx:columns>
								<mx:DataGridColumn textAlign="center" headerText="帐号" dataField="name" width="80">
								</mx:DataGridColumn>
								
								<mx:DataGridColumn textAlign="center" headerText="姓名" dataField="id" width="80">
										<mx:itemRenderer>
											<fx:Component>
												<mx:Label text="{parentApplication.getTeacherNameByAccountId(data.id)}"/>
											</fx:Component>
										</mx:itemRenderer>
								</mx:DataGridColumn>
								
								<mx:DataGridColumn textAlign="center" headerText="邮箱" dataField="email" width="100">
									<mx:itemRenderer>
										<fx:Component>
											<mx:Label text="{data.email==null?'未填写':data.email}"/>
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="主部门" dataField="teacherDepartmentName" width="100">
									<mx:itemRenderer>
										<fx:Component>
											<mx:Label htmlText="{data.mainDR==null?'未指定':parentApplication.getDepartmentNameById(data.mainDR.departmentId)}"/>									
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="主职务" dataField="teacherPosition" width="100">
									<mx:itemRenderer>
										<fx:Component>
											<mx:Label htmlText="{data.mainDR==null?'未指定':parentApplication.getRoleNameById(data.mainDR.roleId)}"/>									
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="创建日期" dataField="creationDate" width="120">
									<mx:itemRenderer>
										<fx:Component>
											<mx:Label text="{this.outerDocument.formatDate(data.creationDate as Date)}"/>
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<!--<mx:DataGridColumn textAlign="center" headerText="最后编辑日期" dataField="modifiedDate" width="120">
									<mx:itemRenderer>
										<fx:Component>
											<mx:Label text="{this.outerDocument.formatDate(data.modifiedDate as Date)}"/>
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>-->
								<mx:DataGridColumn textAlign="center" headerText="最后登陆日期" dataField="lastLoginTime" width="120">
									<mx:itemRenderer>
										<fx:Component>
											<mx:Label text="{data.lastLoginTime==null?'从未登录':this.outerDocument.formatDate(data.lastLoginTime as Date)}"/>
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="最后登陆IP" dataField="lastLoginIP" width="110">
									<mx:itemRenderer>
										<fx:Component>
											<mx:Label text="{data.lastLoginIP==null?'从未登录':data.lastLoginIP}"/>
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn textAlign="center" headerText="状态" dataField="active" width="60">
									<mx:itemRenderer>
										<fx:Component>
											<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off">
												<mx:Image source="{activeSource(data)}"  toolTip="{activeSourceTip(data)}" width="20" height="20">
													<fx:Script>
														<![CDATA[
															
															private function activeSource(data:Object):String{
																if(data!=null){
																	if(data.active==true){
																		return "resources/common/ui/gou.png";
																	}
																	else {
																		return "resources/common/ui/cha.png";
																	}
																} 
																return null;
																
															}
															//提示信息
															private function activeSourceTip(data:Object):String{
																if(data!=null){
																	if(data.active==true){
																		return "正常使用中";
																	}else{
																		return "已冻结停用";
																	}
																}
																return null;
															}
														]]>
													</fx:Script>
												</mx:Image>
											</mx:HBox>
											
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
							</mx:columns>
					</mx:DataGrid>
					<component:SPageController id="pc" useCache="{false}" TargetUI="{table}" callBackFunc="{searchPage}"  PerPage="13" ClientPages="3"  width="100%"/>
				</mx:VBox>
				
			</s:VGroup>
		</mx:VBox>
		
</mx:Module>
