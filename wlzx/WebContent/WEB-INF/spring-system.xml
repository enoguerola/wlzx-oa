<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:flex="http://www.springframework.org/schema/flex"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/flex
       http://www.springframework.org/schema/flex/spring-flex-1.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<flex:message-broker />

	<!-- 配置JDBC、Hibernate -->
	<bean id="systemPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/system/jdbc.properties</value>
				<value>classpath:config/system/hibernate.properties</value>
			</list>
		</property>
	</bean>

	<bean id="systemDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		 <!-- 连接池启动时的初始值 --> 
        <property name="initialSize" value="1"/> 
        <!-- 连接池的最大值 --> 
        <property name="maxActive" value="500"/> 
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 --> 
        <property name="maxIdle" value="3"/> 
        <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 --> 
     
        <property name="minIdle" value="2"/> 
		 <property name="removeAbandoned" value="true"/> 
        <property name="logAbandoned" value="true"/> 
        <!-- 每timeBetweenEvictionRunsMillis毫秒秒检查一次连接池中空闲的连接,把空闲时间超过minEvictableIdleTimeMillis毫秒的连接断开,
        	直到连接池中的连接数到minIdle为止；removeAbandoned true,false,是否清理removeAbandonedTimeout秒没有使用的活动连接,清理后并没有放回连接池 
			removeAbandonedTimeout 活动连接的最大空闲时间 logAbandoned true,false,连接池收回空闲的活动连接时是否打印消息 
        -->
         <property name="timeBetweenEvictionRunsMillis" value="1000"/> 
         <property name="minEvictableIdleTimeMillis" value="1000"/> 
        
	</bean>

	<bean id="systemHibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="jdbc.fetch_size">50</prop>
				<prop key="jdbc.batch_size">25</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop> 
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.query.substitutions">true 1,false 0</prop>
				<prop key="connection.autoReconnect">true</prop>  
		        <prop key="connection.autoReconnectForPools">true</prop>     
		        <prop key="connection.is-connection-validation-required">true</prop> 
			</props>
		</property>
	</bean>

	<bean id="systemSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="systemDataSource" />
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:mapping/system</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<ref local="systemHibernateProperties" />
		</property>
	</bean>
	<!-- 配置事务-->
	<bean id="systemTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="systemDataSource" />
	</bean>
	<tx:advice id="systemTxAdvice" transaction-manager="systemTxManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="insert*" />
			<tx:method name="update*" />
			<tx:method name="delete*" />
		</tx:attributes>
	</tx:advice>
	<aop:aspectj-autoproxy proxy-target-class="true"/> 
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceOperation" expression="execution(* system.service.*.*(..))" />
		<aop:advisor advice-ref="systemTxAdvice" pointcut-ref="serviceOperation" />
	</aop:config>
</beans>